CREATE OR REPLACE 
PACKAGE pkg_reporte
/* Formatted on 11-ago.-2017 15:12:09 (QP5 v5.126) */
IS
    TYPE cursortype IS REF CURSOR;

    FUNCTION devuelve_tributos (prm_codigo IN VARCHAR2)
        RETURN cursortype;

    FUNCTION devuelve_tributos2 (prm_codigo IN VARCHAR2)
        RETURN cursortype;

    FUNCTION devuelve_tributos3 (prm_codigo IN VARCHAR2)
        RETURN cursortype;

    FUNCTION devuelve_tributos3tot (prm_codigo IN VARCHAR2)
        RETURN cursortype;

    FUNCTION devuelve_liquidacion (prm_codigo IN VARCHAR2)
        RETURN cursortype;

    FUNCTION devuelve_liquidacion2 (prm_codigo IN VARCHAR2)
        RETURN cursortype;

    FUNCTION dev_liquidacion (prm_codigo IN VARCHAR2)
        RETURN cursortype;

    FUNCTION dev_liquidacionfecha (prm_codigo   IN VARCHAR2,
                                   prm_fecha    IN VARCHAR2)
        RETURN cursortype;

    FUNCTION dev_tributoomitidofechatotal (prm_codigo   IN VARCHAR2,
                                           prm_fecha    IN VARCHAR2)
        RETURN cursortype;

    FUNCTION dev_totales_multas_dui (prm_codigo     IN VARCHAR2,
                                     prm_fecha      IN VARCHAR2,
                                     prm_key_year   IN VARCHAR2,
                                     prm_key_cuo    IN VARCHAR2,
                                     prm_key_dec    IN VARCHAR2,
                                     prm_key_nber   IN VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION dev_totales_multas_item (prm_codigo     IN VARCHAR2,
                                      prm_fecha      IN VARCHAR2,
                                      prm_key_year   IN VARCHAR2,
                                      prm_key_cuo    IN VARCHAR2,
                                      prm_key_dec    IN VARCHAR2,
                                      prm_key_nber   IN VARCHAR2,
                                      prm_item       IN VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION dev_tributoomitidofecha (prm_codigo   IN VARCHAR2,
                                      prm_fecha    IN VARCHAR2)
        RETURN cursortype;

    FUNCTION devuelve_liquidaciontab (prm_codigo    IN VARCHAR2,
                                      prm_codigo2   IN VARCHAR2)
        RETURN cursortype;

    FUNCTION tipocambio (fecha IN DATE, tipo IN VARCHAR2)
        RETURN NUMBER;

    FUNCTION devuelve_sanciones (prm_codigo IN VARCHAR2)
        RETURN cursortype;

    FUNCTION fecha_vencimiento (prm_aduana   IN VARCHAR2,
                                prm_fecha    IN VARCHAR2)
        RETURN DATE;

    FUNCTION fecha_liquidacion (prm_control    IN VARCHAR2,
                                prm_key_year   IN VARCHAR2,
                                prm_key_cuo    IN VARCHAR2,
                                prm_key_dec    IN VARCHAR2,
                                prm_key_nber   IN VARCHAR2)
        RETURN DATE;

    FUNCTION aumentardiashabiles (prm_gerencia   IN VARCHAR2,
                                  prm_fecha      IN VARCHAR2,
                                  prm_dias       IN NUMBER)
        RETURN DATE;

    FUNCTION c_diligencia1_x (sid IN VARCHAR2)
        RETURN cursortype;

    FUNCTION resumen_controles (prm_supervisor   IN VARCHAR2,
                                prm_fecini       IN VARCHAR2,
                                prm_fecfin       IN VARCHAR2,
                                prm_gerencia     IN VARCHAR2)
        RETURN cursortype;

    FUNCTION resumen_controles_gen (prm_fecini     IN VARCHAR2,
                                    prm_fecfin     IN VARCHAR2,
                                    prm_gerencia   IN VARCHAR2)
        RETURN cursortype;

    FUNCTION resumen_controles_tot (prm_supervisor   IN VARCHAR2,
                                    prm_fecini       IN VARCHAR2,
                                    prm_fecfin       IN VARCHAR2,
                                    prm_gerencia     IN VARCHAR2)
        RETURN cursortype;

    FUNCTION detalle_controles_sup (prm_fiscalizador   IN VARCHAR2,
                                    prm_fecini         IN VARCHAR2,
                                    prm_fecfin         IN VARCHAR2,
                                    prm_tipo_tramite   IN VARCHAR2,
                                    prm_estado         IN VARCHAR2,
                                    prm_gerencia       IN VARCHAR2)
        RETURN cursortype;

    FUNCTION detalle_cantidad_sup (prm_supervisor   IN VARCHAR2,
                                   prm_fecini       IN VARCHAR2,
                                   prm_fecfin       IN VARCHAR2,
                                   prm_gerencia     IN VARCHAR2)
        RETURN cursortype;

    FUNCTION detalle_cantidad_sup_tot (prm_supervisor   IN VARCHAR2,
                                       prm_fecini       IN VARCHAR2,
                                       prm_fecfin       IN VARCHAR2,
                                       prm_gerencia     IN VARCHAR2)
        RETURN cursortype;

    FUNCTION reporte_seguimiento_orden (prm_control    IN VARCHAR2,
                                        prm_gerencia   IN VARCHAR2,
                                        prm_fecini     IN VARCHAR2,
                                        prm_fecfin     IN VARCHAR2,
                                        prm_nit        IN VARCHAR2)
        RETURN cursortype;

    FUNCTION reporte_seguimiento_dui (prm_control    IN VARCHAR2,
                                      prm_gerencia   IN VARCHAR2,
                                      prm_fecini     IN VARCHAR2,
                                      prm_fecfin     IN VARCHAR2,
                                      prm_nit        IN VARCHAR2)
        RETURN cursortype;

    FUNCTION reporte_seguimiento_item (prm_control    IN VARCHAR2,
                                       prm_gerencia   IN VARCHAR2,
                                       prm_fecini     IN VARCHAR2,
                                       prm_fecfin     IN VARCHAR2,
                                       prm_nit        IN VARCHAR2)
        RETURN cursortype;

    FUNCTION reporte_liquidacion_dui (prm_control    IN VARCHAR2,
                                      prm_gerencia   IN VARCHAR2,
                                      prm_fecini     IN VARCHAR2,
                                      prm_fecfin     IN VARCHAR2,
                                      prm_nit        IN VARCHAR2)
        RETURN cursortype;

    FUNCTION reporte_liquidacion_item (prm_control    IN VARCHAR2,
                                       prm_gerencia   IN VARCHAR2,
                                       prm_fecini     IN VARCHAR2,
                                       prm_fecfin     IN VARCHAR2,
                                       prm_nit        IN VARCHAR2)
        RETURN cursortype;

    FUNCTION reporte_recuperacion_orden (prm_control    IN VARCHAR2,
                                         prm_gerencia   IN VARCHAR2,
                                         prm_fecini     IN VARCHAR2,
                                         prm_fecfin     IN VARCHAR2,
                                         prm_nit        IN VARCHAR2)
        RETURN cursortype;

    FUNCTION devuelve_fiscalizadores_reg (prm_control IN VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION devuelve_fiscalizadores_acc (prm_control IN VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION devuelve_fiscalizadores_recibo (prm_control IN VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION devuelve_jefe_reg (prm_control IN VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION devuelve_jefe_acc (prm_control IN VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION devuelve_nombre_fun (prm_usuario IN VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION devuelve_info_conclusion (prm_control           IN VARCHAR2,
                                       prm_tipo_conclusion   IN VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION devuelve_ampliatoria (prm_control   IN VARCHAR2,
                                   prm_dui       IN VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION devuelve_ilicitos (prm_control IN VARCHAR2)
        RETURN VARCHAR2;

    FUNCTION tributo_pagado (prm_key_year   IN VARCHAR2,
                             prm_key_cuo    IN VARCHAR2,
                             prm_key_dec    IN VARCHAR2,
                             prm_key_nber   IN VARCHAR2,
                             prm_fecha      IN VARCHAR2,
                             prm_tax_cod       VARCHAR2)
        RETURN NUMBER;

    FUNCTION tributo_pagado_orden (prm_control   IN VARCHAR2,
                                   prm_tax_cod   IN VARCHAR2)
        RETURN NUMBER;

    FUNCTION multa_pagada_orden (prm_control    IN VARCHAR2,
                                 prm_concepto   IN VARCHAR2)
        RETURN NUMBER;
END;
/

CREATE OR REPLACE 
PACKAGE BODY pkg_reporte
/* Formatted on 11-ago.-2017 15:12:59 (QP5 v5.126) */
IS
    FUNCTION devuelve_tributos (prm_codigo IN VARCHAR2)
        RETURN cursortype
    IS
        ct   cursortype;
    BEGIN
        OPEN ct FOR
              SELECT      u.sad_reg_year
                       || '/'
                       || u.key_cuo
                       || '/C-'
                       || u.sad_reg_nber,
                       TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy'),
                       SUM (gau.saditm_tax_amount - gaa.saditm_tax_amount) ga,
                       SUM (ivu.saditm_tax_amount - iva.saditm_tax_amount) iva,
                       SUM(NVL (icu.saditm_tax_amount, 0)
                           - NVL (ica.saditm_tax_amount, 0))
                           ice,
                       SUM (gau.saditm_tax_amount - gaa.saditm_tax_amount)
                       + SUM (ivu.saditm_tax_amount - iva.saditm_tax_amount)
                       + SUM(NVL (icu.saditm_tax_amount, 0)
                             - NVL (ica.saditm_tax_amount, 0))
                FROM   fis_alcance f,
                       ops$asy.sad_gen u,
                       ops$asy.sad_gen a,
                       ops$asy.sad_itm iu,
                       ops$asy.sad_itm ia,
                       ops$asy.sad_tax gau,
                       ops$asy.sad_tax gaa,
                       ops$asy.sad_tax ivu,
                       ops$asy.sad_tax iva,
                       ops$asy.sad_tax icu,
                       ops$asy.sad_tax ica
               WHERE       u.key_year = a.key_year
                       AND u.key_cuo = a.key_cuo
                       AND u.key_dec = a.key_dec
                       AND u.key_nber = a.key_nber
                       AND a.sad_num =
                              (SELECT   MAX (t.sad_num)
                                 FROM   ops$asy.sad_gen t
                                WHERE       t.key_year = u.key_year
                                        AND t.key_cuo = u.key_cuo
                                        AND t.key_dec = u.key_dec
                                        AND t.key_nber = u.key_nber)
                       AND u.key_year = iu.key_year
                       AND u.key_cuo = iu.key_cuo
                       AND u.key_dec = iu.key_dec
                       AND u.key_nber = iu.key_nber
                       AND u.sad_num = iu.sad_num
                       AND a.key_year = ia.key_year
                       AND a.key_cuo = ia.key_cuo
                       AND a.key_dec = ia.key_dec
                       AND a.key_nber = ia.key_nber
                       AND a.sad_num = ia.sad_num
                       AND iu.key_year = ia.key_year
                       AND iu.key_cuo = ia.key_cuo
                       AND iu.key_dec = ia.key_dec
                       AND iu.key_nber = ia.key_nber
                       AND iu.itm_nber = ia.itm_nber
                       AND iu.key_year = gau.key_year
                       AND iu.key_cuo = gau.key_cuo
                       AND iu.key_dec = gau.key_dec
                       AND iu.key_nber = gau.key_nber
                       AND iu.itm_nber = gau.itm_nber
                       AND iu.sad_num = gau.sad_num
                       AND gau.saditm_tax_code = 'GA'
                       AND ia.key_year = gaa.key_year
                       AND ia.key_cuo = gaa.key_cuo
                       AND ia.key_dec = gaa.key_dec
                       AND ia.key_nber = gaa.key_nber
                       AND ia.itm_nber = gaa.itm_nber
                       AND ia.sad_num = gaa.sad_num
                       AND gaa.saditm_tax_code = 'GA'
                       AND iu.key_year = ivu.key_year
                       AND iu.key_cuo = ivu.key_cuo
                       AND iu.key_dec = ivu.key_dec
                       AND iu.key_nber = ivu.key_nber
                       AND iu.itm_nber = ivu.itm_nber
                       AND iu.sad_num = ivu.sad_num
                       AND ivu.saditm_tax_code = 'IVA'
                       AND ia.key_year = iva.key_year
                       AND ia.key_cuo = iva.key_cuo
                       AND ia.key_dec = iva.key_dec
                       AND ia.key_nber = iva.key_nber
                       AND ia.itm_nber = iva.itm_nber
                       AND ia.sad_num = iva.sad_num
                       AND iva.saditm_tax_code = 'IVA'
                       AND iu.key_year = icu.key_year(+)
                       AND iu.key_cuo = icu.key_cuo(+)
                       AND iu.key_dec = icu.key_dec(+)
                       AND iu.key_nber = icu.key_nber(+)
                       AND iu.itm_nber = icu.itm_nber(+)
                       AND iu.sad_num = icu.sad_num(+)
                       AND icu.saditm_tax_code(+) = 'ICE'
                       AND ia.key_year = ica.key_year(+)
                       AND ia.key_cuo = ica.key_cuo(+)
                       AND ia.key_dec = ica.key_dec(+)
                       AND ia.key_nber = ica.key_nber(+)
                       AND ia.itm_nber = ica.itm_nber(+)
                       AND ia.sad_num = ica.sad_num(+)
                       AND ica.saditm_tax_code(+) = 'ICE'
                       AND u.sad_flw = 1
                       AND u.sad_num = 0
                       AND u.lst_ope = 'U'
                       AND u.key_dec IS NOT NULL
                       AND f.alc_tipo_tramite = 'DUI'
                       AND f.alc_gestion = u.sad_reg_year
                       AND f.alc_aduana = u.key_cuo
                       AND u.sad_reg_serial = 'C'
                       AND f.alc_numero = u.sad_reg_nber
                       AND f.ctl_control_id = prm_codigo
            GROUP BY      u.sad_reg_year
                       || '/'
                       || u.key_cuo
                       || '/C-'
                       || u.sad_reg_nber,
                       TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy')
            UNION
              SELECT      u.sad_reg_year
                       || '/'
                       || u.key_cuo
                       || '/C-'
                       || u.sad_reg_nber,
                       TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy'),
                       SUM (gau.saditm_tax_amount - gaa.saditm_tax_amount) ga,
                       SUM (ivu.saditm_tax_amount - iva.saditm_tax_amount) iva,
                       SUM(NVL (icu.saditm_tax_amount, 0)
                           - NVL (ica.saditm_tax_amount, 0))
                           ice,
                       SUM (gau.saditm_tax_amount - gaa.saditm_tax_amount)
                       + SUM (ivu.saditm_tax_amount - iva.saditm_tax_amount)
                       + SUM(NVL (icu.saditm_tax_amount, 0)
                             - NVL (ica.saditm_tax_amount, 0))
                FROM   fis_alcance f,
                       ops$asy.sad_gen u,
                       ops$asy.sad_gen a,
                       ops$asy.sad_itm iu,
                       ops$asy.sad_itm ia,
                       ops$asy.sad_tax gau,
                       ops$asy.sad_tax gaa,
                       ops$asy.sad_tax ivu,
                       ops$asy.sad_tax iva,
                       ops$asy.sad_tax icu,
                       ops$asy.sad_tax ica
               WHERE       u.key_year = a.key_year
                       AND u.key_cuo = a.key_cuo
                       AND u.key_dec IS NULL
                       AND a.key_dec IS NULL
                       AND u.key_nber = a.key_nber
                       AND a.sad_num =
                              (SELECT   MAX (t.sad_num)
                                 FROM   ops$asy.sad_gen t
                                WHERE       t.key_year = u.key_year
                                        AND t.key_cuo = u.key_cuo
                                        AND t.key_dec = u.key_dec
                                        AND t.key_nber = u.key_nber)
                       AND u.key_year = iu.key_year
                       AND u.key_cuo = iu.key_cuo
                       AND iu.key_dec IS NULL
                       AND u.key_nber = iu.key_nber
                       AND u.sad_num = iu.sad_num
                       AND a.key_year = ia.key_year
                       AND a.key_cuo = ia.key_cuo
                       AND ia.key_dec IS NULL
                       AND a.key_nber = ia.key_nber
                       AND a.sad_num = ia.sad_num
                       AND iu.key_year = ia.key_year
                       AND iu.key_cuo = ia.key_cuo
                       AND iu.key_nber = ia.key_nber
                       AND iu.itm_nber = ia.itm_nber
                       AND iu.key_year = gau.key_year
                       AND iu.key_cuo = gau.key_cuo
                       AND gau.key_dec IS NULL
                       AND iu.key_nber = gau.key_nber
                       AND iu.itm_nber = gau.itm_nber
                       AND iu.sad_num = gau.sad_num
                       AND gau.saditm_tax_code = 'GA'
                       AND ia.key_year = gaa.key_year
                       AND ia.key_cuo = gaa.key_cuo
                       AND gaa.key_dec IS NULL
                       AND ia.key_nber = gaa.key_nber
                       AND ia.itm_nber = gaa.itm_nber
                       AND ia.sad_num = gaa.sad_num
                       AND gaa.saditm_tax_code = 'GA'
                       AND iu.key_year = ivu.key_year
                       AND iu.key_cuo = ivu.key_cuo
                       AND ivu.key_dec IS NULL
                       AND iu.key_nber = ivu.key_nber
                       AND iu.itm_nber = ivu.itm_nber
                       AND iu.sad_num = ivu.sad_num
                       AND ivu.saditm_tax_code = 'IVA'
                       AND ia.key_year = iva.key_year
                       AND ia.key_cuo = iva.key_cuo
                       AND iva.key_dec IS NULL
                       AND ia.key_nber = iva.key_nber
                       AND ia.itm_nber = iva.itm_nber
                       AND ia.sad_num = iva.sad_num
                       AND iva.saditm_tax_code = 'IVA'
                       AND iu.key_year = icu.key_year(+)
                       AND iu.key_cuo = icu.key_cuo(+)
                       AND icu.key_dec(+) IS NULL
                       AND iu.key_nber = icu.key_nber(+)
                       AND iu.itm_nber = icu.itm_nber(+)
                       AND iu.sad_num = icu.sad_num(+)
                       AND icu.saditm_tax_code(+) = 'ICE'
                       AND ia.key_year = ica.key_year(+)
                       AND ia.key_cuo = ica.key_cuo(+)
                       AND ica.key_dec(+) IS NULL
                       AND ia.key_nber = ica.key_nber(+)
                       AND ia.itm_nber = ica.itm_nber(+)
                       AND ia.sad_num = ica.sad_num(+)
                       AND ica.saditm_tax_code(+) = 'ICE'
                       AND u.sad_flw = 1
                       AND u.sad_num = 0
                       AND u.lst_ope = 'U'
                       AND f.alc_tipo_tramite = 'DUI'
                       AND f.alc_gestion = u.sad_reg_year
                       AND f.alc_aduana = u.key_cuo
                       AND u.sad_reg_serial = 'C'
                       AND f.alc_numero = u.sad_reg_nber
                       AND f.ctl_control_id = prm_codigo
            GROUP BY      u.sad_reg_year
                       || '/'
                       || u.key_cuo
                       || '/C-'
                       || u.sad_reg_nber,
                       TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy')
            ORDER BY   2;

        RETURN ct;
    END;

    FUNCTION devuelve_tributos2 (prm_codigo IN VARCHAR2)
        RETURN cursortype
    IS
        ct   cursortype;
    BEGIN
        OPEN ct FOR
              SELECT   t.itm,
                       t.reg_year,
                       t.key_cuo,
                       t.reg_nber,
                       t.fecha_reg,
                       t.fecha_calculo,
                       t.ga_dt dt_ga,
                       t.iva_dt dt_iva,
                       t.ice_dt dt_ice,
                       t.iehd_dt dt_iehd,
                       t.icd_dt dt_icd,
                       ROUND (
                           (  t.ga_dt
                            + t.iva_dt
                            + t.ice_dt
                            + t.iehd_dt
                            + t.icd_dt)
                           * t.tc_ufvfecvenc,
                           2)
                           dt_total,
                       ( (t.to_ga + t.to_iva + t.to_ice + t.to_iehd + t.to_icd)
                        / t.tc_ufvhoy)
                       * t.tc_ufvfecvenc
                           sancionufv,
                       ( ( (  t.to_ga
                            + t.to_iva
                            + t.to_ice
                            + t.to_iehd
                            + t.to_icd)
                          / t.tc_ufvhoy)
                        * t.tc_ufvfecvenc)
                       / t.tc_ufvhoy
                           sancionbs,
                       ROUND (
                           (  t.ga_dt
                            + t.iva_dt
                            + t.ice_dt
                            + t.iehd_dt
                            + t.icd_dt)
                           + ( ( (  t.to_ga
                                  + t.to_iva
                                  + t.to_ice
                                  + t.to_iehd
                                  + t.to_icd)
                                / t.tc_ufvhoy)
                              * t.tc_ufvfecvenc),
                           2)
                           adeudo_totalbs
                FROM   (SELECT   iu.itm_nber itm,
                                 u.sad_reg_year reg_year,
                                 u.key_cuo key_cuo,
                                 u.sad_reg_nber reg_nber,
                                 TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')
                                     fecha_reg,
                                 TO_CHAR (SYSDATE, 'dd/mm/yyyy') fecha_calculo,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     ga_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     iva_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     ice_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     iehd_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     icd_dt,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'UFV')
                                     tc_ufvfecvenc,
                                 pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                         'UFV')
                                     tc_ufvhoy,
                                 gau.saditm_tax_amount - gaa.saditm_tax_amount
                                     to_ga,
                                 ivau.saditm_tax_amount
                                 - ivaa.saditm_tax_amount
                                     to_iva,
                                 NVL (iceu.saditm_tax_amount, 0)
                                 - NVL (icea.saditm_tax_amount, 0)
                                     to_ice,
                                 NVL (iehdu.saditm_tax_amount, 0)
                                 - NVL (iehda.saditm_tax_amount, 0)
                                     to_iehd,
                                 NVL (icdu.saditm_tax_amount, 0)
                                 - NVL (icda.saditm_tax_amount, 0)
                                     to_icd
                          FROM   ops$asy.sad_gen u,
                                 ops$asy.sad_gen a,
                                 ops$asy.sad_itm iu,
                                 ops$asy.sad_itm ia,
                                 ops$asy.sad_tax gau,
                                 ops$asy.sad_tax gaa,
                                 ops$asy.sad_tax ivau,
                                 ops$asy.sad_tax ivaa,
                                 ops$asy.sad_tax iceu,
                                 ops$asy.sad_tax icea,
                                 ops$asy.sad_tax iehdu,
                                 ops$asy.sad_tax iehda,
                                 ops$asy.sad_tax icdu,
                                 ops$asy.sad_tax icda,
                                 fis_alcance f,
                                 fis_notificacion n
                         WHERE       u.key_year = a.key_year
                                 AND u.key_cuo = a.key_cuo
                                 AND u.key_dec IS NOT NULL
                                 AND u.key_dec = a.key_dec
                                 AND u.key_nber = a.key_nber
                                 AND a.sad_num =
                                        NVL (
                                            (SELECT   MAX (x.sad_pst_num)
                                               FROM   ops$asy.sad_gen x
                                              WHERE   x.key_cuo = u.key_cuo
                                                      AND x.sad_reg_year =
                                                             u.sad_reg_year
                                                      AND x.sad_reg_serial =
                                                             u.sad_reg_serial
                                                      AND x.sad_reg_nber =
                                                             u.sad_reg_nber
                                                      AND x.sad_pst_dat <=
                                                             TO_DATE (
                                                                 n.not_fecha_notificacion,
                                                                 'dd/mm/yyyy')),
                                            0)
                                 AND u.sad_flw = 1
                                 AND u.sad_num = 0
                                 AND u.lst_ope = 'U'
                                 AND u.key_year = iu.key_year
                                 AND u.key_cuo = iu.key_cuo
                                 AND u.key_dec = iu.key_dec
                                 AND u.key_nber = iu.key_nber
                                 AND u.sad_num = iu.sad_num
                                 AND a.key_year = ia.key_year
                                 AND a.key_cuo = ia.key_cuo
                                 AND a.key_dec = ia.key_dec
                                 AND a.key_nber = ia.key_nber
                                 AND a.sad_num = ia.sad_num
                                 AND iu.key_year = ia.key_year
                                 AND iu.key_cuo = ia.key_cuo
                                 AND iu.key_dec = ia.key_dec
                                 AND iu.key_nber = ia.key_nber
                                 AND iu.itm_nber = ia.itm_nber
                                 --tributo GA
                                 AND iu.key_year = gau.key_year
                                 AND iu.key_cuo = gau.key_cuo
                                 AND iu.key_dec = gau.key_dec
                                 AND iu.key_nber = gau.key_nber
                                 AND iu.itm_nber = gau.itm_nber
                                 AND iu.sad_num = gau.sad_num
                                 AND gau.saditm_tax_code = 'GA'
                                 AND ia.key_year = gaa.key_year
                                 AND ia.key_cuo = gaa.key_cuo
                                 AND ia.key_dec = gaa.key_dec
                                 AND ia.key_nber = gaa.key_nber
                                 AND ia.itm_nber = gaa.itm_nber
                                 AND ia.sad_num = gaa.sad_num
                                 AND gaa.saditm_tax_code = 'GA'
                                 --tributo IVA
                                 AND iu.key_year = ivau.key_year
                                 AND iu.key_cuo = ivau.key_cuo
                                 AND iu.key_dec = ivau.key_dec
                                 AND iu.key_nber = ivau.key_nber
                                 AND iu.itm_nber = ivau.itm_nber
                                 AND iu.sad_num = ivau.sad_num
                                 AND ivau.saditm_tax_code = 'IVA'
                                 AND ia.key_year = ivaa.key_year
                                 AND ia.key_cuo = ivaa.key_cuo
                                 AND ia.key_dec = ivaa.key_dec
                                 AND ia.key_nber = ivaa.key_nber
                                 AND ia.itm_nber = ivaa.itm_nber
                                 AND ia.sad_num = ivaa.sad_num
                                 AND ivaa.saditm_tax_code = 'IVA'
                                 --tributo ICE
                                 AND iu.key_year = iceu.key_year(+)
                                 AND iu.key_cuo = iceu.key_cuo(+)
                                 AND iu.key_dec = iceu.key_dec(+)
                                 AND iu.key_nber = iceu.key_nber(+)
                                 AND iu.itm_nber = iceu.itm_nber(+)
                                 AND iu.sad_num = iceu.sad_num(+)
                                 AND iceu.saditm_tax_code(+) = 'ICE'
                                 AND ia.key_year = icea.key_year(+)
                                 AND ia.key_cuo = icea.key_cuo(+)
                                 AND ia.key_dec = icea.key_dec(+)
                                 AND ia.key_nber = icea.key_nber(+)
                                 AND ia.itm_nber = icea.itm_nber(+)
                                 AND ia.sad_num = icea.sad_num(+)
                                 AND icea.saditm_tax_code(+) = 'ICE'
                                 --tributo IEHD
                                 AND iu.key_year = iehdu.key_year(+)
                                 AND iu.key_cuo = iehdu.key_cuo(+)
                                 AND iu.key_dec = iehdu.key_dec(+)
                                 AND iu.key_nber = iehdu.key_nber(+)
                                 AND iu.itm_nber = iehdu.itm_nber(+)
                                 AND iu.sad_num = iehdu.sad_num(+)
                                 AND iehdu.saditm_tax_code(+) = 'IEHD'
                                 AND ia.key_year = iehda.key_year(+)
                                 AND ia.key_cuo = iehda.key_cuo(+)
                                 AND ia.key_dec = iehda.key_dec(+)
                                 AND ia.key_nber = iehda.key_nber(+)
                                 AND ia.itm_nber = iehda.itm_nber(+)
                                 AND ia.sad_num = iehda.sad_num(+)
                                 AND iehda.saditm_tax_code(+) = 'IEHD'
                                 --tributo ICD
                                 AND iu.key_year = icdu.key_year(+)
                                 AND iu.key_cuo = icdu.key_cuo(+)
                                 AND iu.key_dec = icdu.key_dec(+)
                                 AND iu.key_nber = icdu.key_nber(+)
                                 AND iu.itm_nber = icdu.itm_nber(+)
                                 AND iu.sad_num = icdu.sad_num(+)
                                 AND icdu.saditm_tax_code(+) = 'ICD'
                                 AND ia.key_year = icda.key_year(+)
                                 AND ia.key_cuo = icda.key_cuo(+)
                                 AND ia.key_dec = icda.key_dec(+)
                                 AND ia.key_nber = icda.key_nber(+)
                                 AND ia.itm_nber = icda.itm_nber(+)
                                 AND ia.sad_num = icda.sad_num(+)
                                 AND icda.saditm_tax_code(+) = 'ICD'
                                 --para recuperar informacion del control
                                 AND f.alc_tipo_tramite = 'DUI'
                                 AND f.alc_gestion = u.sad_reg_year
                                 AND f.alc_aduana = u.key_cuo
                                 AND u.sad_reg_serial = 'C'
                                 AND f.alc_numero = u.sad_reg_nber
                                 AND f.ctl_control_id = prm_codigo
                                 AND f.alc_num = 0
                                 AND f.alc_lstope = 'U'
                                 AND f.ctl_control_id = n.ctl_control_id
                                 AND n.not_num = 0
                                 AND n.not_lstope = 'U'
                        UNION
                        SELECT   iu.itm_nber itm,
                                 u.sad_reg_year reg_year,
                                 u.key_cuo key_cuo,
                                 u.sad_reg_nber reg_nber,
                                 TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')
                                     fecha_reg,
                                 TO_CHAR (SYSDATE, 'dd/mm/yyyy') fecha_calculo,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     ga_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     iva_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     ice_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     iehd_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     icd_dt,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'UFV')
                                     tc_ufvfecvenc,
                                 pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                         'UFV')
                                     tc_ufvhoy,
                                 gau.saditm_tax_amount - gaa.saditm_tax_amount
                                     to_ga,
                                 ivau.saditm_tax_amount
                                 - ivaa.saditm_tax_amount
                                     to_iva,
                                 NVL (iceu.saditm_tax_amount, 0)
                                 - NVL (icea.saditm_tax_amount, 0)
                                     to_ice,
                                 NVL (iehdu.saditm_tax_amount, 0)
                                 - NVL (iehda.saditm_tax_amount, 0)
                                     to_iehd,
                                 NVL (icdu.saditm_tax_amount, 0)
                                 - NVL (icda.saditm_tax_amount, 0)
                                     to_icd
                          FROM   ops$asy.sad_gen u,
                                 ops$asy.sad_gen a,
                                 ops$asy.sad_itm iu,
                                 ops$asy.sad_itm ia,
                                 ops$asy.sad_tax gau,
                                 ops$asy.sad_tax gaa,
                                 ops$asy.sad_tax ivau,
                                 ops$asy.sad_tax ivaa,
                                 ops$asy.sad_tax iceu,
                                 ops$asy.sad_tax icea,
                                 ops$asy.sad_tax iehdu,
                                 ops$asy.sad_tax iehda,
                                 ops$asy.sad_tax icdu,
                                 ops$asy.sad_tax icda,
                                 fis_alcance f,
                                 fis_notificacion n
                         WHERE       u.key_year = a.key_year
                                 AND u.key_cuo = a.key_cuo
                                 AND u.key_dec IS NULL
                                 AND a.key_dec IS NULL
                                 AND u.key_nber = a.key_nber
                                 AND a.sad_num =
                                        NVL (
                                            (SELECT   MAX (x.sad_pst_num)
                                               FROM   ops$asy.sad_gen x
                                              WHERE   x.key_cuo = u.key_cuo
                                                      AND x.sad_reg_year =
                                                             u.sad_reg_year
                                                      AND x.sad_reg_serial =
                                                             u.sad_reg_serial
                                                      AND x.sad_reg_nber =
                                                             u.sad_reg_nber
                                                      AND x.sad_pst_dat <=
                                                             TO_DATE (
                                                                 n.not_fecha_notificacion,
                                                                 'dd/mm/yyyy')),
                                            0)
                                 AND u.sad_flw = 1
                                 AND u.sad_num = 0
                                 AND u.lst_ope = 'U'
                                 AND u.key_year = iu.key_year
                                 AND u.key_cuo = iu.key_cuo
                                 AND iu.key_dec IS NULL
                                 AND u.key_nber = iu.key_nber
                                 AND u.sad_num = iu.sad_num
                                 AND a.key_year = ia.key_year
                                 AND a.key_cuo = ia.key_cuo
                                 AND ia.key_dec IS NULL
                                 AND a.key_nber = ia.key_nber
                                 AND a.sad_num = ia.sad_num
                                 AND iu.key_year = ia.key_year
                                 AND iu.key_cuo = ia.key_cuo
                                 AND iu.key_nber = ia.key_nber
                                 AND iu.itm_nber = ia.itm_nber
                                 --tributo GA
                                 AND iu.key_year = gau.key_year
                                 AND iu.key_cuo = gau.key_cuo
                                 AND gau.key_dec IS NULL
                                 AND iu.key_nber = gau.key_nber
                                 AND iu.itm_nber = gau.itm_nber
                                 AND iu.sad_num = gau.sad_num
                                 AND gau.saditm_tax_code = 'GA'
                                 AND ia.key_year = gaa.key_year
                                 AND ia.key_cuo = gaa.key_cuo
                                 AND gaa.key_dec IS NULL
                                 AND ia.key_nber = gaa.key_nber
                                 AND ia.itm_nber = gaa.itm_nber
                                 AND ia.sad_num = gaa.sad_num
                                 AND gaa.saditm_tax_code = 'GA'
                                 --tributo IVA
                                 AND iu.key_year = ivau.key_year
                                 AND iu.key_cuo = ivau.key_cuo
                                 AND ivau.key_dec IS NULL
                                 AND iu.key_nber = ivau.key_nber
                                 AND iu.itm_nber = ivau.itm_nber
                                 AND iu.sad_num = ivau.sad_num
                                 AND ivau.saditm_tax_code = 'IVA'
                                 AND ia.key_year = ivaa.key_year
                                 AND ia.key_cuo = ivaa.key_cuo
                                 AND ivaa.key_dec IS NULL
                                 AND ia.key_nber = ivaa.key_nber
                                 AND ia.itm_nber = ivaa.itm_nber
                                 AND ia.sad_num = ivaa.sad_num
                                 AND ivaa.saditm_tax_code = 'IVA'
                                 --tributo ICE
                                 AND iu.key_year = iceu.key_year(+)
                                 AND iu.key_cuo = iceu.key_cuo(+)
                                 AND iceu.key_dec(+) IS NULL
                                 AND iu.key_nber = iceu.key_nber(+)
                                 AND iu.itm_nber = iceu.itm_nber(+)
                                 AND iu.sad_num = iceu.sad_num(+)
                                 AND iceu.saditm_tax_code(+) = 'ICE'
                                 AND ia.key_year = icea.key_year(+)
                                 AND ia.key_cuo = icea.key_cuo(+)
                                 AND icea.key_dec(+) IS NULL
                                 AND ia.key_nber = icea.key_nber(+)
                                 AND ia.itm_nber = icea.itm_nber(+)
                                 AND ia.sad_num = icea.sad_num(+)
                                 AND icea.saditm_tax_code(+) = 'ICE'
                                 --tributo IEHD
                                 AND iu.key_year = iehdu.key_year(+)
                                 AND iu.key_cuo = iehdu.key_cuo(+)
                                 AND iehdu.key_dec(+) IS NULL
                                 AND iu.key_nber = iehdu.key_nber(+)
                                 AND iu.itm_nber = iehdu.itm_nber(+)
                                 AND iu.sad_num = iehdu.sad_num(+)
                                 AND iehdu.saditm_tax_code(+) = 'IEHD'
                                 AND ia.key_year = iehda.key_year(+)
                                 AND ia.key_cuo = iehda.key_cuo(+)
                                 AND iehda.key_dec(+) IS NULL
                                 AND ia.key_nber = iehda.key_nber(+)
                                 AND ia.itm_nber = iehda.itm_nber(+)
                                 AND ia.sad_num = iehda.sad_num(+)
                                 AND iehda.saditm_tax_code(+) = 'IEHD'
                                 --tributo ICD
                                 AND iu.key_year = icdu.key_year(+)
                                 AND iu.key_cuo = icdu.key_cuo(+)
                                 AND icdu.key_dec(+) IS NULL
                                 AND iu.key_nber = icdu.key_nber(+)
                                 AND iu.itm_nber = icdu.itm_nber(+)
                                 AND iu.sad_num = icdu.sad_num(+)
                                 AND icdu.saditm_tax_code(+) = 'ICD'
                                 AND ia.key_year = icda.key_year(+)
                                 AND ia.key_cuo = icda.key_cuo(+)
                                 AND icda.key_dec(+) IS NULL
                                 AND ia.key_nber = icda.key_nber(+)
                                 AND ia.itm_nber = icda.itm_nber(+)
                                 AND ia.sad_num = icda.sad_num(+)
                                 AND icda.saditm_tax_code(+) = 'ICD'
                                 --para recuperar informacion del control
                                 AND f.alc_tipo_tramite = 'DUI'
                                 AND f.alc_gestion = u.sad_reg_year
                                 AND f.alc_aduana = u.key_cuo
                                 AND u.sad_reg_serial = 'C'
                                 AND f.alc_numero = u.sad_reg_nber
                                 AND f.ctl_control_id = prm_codigo
                                 AND f.alc_num = 0
                                 AND f.alc_lstope = 'U'
                                 AND f.ctl_control_id = n.ctl_control_id
                                 AND n.not_num = 0
                                 AND n.not_lstope = 'U') t
            ORDER BY   2,
                       3,
                       4,
                       1;

        RETURN ct;
    END;



    FUNCTION devuelve_tributos3 (prm_codigo IN VARCHAR2)
        RETURN cursortype
    IS
        ct            cursortype;
        existe        NUMBER;
        dias          NUMBER;
        fechanot      DATE;
        coeficiente   NUMBER (10, 2) := 0;
    BEGIN
        SELECT   COUNT (1)
          INTO   existe
          FROM   fis_estado a
         WHERE       a.ctl_control_id = prm_codigo
                 AND a.est_num = 0
                 AND a.est_lstope = 'U'
                 AND a.est_estado = 'CONCLUIDO';

        IF existe = 0
        THEN
            fechanot := NULL;
        ELSE
            SELECT   COUNT (1)
              INTO   existe
              FROM   fis_con_viscargo a
             WHERE       a.ctl_control_id = prm_codigo
                     AND a.cvc_num = 0
                     AND a.cvc_lstope = 'U';

            IF existe = 0
            THEN
                fechanot := NULL;
            ELSE
                SELECT   a.cvc_fecha_notificacion
                  INTO   fechanot
                  FROM   fis_con_viscargo a
                 WHERE       a.ctl_control_id = prm_codigo
                         AND a.cvc_num = 0
                         AND a.cvc_lstope = 'U';

                dias := TRUNC (SYSDATE) - fechanot;

                IF dias <= 10
                THEN
                    coeficiente := 0;
                ELSE
                    coeficiente := 0.2;
                END IF;
            END IF;
        END IF;

        OPEN ct FOR
              SELECT   t.reg_year || '/' || t.key_cuo || '/C-' || t.reg_nber,
                       t.fecha_reg,
                       t.fecha_calculo,
                       t.ga_dt dt_ga,
                       t.iva_dt dt_iva,
                       t.ice_dt dt_ice,
                       t.iehd_dt dt_iehd,
                       t.icd_dt dt_icd,
                       ROUND (
                           (  t.ga_dt
                            + t.iva_dt
                            + t.ice_dt
                            + t.iehd_dt
                            + t.icd_dt)
                           * t.tc_ufvfecvenc,
                           2)
                           dt_total,
                       ROUND (
                           ( (  t.to_ga
                              + t.to_iva
                              + t.to_ice
                              + t.to_iehd
                              + t.to_icd)
                            / t.tc_ufvhoy)
                           * t.tc_ufvfecvenc,
                           2)
                           sancionufv,
                       ROUND (
                           coeficiente
                           * ( ( (  t.to_ga
                                  + t.to_iva
                                  + t.to_ice
                                  + t.to_iehd
                                  + t.to_icd)
                                / t.tc_ufvhoy)
                              * t.tc_ufvfecvenc)
                           / t.tc_ufvhoy,
                           2)
                           sancionbs,
                       ROUND (
                           coeficiente
                           * (  t.ga_dt
                              + t.iva_dt
                              + t.ice_dt
                              + t.iehd_dt
                              + t.icd_dt)
                           + ( ( (  t.to_ga
                                  + t.to_iva
                                  + t.to_ice
                                  + t.to_iehd
                                  + t.to_icd)
                                / t.tc_ufvhoy)
                              * t.tc_ufvfecvenc),
                           2)
                           adeudo_totalbs,
                       fechanot,
                       coeficiente
                FROM   (SELECT   x.sad_reg_year reg_year,
                                 x.key_cuo key_cuo,
                                 x.sad_reg_nber reg_nber,
                                 TO_CHAR (x.sad_reg_date, 'dd/mm/yyyy')
                                     fecha_reg,
                                 TO_CHAR (SYSDATE, 'dd/mm/yyyy') fecha_calculo,
                                 ops$asy.fcalculadeudatributaria (
                                     x.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     x.key_year,
                                     x.key_cuo,
                                     x.key_dec,
                                     x.key_nber,
                                     x.gau - x.gaa,
                                     x.sad_top_cod)
                                     ga_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     x.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     x.key_year,
                                     x.key_cuo,
                                     x.key_dec,
                                     x.key_nber,
                                     x.ivau - x.ivaa,
                                     x.sad_top_cod)
                                     iva_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     x.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     x.key_year,
                                     x.key_cuo,
                                     x.key_dec,
                                     x.key_nber,
                                     NVL (x.iceu, 0) - NVL (x.icea, 0),
                                     x.sad_top_cod)
                                     ice_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     x.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     x.key_year,
                                     x.key_cuo,
                                     x.key_dec,
                                     x.key_nber,
                                     NVL (x.iehdu, 0) - NVL (x.iehda, 0),
                                     x.sad_top_cod)
                                     iehd_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     x.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     x.key_year,
                                     x.key_cuo,
                                     x.key_dec,
                                     x.key_nber,
                                     NVL (x.icdu, 0) - NVL (x.icda, 0),
                                     x.sad_top_cod)
                                     icd_dt,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         x.key_cuo,
                                         TO_CHAR (x.sad_reg_date, 'dd/mm/yyyy')),
                                     'UFV')
                                     tc_ufvfecvenc,
                                 pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                         'UFV')
                                     tc_ufvhoy,
                                 x.gau - x.gaa to_ga,
                                 x.ivau - x.ivaa to_iva,
                                 x.iceu - x.icea to_ice,
                                 x.iehdu - x.iehda to_iehd,
                                 x.icdu - x.icda to_icd
                          FROM   (  SELECT   u.sad_reg_year,
                                             u.key_cuo,
                                             u.sad_reg_nber,
                                             u.sad_reg_date,
                                             u.key_year,
                                             u.key_dec,
                                             u.key_nber,
                                             u.sad_top_cod,
                                             SUM (gau.saditm_tax_amount) gau,
                                             SUM (gaa.saditm_tax_amount) gaa,
                                             SUM (ivau.saditm_tax_amount) ivau,
                                             SUM (ivaa.saditm_tax_amount) ivaa,
                                             SUM (
                                                 NVL (iceu.saditm_tax_amount, 0))
                                                 iceu,
                                             SUM (
                                                 NVL (icea.saditm_tax_amount, 0))
                                                 icea,
                                             SUM(NVL (iehdu.saditm_tax_amount, 0))
                                                 iehdu,
                                             SUM(NVL (iehda.saditm_tax_amount, 0))
                                                 iehda,
                                             SUM (
                                                 NVL (icdu.saditm_tax_amount, 0))
                                                 icdu,
                                             SUM (
                                                 NVL (icda.saditm_tax_amount, 0))
                                                 icda
                                      FROM   ops$asy.sad_gen u,
                                             ops$asy.sad_gen a,
                                             ops$asy.sad_itm iu,
                                             ops$asy.sad_itm ia,
                                             ops$asy.sad_tax gau,
                                             ops$asy.sad_tax gaa,
                                             ops$asy.sad_tax ivau,
                                             ops$asy.sad_tax ivaa,
                                             ops$asy.sad_tax iceu,
                                             ops$asy.sad_tax icea,
                                             ops$asy.sad_tax iehdu,
                                             ops$asy.sad_tax iehda,
                                             ops$asy.sad_tax icdu,
                                             ops$asy.sad_tax icda,
                                             fis_alcance f,
                                             fis_notificacion n
                                     WHERE       u.key_year = a.key_year
                                             AND u.key_cuo = a.key_cuo
                                             AND u.key_dec IS NOT NULL
                                             AND u.key_dec = a.key_dec
                                             AND u.key_nber = a.key_nber
                                             AND a.sad_num =
                                                    NVL (
                                                        (SELECT   MAX(x.sad_pst_num)
                                                           FROM   ops$asy.sad_gen x
                                                          WHERE   x.key_cuo =
                                                                      u.key_cuo
                                                                  AND x.sad_reg_year =
                                                                         u.sad_reg_year
                                                                  AND x.sad_reg_serial =
                                                                         u.sad_reg_serial
                                                                  AND x.sad_reg_nber =
                                                                         u.sad_reg_nber
                                                                  AND x.sad_pst_dat <=
                                                                         n.not_fecha_notificacion),
                                                        0)
                                             AND u.sad_flw = 1
                                             AND u.sad_num = 0
                                             AND u.lst_ope = 'U'
                                             AND u.key_year = iu.key_year
                                             AND u.key_cuo = iu.key_cuo
                                             AND u.key_dec = iu.key_dec
                                             AND u.key_nber = iu.key_nber
                                             AND u.sad_num = iu.sad_num
                                             AND a.key_year = ia.key_year
                                             AND a.key_cuo = ia.key_cuo
                                             AND a.key_dec = ia.key_dec
                                             AND a.key_nber = ia.key_nber
                                             AND a.sad_num = ia.sad_num
                                             AND iu.key_year = ia.key_year
                                             AND iu.key_cuo = ia.key_cuo
                                             AND iu.key_dec = ia.key_dec
                                             AND iu.key_nber = ia.key_nber
                                             AND iu.itm_nber = ia.itm_nber
                                             --tributo GA
                                             AND iu.key_year = gau.key_year
                                             AND iu.key_cuo = gau.key_cuo
                                             AND iu.key_dec = gau.key_dec
                                             AND iu.key_nber = gau.key_nber
                                             AND iu.itm_nber = gau.itm_nber
                                             AND iu.sad_num = gau.sad_num
                                             AND gau.saditm_tax_code = 'GA'
                                             AND ia.key_year = gaa.key_year
                                             AND ia.key_cuo = gaa.key_cuo
                                             AND ia.key_dec = gaa.key_dec
                                             AND ia.key_nber = gaa.key_nber
                                             AND ia.itm_nber = gaa.itm_nber
                                             AND ia.sad_num = gaa.sad_num
                                             AND gaa.saditm_tax_code = 'GA'
                                             --tributo IVA
                                             AND iu.key_year = ivau.key_year
                                             AND iu.key_cuo = ivau.key_cuo
                                             AND iu.key_dec = ivau.key_dec
                                             AND iu.key_nber = ivau.key_nber
                                             AND iu.itm_nber = ivau.itm_nber
                                             AND iu.sad_num = ivau.sad_num
                                             AND ivau.saditm_tax_code = 'IVA'
                                             AND ia.key_year = ivaa.key_year
                                             AND ia.key_cuo = ivaa.key_cuo
                                             AND ia.key_dec = ivaa.key_dec
                                             AND ia.key_nber = ivaa.key_nber
                                             AND ia.itm_nber = ivaa.itm_nber
                                             AND ia.sad_num = ivaa.sad_num
                                             AND ivaa.saditm_tax_code = 'IVA'
                                             --tributo ICE
                                             AND iu.key_year = iceu.key_year(+)
                                             AND iu.key_cuo = iceu.key_cuo(+)
                                             AND iu.key_dec = iceu.key_dec(+)
                                             AND iu.key_nber = iceu.key_nber(+)
                                             AND iu.itm_nber = iceu.itm_nber(+)
                                             AND iu.sad_num = iceu.sad_num(+)
                                             AND iceu.saditm_tax_code(+) = 'ICE'
                                             AND ia.key_year = icea.key_year(+)
                                             AND ia.key_cuo = icea.key_cuo(+)
                                             AND ia.key_dec = icea.key_dec(+)
                                             AND ia.key_nber = icea.key_nber(+)
                                             AND ia.itm_nber = icea.itm_nber(+)
                                             AND ia.sad_num = icea.sad_num(+)
                                             AND icea.saditm_tax_code(+) = 'ICE'
                                             --tributo IEHD
                                             AND iu.key_year = iehdu.key_year(+)
                                             AND iu.key_cuo = iehdu.key_cuo(+)
                                             AND iu.key_dec = iehdu.key_dec(+)
                                             AND iu.key_nber = iehdu.key_nber(+)
                                             AND iu.itm_nber = iehdu.itm_nber(+)
                                             AND iu.sad_num = iehdu.sad_num(+)
                                             AND iehdu.saditm_tax_code(+) =
                                                    'IEHD'
                                             AND ia.key_year = iehda.key_year(+)
                                             AND ia.key_cuo = iehda.key_cuo(+)
                                             AND ia.key_dec = iehda.key_dec(+)
                                             AND ia.key_nber = iehda.key_nber(+)
                                             AND ia.itm_nber = iehda.itm_nber(+)
                                             AND ia.sad_num = iehda.sad_num(+)
                                             AND iehda.saditm_tax_code(+) =
                                                    'IEHD'
                                             --tributo ICD
                                             AND iu.key_year = icdu.key_year(+)
                                             AND iu.key_cuo = icdu.key_cuo(+)
                                             AND iu.key_dec = icdu.key_dec(+)
                                             AND iu.key_nber = icdu.key_nber(+)
                                             AND iu.itm_nber = icdu.itm_nber(+)
                                             AND iu.sad_num = icdu.sad_num(+)
                                             AND icdu.saditm_tax_code(+) = 'ICD'
                                             AND ia.key_year = icda.key_year(+)
                                             AND ia.key_cuo = icda.key_cuo(+)
                                             AND ia.key_dec = icda.key_dec(+)
                                             AND ia.key_nber = icda.key_nber(+)
                                             AND ia.itm_nber = icda.itm_nber(+)
                                             AND ia.sad_num = icda.sad_num(+)
                                             AND icda.saditm_tax_code(+) = 'ICD'
                                             --para recuperar informacion del control
                                             AND f.alc_tipo_tramite = 'DUI'
                                             AND f.alc_gestion = u.sad_reg_year
                                             AND f.alc_aduana = u.key_cuo
                                             AND u.sad_reg_serial = 'C'
                                             AND f.alc_numero = u.sad_reg_nber
                                             AND f.ctl_control_id = prm_codigo
                                             AND f.alc_num = 0
                                             AND f.alc_lstope = 'U'
                                             AND f.ctl_control_id =
                                                    n.ctl_control_id
                                             AND n.not_num = 0
                                             AND n.not_lstope = 'U'
                                  GROUP BY   u.sad_reg_year,
                                             u.key_cuo,
                                             u.sad_reg_nber,
                                             u.sad_reg_date,
                                             u.key_year,
                                             u.key_dec,
                                             u.key_nber,
                                             u.sad_top_cod
                                  UNION
                                    SELECT   u.sad_reg_year,
                                             u.key_cuo,
                                             u.sad_reg_nber,
                                             u.sad_reg_date,
                                             u.key_year,
                                             u.key_dec,
                                             u.key_nber,
                                             u.sad_top_cod,
                                             SUM (gau.saditm_tax_amount) gau,
                                             SUM (gaa.saditm_tax_amount) gaa,
                                             SUM (ivau.saditm_tax_amount) ivau,
                                             SUM (ivaa.saditm_tax_amount) ivaa,
                                             SUM (
                                                 NVL (iceu.saditm_tax_amount, 0))
                                                 iceu,
                                             SUM (
                                                 NVL (icea.saditm_tax_amount, 0))
                                                 icea,
                                             SUM(NVL (iehdu.saditm_tax_amount, 0))
                                                 iehdu,
                                             SUM(NVL (iehda.saditm_tax_amount, 0))
                                                 iehda,
                                             SUM (
                                                 NVL (icdu.saditm_tax_amount, 0))
                                                 icdu,
                                             SUM (
                                                 NVL (icda.saditm_tax_amount, 0))
                                                 icda
                                      FROM   ops$asy.sad_gen u,
                                             ops$asy.sad_gen a,
                                             ops$asy.sad_itm iu,
                                             ops$asy.sad_itm ia,
                                             ops$asy.sad_tax gau,
                                             ops$asy.sad_tax gaa,
                                             ops$asy.sad_tax ivau,
                                             ops$asy.sad_tax ivaa,
                                             ops$asy.sad_tax iceu,
                                             ops$asy.sad_tax icea,
                                             ops$asy.sad_tax iehdu,
                                             ops$asy.sad_tax iehda,
                                             ops$asy.sad_tax icdu,
                                             ops$asy.sad_tax icda,
                                             fis_alcance f,
                                             fis_notificacion n
                                     WHERE       u.key_year = a.key_year
                                             AND u.key_cuo = a.key_cuo
                                             AND u.key_dec IS NULL
                                             AND a.key_dec IS NULL
                                             AND u.key_nber = a.key_nber
                                             AND a.sad_num =
                                                    NVL (
                                                        (SELECT   MAX(x.sad_pst_num)
                                                           FROM   ops$asy.sad_gen x
                                                          WHERE   x.key_cuo =
                                                                      u.key_cuo
                                                                  AND x.sad_reg_year =
                                                                         u.sad_reg_year
                                                                  AND x.sad_reg_serial =
                                                                         u.sad_reg_serial
                                                                  AND x.sad_reg_nber =
                                                                         u.sad_reg_nber
                                                                  AND x.sad_pst_dat <=
                                                                         n.not_fecha_notificacion),
                                                        0)
                                             AND u.sad_flw = 1
                                             AND u.sad_num = 0
                                             AND u.lst_ope = 'U'
                                             AND u.key_year = iu.key_year
                                             AND u.key_cuo = iu.key_cuo
                                             AND iu.key_dec IS NULL
                                             AND u.key_nber = iu.key_nber
                                             AND u.sad_num = iu.sad_num
                                             AND a.key_year = ia.key_year
                                             AND a.key_cuo = ia.key_cuo
                                             AND ia.key_dec IS NULL
                                             AND a.key_nber = ia.key_nber
                                             AND a.sad_num = ia.sad_num
                                             AND iu.key_year = ia.key_year
                                             AND iu.key_cuo = ia.key_cuo
                                             AND iu.key_nber = ia.key_nber
                                             AND iu.itm_nber = ia.itm_nber
                                             --tributo GA
                                             AND iu.key_year = gau.key_year
                                             AND iu.key_cuo = gau.key_cuo
                                             AND gau.key_dec IS NULL
                                             AND iu.key_nber = gau.key_nber
                                             AND iu.itm_nber = gau.itm_nber
                                             AND iu.sad_num = gau.sad_num
                                             AND gau.saditm_tax_code = 'GA'
                                             AND ia.key_year = gaa.key_year
                                             AND ia.key_cuo = gaa.key_cuo
                                             AND gaa.key_dec IS NULL
                                             AND ia.key_nber = gaa.key_nber
                                             AND ia.itm_nber = gaa.itm_nber
                                             AND ia.sad_num = gaa.sad_num
                                             AND gaa.saditm_tax_code = 'GA'
                                             --tributo IVA
                                             AND iu.key_year = ivau.key_year
                                             AND iu.key_cuo = ivau.key_cuo
                                             AND ivau.key_dec IS NULL
                                             AND iu.key_nber = ivau.key_nber
                                             AND iu.itm_nber = ivau.itm_nber
                                             AND iu.sad_num = ivau.sad_num
                                             AND ivau.saditm_tax_code = 'IVA'
                                             AND ia.key_year = ivaa.key_year
                                             AND ia.key_cuo = ivaa.key_cuo
                                             AND ivaa.key_dec IS NULL
                                             AND ia.key_nber = ivaa.key_nber
                                             AND ia.itm_nber = ivaa.itm_nber
                                             AND ia.sad_num = ivaa.sad_num
                                             AND ivaa.saditm_tax_code = 'IVA'
                                             --tributo ICE
                                             AND iu.key_year = iceu.key_year(+)
                                             AND iu.key_cuo = iceu.key_cuo(+)
                                             AND iu.key_dec = iceu.key_dec(+)
                                             AND iceu.key_nber(+) IS NULL
                                             AND iu.itm_nber = iceu.itm_nber(+)
                                             AND iu.sad_num = iceu.sad_num(+)
                                             AND iceu.saditm_tax_code(+) = 'ICE'
                                             AND ia.key_year = icea.key_year(+)
                                             AND ia.key_cuo = icea.key_cuo(+)
                                             AND icea.key_dec(+) IS NULL
                                             AND ia.key_nber = icea.key_nber(+)
                                             AND ia.itm_nber = icea.itm_nber(+)
                                             AND ia.sad_num = icea.sad_num(+)
                                             AND icea.saditm_tax_code(+) = 'ICE'
                                             --tributo IEHD
                                             AND iu.key_year = iehdu.key_year(+)
                                             AND iu.key_cuo = iehdu.key_cuo(+)
                                             AND iehdu.key_dec(+) IS NULL
                                             AND iu.key_nber = iehdu.key_nber(+)
                                             AND iu.itm_nber = iehdu.itm_nber(+)
                                             AND iu.sad_num = iehdu.sad_num(+)
                                             AND iehdu.saditm_tax_code(+) =
                                                    'IEHD'
                                             AND ia.key_year = iehda.key_year(+)
                                             AND ia.key_cuo = iehda.key_cuo(+)
                                             AND iehda.key_dec(+) IS NULL
                                             AND ia.key_nber = iehda.key_nber(+)
                                             AND ia.itm_nber = iehda.itm_nber(+)
                                             AND ia.sad_num = iehda.sad_num(+)
                                             AND iehda.saditm_tax_code(+) =
                                                    'IEHD'
                                             --tributo ICD
                                             AND iu.key_year = icdu.key_year(+)
                                             AND iu.key_cuo = icdu.key_cuo(+)
                                             AND icdu.key_dec(+) IS NULL
                                             AND iu.key_nber = icdu.key_nber(+)
                                             AND iu.itm_nber = icdu.itm_nber(+)
                                             AND iu.sad_num = icdu.sad_num(+)
                                             AND icdu.saditm_tax_code(+) = 'ICD'
                                             AND ia.key_year = icda.key_year(+)
                                             AND ia.key_cuo = icda.key_cuo(+)
                                             AND icda.key_dec(+) IS NULL
                                             AND ia.key_nber = icda.key_nber(+)
                                             AND ia.itm_nber = icda.itm_nber(+)
                                             AND ia.sad_num = icda.sad_num(+)
                                             AND icda.saditm_tax_code(+) = 'ICD'
                                             --para recuperar informacion del control
                                             AND f.alc_tipo_tramite = 'DUI'
                                             AND f.alc_gestion = u.sad_reg_year
                                             AND f.alc_aduana = u.key_cuo
                                             AND u.sad_reg_serial = 'C'
                                             AND f.alc_numero = u.sad_reg_nber
                                             AND f.ctl_control_id = prm_codigo
                                             AND f.alc_num = 0
                                             AND f.alc_lstope = 'U'
                                             AND f.ctl_control_id =
                                                    n.ctl_control_id
                                             AND n.not_num = 0
                                             AND n.not_lstope = 'U'
                                  GROUP BY   u.sad_reg_year,
                                             u.key_cuo,
                                             u.sad_reg_nber,
                                             u.sad_reg_date,
                                             u.key_year,
                                             u.key_dec,
                                             u.key_nber,
                                             u.sad_top_cod) x) t
            ORDER BY   2, 3, 4;

        RETURN ct;
    END;

    FUNCTION devuelve_tributos3tot (prm_codigo IN VARCHAR2)
        RETURN cursortype
    IS
        ct               cursortype;
        existe           NUMBER;
        dias             NUMBER;
        fechanot         DATE;
        coeficiente      NUMBER (10, 2) := 0;

        v_contrav        NUMBER (10, 2) := 0;
        v_contravorden   NUMBER (10, 2) := 0;
    BEGIN
        SELECT   COUNT (1)
          INTO   existe
          FROM   fis_estado a
         WHERE       a.ctl_control_id = prm_codigo
                 AND a.est_num = 0
                 AND a.est_lstope = 'U'
                 AND a.est_estado = 'CONCLUIDO';

        IF existe = 0
        THEN
            fechanot := NULL;
        ELSE
            SELECT   COUNT (1)
              INTO   existe
              FROM   fis_con_viscargo a
             WHERE       a.ctl_control_id = prm_codigo
                     AND a.cvc_num = 0
                     AND a.cvc_lstope = 'U';

            IF existe = 0
            THEN
                fechanot := NULL;
            ELSE
                SELECT   a.cvc_fecha_notificacion
                  INTO   fechanot
                  FROM   fis_con_viscargo a
                 WHERE       a.ctl_control_id = prm_codigo
                         AND a.cvc_num = 0
                         AND a.cvc_lstope = 'U';

                dias := TRUNC (SYSDATE) - fechanot;

                IF dias <= 10
                THEN
                    coeficiente := 0;
                ELSE
                    coeficiente := 0.2;
                END IF;
            END IF;
        END IF;


        SELECT   NVL (SUM (res_contrav), 0), NVL (SUM (res_contravorden), 0)
          INTO   v_contrav, v_contravorden
          FROM   fis_alcance a, fis_resultados b
         WHERE   a.alc_tipo_tramite = 'DUI'
                 AND res_dui =
                           a.alc_gestion
                        || '/'
                        || a.alc_aduana
                        || '/C-'
                        || a.alc_numero
                 AND a.alc_num = 0
                 AND a.alc_lstope = 'U'
                 AND b.res_num = 0
                 AND b.res_lstope = 'U'
                 AND a.ctl_control_id = prm_codigo;

        OPEN ct FOR
            SELECT   SUM (d.dt_ga),
                     SUM (d.dt_iva),
                     SUM (d.dt_ice),
                     SUM (d.dt_iehd),
                     SUM (d.dt_icd),
                     SUM (d.dt_total),
                     SUM (d.sancionufv),
                     SUM (d.sancionbs),
                     SUM (d.adeudo_totalbs) + v_contrav + v_contravorden
                         total,
                     v_contrav,
                     v_contravorden,
                     SUM (d.adeudo_totalbs) subtotal
              FROM   (SELECT      t.reg_year
                               || '/'
                               || t.key_cuo
                               || '/C-'
                               || t.reg_nber,
                               t.fecha_reg,
                               t.fecha_calculo,
                               t.ga_dt dt_ga,
                               t.iva_dt dt_iva,
                               t.ice_dt dt_ice,
                               t.iehd_dt dt_iehd,
                               t.icd_dt dt_icd,
                               ROUND (
                                   (  t.ga_dt
                                    + t.iva_dt
                                    + t.ice_dt
                                    + t.iehd_dt
                                    + t.icd_dt)
                                   * t.tc_ufvfecvenc,
                                   2)
                                   dt_total,
                               ROUND (
                                   ( (  t.to_ga
                                      + t.to_iva
                                      + t.to_ice
                                      + t.to_iehd
                                      + t.to_icd)
                                    / t.tc_ufvhoy)
                                   * t.tc_ufvfecvenc,
                                   2)
                                   sancionufv,
                               ROUND (
                                   coeficiente
                                   * ( ( (  t.to_ga
                                          + t.to_iva
                                          + t.to_ice
                                          + t.to_iehd
                                          + t.to_icd)
                                        / t.tc_ufvhoy)
                                      * t.tc_ufvfecvenc)
                                   / t.tc_ufvhoy,
                                   2)
                                   sancionbs,
                               ROUND (
                                   coeficiente
                                   * (  t.ga_dt
                                      + t.iva_dt
                                      + t.ice_dt
                                      + t.iehd_dt
                                      + t.icd_dt)
                                   + ( ( (  t.to_ga
                                          + t.to_iva
                                          + t.to_ice
                                          + t.to_iehd
                                          + t.to_icd)
                                        / t.tc_ufvhoy)
                                      * t.tc_ufvfecvenc),
                                   2)
                                   adeudo_totalbs,
                               fechanot,
                               coeficiente
                        FROM   (SELECT   x.sad_reg_year reg_year,
                                         x.key_cuo key_cuo,
                                         x.sad_reg_nber reg_nber,
                                         TO_CHAR (x.sad_reg_date,
                                                  'dd/mm/yyyy')
                                             fecha_reg,
                                         TO_CHAR (SYSDATE, 'dd/mm/yyyy')
                                             fecha_calculo,
                                         ops$asy.fcalculadeudatributaria (
                                             x.sad_reg_date,
                                             TRUNC (SYSDATE),
                                             x.key_year,
                                             x.key_cuo,
                                             x.key_dec,
                                             x.key_nber,
                                             x.gau - x.gaa,
                                             x.sad_top_cod)
                                             ga_dt,
                                         ops$asy.fcalculadeudatributaria (
                                             x.sad_reg_date,
                                             TRUNC (SYSDATE),
                                             x.key_year,
                                             x.key_cuo,
                                             x.key_dec,
                                             x.key_nber,
                                             x.ivau - x.ivaa,
                                             x.sad_top_cod)
                                             iva_dt,
                                         ops$asy.fcalculadeudatributaria (
                                             x.sad_reg_date,
                                             TRUNC (SYSDATE),
                                             x.key_year,
                                             x.key_cuo,
                                             x.key_dec,
                                             x.key_nber,
                                             NVL (x.iceu, 0)
                                             - NVL (x.icea, 0),
                                             x.sad_top_cod)
                                             ice_dt,
                                         ops$asy.fcalculadeudatributaria (
                                             x.sad_reg_date,
                                             TRUNC (SYSDATE),
                                             x.key_year,
                                             x.key_cuo,
                                             x.key_dec,
                                             x.key_nber,
                                             NVL (x.iehdu, 0)
                                             - NVL (x.iehda, 0),
                                             x.sad_top_cod)
                                             iehd_dt,
                                         ops$asy.fcalculadeudatributaria (
                                             x.sad_reg_date,
                                             TRUNC (SYSDATE),
                                             x.key_year,
                                             x.key_cuo,
                                             x.key_dec,
                                             x.key_nber,
                                             NVL (x.icdu, 0)
                                             - NVL (x.icda, 0),
                                             x.sad_top_cod)
                                             icd_dt,
                                         pkg_reporte.tipocambio (
                                             pkg_reporte.fecha_vencimiento (
                                                 x.key_cuo,
                                                 TO_CHAR (x.sad_reg_date,
                                                          'dd/mm/yyyy')),
                                             'UFV')
                                             tc_ufvfecvenc,
                                         pkg_reporte.tipocambio (
                                             TRUNC (SYSDATE),
                                             'UFV')
                                             tc_ufvhoy,
                                         x.gau - x.gaa to_ga,
                                         x.ivau - x.ivaa to_iva,
                                         x.iceu - x.icea to_ice,
                                         x.iehdu - x.iehda to_iehd,
                                         x.icdu - x.icda to_icd
                                  FROM   (  SELECT   u.sad_reg_year,
                                                     u.key_cuo,
                                                     u.sad_reg_nber,
                                                     u.sad_reg_date,
                                                     u.key_year,
                                                     u.key_dec,
                                                     u.key_nber,
                                                     u.sad_top_cod,
                                                     SUM (
                                                         gau.saditm_tax_amount)
                                                         gau,
                                                     SUM (
                                                         gaa.saditm_tax_amount)
                                                         gaa,
                                                     SUM(ivau.saditm_tax_amount)
                                                         ivau,
                                                     SUM(ivaa.saditm_tax_amount)
                                                         ivaa,
                                                     SUM(NVL (
                                                             iceu.saditm_tax_amount,
                                                             0))
                                                         iceu,
                                                     SUM(NVL (
                                                             icea.saditm_tax_amount,
                                                             0))
                                                         icea,
                                                     SUM(NVL (
                                                             iehdu.saditm_tax_amount,
                                                             0))
                                                         iehdu,
                                                     SUM(NVL (
                                                             iehda.saditm_tax_amount,
                                                             0))
                                                         iehda,
                                                     SUM(NVL (
                                                             icdu.saditm_tax_amount,
                                                             0))
                                                         icdu,
                                                     SUM(NVL (
                                                             icda.saditm_tax_amount,
                                                             0))
                                                         icda
                                              FROM   ops$asy.sad_gen u,
                                                     ops$asy.sad_gen a,
                                                     ops$asy.sad_itm iu,
                                                     ops$asy.sad_itm ia,
                                                     ops$asy.sad_tax gau,
                                                     ops$asy.sad_tax gaa,
                                                     ops$asy.sad_tax ivau,
                                                     ops$asy.sad_tax ivaa,
                                                     ops$asy.sad_tax iceu,
                                                     ops$asy.sad_tax icea,
                                                     ops$asy.sad_tax iehdu,
                                                     ops$asy.sad_tax iehda,
                                                     ops$asy.sad_tax icdu,
                                                     ops$asy.sad_tax icda,
                                                     fis_alcance f,
                                                     fis_notificacion n
                                             WHERE   u.key_year = a.key_year
                                                     AND u.key_cuo = a.key_cuo
                                                     AND u.key_dec IS NOT NULL
                                                     AND u.key_dec = a.key_dec
                                                     AND u.key_nber =
                                                            a.key_nber
                                                     AND a.sad_num =
                                                            NVL (
                                                                (SELECT   MAX(x.sad_pst_num)
                                                                   FROM   ops$asy.sad_gen x
                                                                  WHERE   x.key_cuo =
                                                                              u.key_cuo
                                                                          AND x.sad_reg_year =
                                                                                 u.sad_reg_year
                                                                          AND x.sad_reg_serial =
                                                                                 u.sad_reg_serial
                                                                          AND x.sad_reg_nber =
                                                                                 u.sad_reg_nber
                                                                          AND x.sad_pst_dat <=
                                                                                 n.not_fecha_notificacion),
                                                                0)
                                                     AND u.sad_flw = 1
                                                     AND u.sad_num = 0
                                                     AND u.lst_ope = 'U'
                                                     AND u.key_year =
                                                            iu.key_year
                                                     AND u.key_cuo = iu.key_cuo
                                                     AND u.key_dec = iu.key_dec
                                                     AND u.key_nber =
                                                            iu.key_nber
                                                     AND u.sad_num = iu.sad_num
                                                     AND a.key_year =
                                                            ia.key_year
                                                     AND a.key_cuo = ia.key_cuo
                                                     AND a.key_dec = ia.key_dec
                                                     AND a.key_nber =
                                                            ia.key_nber
                                                     AND a.sad_num = ia.sad_num
                                                     AND iu.key_year =
                                                            ia.key_year
                                                     AND iu.key_cuo =
                                                            ia.key_cuo
                                                     AND iu.key_dec =
                                                            ia.key_dec
                                                     AND iu.key_nber =
                                                            ia.key_nber
                                                     AND iu.itm_nber =
                                                            ia.itm_nber
                                                     --tributo GA
                                                     AND iu.key_year =
                                                            gau.key_year
                                                     AND iu.key_cuo =
                                                            gau.key_cuo
                                                     AND iu.key_dec =
                                                            gau.key_dec
                                                     AND iu.key_nber =
                                                            gau.key_nber
                                                     AND iu.itm_nber =
                                                            gau.itm_nber
                                                     AND iu.sad_num =
                                                            gau.sad_num
                                                     AND gau.saditm_tax_code =
                                                            'GA'
                                                     AND ia.key_year =
                                                            gaa.key_year
                                                     AND ia.key_cuo =
                                                            gaa.key_cuo
                                                     AND ia.key_dec =
                                                            gaa.key_dec
                                                     AND ia.key_nber =
                                                            gaa.key_nber
                                                     AND ia.itm_nber =
                                                            gaa.itm_nber
                                                     AND ia.sad_num =
                                                            gaa.sad_num
                                                     AND gaa.saditm_tax_code =
                                                            'GA'
                                                     --tributo IVA
                                                     AND iu.key_year =
                                                            ivau.key_year
                                                     AND iu.key_cuo =
                                                            ivau.key_cuo
                                                     AND iu.key_dec =
                                                            ivau.key_dec
                                                     AND iu.key_nber =
                                                            ivau.key_nber
                                                     AND iu.itm_nber =
                                                            ivau.itm_nber
                                                     AND iu.sad_num =
                                                            ivau.sad_num
                                                     AND ivau.saditm_tax_code =
                                                            'IVA'
                                                     AND ia.key_year =
                                                            ivaa.key_year
                                                     AND ia.key_cuo =
                                                            ivaa.key_cuo
                                                     AND ia.key_dec =
                                                            ivaa.key_dec
                                                     AND ia.key_nber =
                                                            ivaa.key_nber
                                                     AND ia.itm_nber =
                                                            ivaa.itm_nber
                                                     AND ia.sad_num =
                                                            ivaa.sad_num
                                                     AND ivaa.saditm_tax_code =
                                                            'IVA'
                                                     --tributo ICE
                                                     AND iu.key_year =
                                                            iceu.key_year(+)
                                                     AND iu.key_cuo =
                                                            iceu.key_cuo(+)
                                                     AND iu.key_dec =
                                                            iceu.key_dec(+)
                                                     AND iu.key_nber =
                                                            iceu.key_nber(+)
                                                     AND iu.itm_nber =
                                                            iceu.itm_nber(+)
                                                     AND iu.sad_num =
                                                            iceu.sad_num(+)
                                                     AND iceu.saditm_tax_code(+) =
                                                            'ICE'
                                                     AND ia.key_year =
                                                            icea.key_year(+)
                                                     AND ia.key_cuo =
                                                            icea.key_cuo(+)
                                                     AND ia.key_dec =
                                                            icea.key_dec(+)
                                                     AND ia.key_nber =
                                                            icea.key_nber(+)
                                                     AND ia.itm_nber =
                                                            icea.itm_nber(+)
                                                     AND ia.sad_num =
                                                            icea.sad_num(+)
                                                     AND icea.saditm_tax_code(+) =
                                                            'ICE'
                                                     --tributo IEHD
                                                     AND iu.key_year =
                                                            iehdu.key_year(+)
                                                     AND iu.key_cuo =
                                                            iehdu.key_cuo(+)
                                                     AND iu.key_dec =
                                                            iehdu.key_dec(+)
                                                     AND iu.key_nber =
                                                            iehdu.key_nber(+)
                                                     AND iu.itm_nber =
                                                            iehdu.itm_nber(+)
                                                     AND iu.sad_num =
                                                            iehdu.sad_num(+)
                                                     AND iehdu.saditm_tax_code(+) =
                                                            'IEHD'
                                                     AND ia.key_year =
                                                            iehda.key_year(+)
                                                     AND ia.key_cuo =
                                                            iehda.key_cuo(+)
                                                     AND ia.key_dec =
                                                            iehda.key_dec(+)
                                                     AND ia.key_nber =
                                                            iehda.key_nber(+)
                                                     AND ia.itm_nber =
                                                            iehda.itm_nber(+)
                                                     AND ia.sad_num =
                                                            iehda.sad_num(+)
                                                     AND iehda.saditm_tax_code(+) =
                                                            'IEHD'
                                                     --tributo ICD
                                                     AND iu.key_year =
                                                            icdu.key_year(+)
                                                     AND iu.key_cuo =
                                                            icdu.key_cuo(+)
                                                     AND iu.key_dec =
                                                            icdu.key_dec(+)
                                                     AND iu.key_nber =
                                                            icdu.key_nber(+)
                                                     AND iu.itm_nber =
                                                            icdu.itm_nber(+)
                                                     AND iu.sad_num =
                                                            icdu.sad_num(+)
                                                     AND icdu.saditm_tax_code(+) =
                                                            'ICD'
                                                     AND ia.key_year =
                                                            icda.key_year(+)
                                                     AND ia.key_cuo =
                                                            icda.key_cuo(+)
                                                     AND ia.key_dec =
                                                            icda.key_dec(+)
                                                     AND ia.key_nber =
                                                            icda.key_nber(+)
                                                     AND ia.itm_nber =
                                                            icda.itm_nber(+)
                                                     AND ia.sad_num =
                                                            icda.sad_num(+)
                                                     AND icda.saditm_tax_code(+) =
                                                            'ICD'
                                                     --para recuperar informacion del control
                                                     AND f.alc_tipo_tramite =
                                                            'DUI'
                                                     AND f.alc_gestion =
                                                            u.sad_reg_year
                                                     AND f.alc_aduana =
                                                            u.key_cuo
                                                     AND u.sad_reg_serial = 'C'
                                                     AND f.alc_numero =
                                                            u.sad_reg_nber
                                                     AND f.ctl_control_id =
                                                            prm_codigo
                                                     AND f.alc_num = 0
                                                     AND f.alc_lstope = 'U'
                                                     AND f.ctl_control_id =
                                                            n.ctl_control_id
                                                     AND n.not_num = 0
                                                     AND n.not_lstope = 'U'
                                          GROUP BY   u.sad_reg_year,
                                                     u.key_cuo,
                                                     u.sad_reg_nber,
                                                     u.sad_reg_date,
                                                     u.key_year,
                                                     u.key_dec,
                                                     u.key_nber,
                                                     u.sad_top_cod
                                          UNION
                                            SELECT   u.sad_reg_year,
                                                     u.key_cuo,
                                                     u.sad_reg_nber,
                                                     u.sad_reg_date,
                                                     u.key_year,
                                                     u.key_dec,
                                                     u.key_nber,
                                                     u.sad_top_cod,
                                                     SUM (
                                                         gau.saditm_tax_amount)
                                                         gau,
                                                     SUM (
                                                         gaa.saditm_tax_amount)
                                                         gaa,
                                                     SUM(ivau.saditm_tax_amount)
                                                         ivau,
                                                     SUM(ivaa.saditm_tax_amount)
                                                         ivaa,
                                                     SUM(NVL (
                                                             iceu.saditm_tax_amount,
                                                             0))
                                                         iceu,
                                                     SUM(NVL (
                                                             icea.saditm_tax_amount,
                                                             0))
                                                         icea,
                                                     SUM(NVL (
                                                             iehdu.saditm_tax_amount,
                                                             0))
                                                         iehdu,
                                                     SUM(NVL (
                                                             iehda.saditm_tax_amount,
                                                             0))
                                                         iehda,
                                                     SUM(NVL (
                                                             icdu.saditm_tax_amount,
                                                             0))
                                                         icdu,
                                                     SUM(NVL (
                                                             icda.saditm_tax_amount,
                                                             0))
                                                         icda
                                              FROM   ops$asy.sad_gen u,
                                                     ops$asy.sad_gen a,
                                                     ops$asy.sad_itm iu,
                                                     ops$asy.sad_itm ia,
                                                     ops$asy.sad_tax gau,
                                                     ops$asy.sad_tax gaa,
                                                     ops$asy.sad_tax ivau,
                                                     ops$asy.sad_tax ivaa,
                                                     ops$asy.sad_tax iceu,
                                                     ops$asy.sad_tax icea,
                                                     ops$asy.sad_tax iehdu,
                                                     ops$asy.sad_tax iehda,
                                                     ops$asy.sad_tax icdu,
                                                     ops$asy.sad_tax icda,
                                                     fis_alcance f,
                                                     fis_notificacion n
                                             WHERE   u.key_year = a.key_year
                                                     AND u.key_cuo = a.key_cuo
                                                     AND u.key_dec IS NULL
                                                     AND a.key_dec IS NULL
                                                     AND u.key_nber =
                                                            a.key_nber
                                                     AND a.sad_num =
                                                            NVL (
                                                                (SELECT   MAX(x.sad_pst_num)
                                                                   FROM   ops$asy.sad_gen x
                                                                  WHERE   x.key_cuo =
                                                                              u.key_cuo
                                                                          AND x.sad_reg_year =
                                                                                 u.sad_reg_year
                                                                          AND x.sad_reg_serial =
                                                                                 u.sad_reg_serial
                                                                          AND x.sad_reg_nber =
                                                                                 u.sad_reg_nber
                                                                          AND x.sad_pst_dat <=
                                                                                 n.not_fecha_notificacion),
                                                                0)
                                                     AND u.sad_flw = 1
                                                     AND u.sad_num = 0
                                                     AND u.lst_ope = 'U'
                                                     AND u.key_year =
                                                            iu.key_year
                                                     AND u.key_cuo = iu.key_cuo
                                                     AND iu.key_dec IS NULL
                                                     AND u.key_nber =
                                                            iu.key_nber
                                                     AND u.sad_num = iu.sad_num
                                                     AND a.key_year =
                                                            ia.key_year
                                                     AND a.key_cuo = ia.key_cuo
                                                     AND ia.key_dec IS NULL
                                                     AND a.key_nber =
                                                            ia.key_nber
                                                     AND a.sad_num = ia.sad_num
                                                     AND iu.key_year =
                                                            ia.key_year
                                                     AND iu.key_cuo =
                                                            ia.key_cuo
                                                     AND iu.key_nber =
                                                            ia.key_nber
                                                     AND iu.itm_nber =
                                                            ia.itm_nber
                                                     --tributo GA
                                                     AND iu.key_year =
                                                            gau.key_year
                                                     AND iu.key_cuo =
                                                            gau.key_cuo
                                                     AND gau.key_dec IS NULL
                                                     AND iu.key_nber =
                                                            gau.key_nber
                                                     AND iu.itm_nber =
                                                            gau.itm_nber
                                                     AND iu.sad_num =
                                                            gau.sad_num
                                                     AND gau.saditm_tax_code =
                                                            'GA'
                                                     AND ia.key_year =
                                                            gaa.key_year
                                                     AND ia.key_cuo =
                                                            gaa.key_cuo
                                                     AND gaa.key_dec IS NULL
                                                     AND ia.key_nber =
                                                            gaa.key_nber
                                                     AND ia.itm_nber =
                                                            gaa.itm_nber
                                                     AND ia.sad_num =
                                                            gaa.sad_num
                                                     AND gaa.saditm_tax_code =
                                                            'GA'
                                                     --tributo IVA
                                                     AND iu.key_year =
                                                            ivau.key_year
                                                     AND iu.key_cuo =
                                                            ivau.key_cuo
                                                     AND ivau.key_dec IS NULL
                                                     AND iu.key_nber =
                                                            ivau.key_nber
                                                     AND iu.itm_nber =
                                                            ivau.itm_nber
                                                     AND iu.sad_num =
                                                            ivau.sad_num
                                                     AND ivau.saditm_tax_code =
                                                            'IVA'
                                                     AND ia.key_year =
                                                            ivaa.key_year
                                                     AND ia.key_cuo =
                                                            ivaa.key_cuo
                                                     AND ivaa.key_dec IS NULL
                                                     AND ia.key_nber =
                                                            ivaa.key_nber
                                                     AND ia.itm_nber =
                                                            ivaa.itm_nber
                                                     AND ia.sad_num =
                                                            ivaa.sad_num
                                                     AND ivaa.saditm_tax_code =
                                                            'IVA'
                                                     --tributo ICE
                                                     AND iu.key_year =
                                                            iceu.key_year(+)
                                                     AND iu.key_cuo =
                                                            iceu.key_cuo(+)
                                                     AND iu.key_dec =
                                                            iceu.key_dec(+)
                                                     AND iceu.key_nber(+) IS NULL
                                                     AND iu.itm_nber =
                                                            iceu.itm_nber(+)
                                                     AND iu.sad_num =
                                                            iceu.sad_num(+)
                                                     AND iceu.saditm_tax_code(+) =
                                                            'ICE'
                                                     AND ia.key_year =
                                                            icea.key_year(+)
                                                     AND ia.key_cuo =
                                                            icea.key_cuo(+)
                                                     AND icea.key_dec(+) IS NULL
                                                     AND ia.key_nber =
                                                            icea.key_nber(+)
                                                     AND ia.itm_nber =
                                                            icea.itm_nber(+)
                                                     AND ia.sad_num =
                                                            icea.sad_num(+)
                                                     AND icea.saditm_tax_code(+) =
                                                            'ICE'
                                                     --tributo IEHD
                                                     AND iu.key_year =
                                                            iehdu.key_year(+)
                                                     AND iu.key_cuo =
                                                            iehdu.key_cuo(+)
                                                     AND iehdu.key_dec(+) IS NULL
                                                     AND iu.key_nber =
                                                            iehdu.key_nber(+)
                                                     AND iu.itm_nber =
                                                            iehdu.itm_nber(+)
                                                     AND iu.sad_num =
                                                            iehdu.sad_num(+)
                                                     AND iehdu.saditm_tax_code(+) =
                                                            'IEHD'
                                                     AND ia.key_year =
                                                            iehda.key_year(+)
                                                     AND ia.key_cuo =
                                                            iehda.key_cuo(+)
                                                     AND iehda.key_dec(+) IS NULL
                                                     AND ia.key_nber =
                                                            iehda.key_nber(+)
                                                     AND ia.itm_nber =
                                                            iehda.itm_nber(+)
                                                     AND ia.sad_num =
                                                            iehda.sad_num(+)
                                                     AND iehda.saditm_tax_code(+) =
                                                            'IEHD'
                                                     --tributo ICD
                                                     AND iu.key_year =
                                                            icdu.key_year(+)
                                                     AND iu.key_cuo =
                                                            icdu.key_cuo(+)
                                                     AND icdu.key_dec(+) IS NULL
                                                     AND iu.key_nber =
                                                            icdu.key_nber(+)
                                                     AND iu.itm_nber =
                                                            icdu.itm_nber(+)
                                                     AND iu.sad_num =
                                                            icdu.sad_num(+)
                                                     AND icdu.saditm_tax_code(+) =
                                                            'ICD'
                                                     AND ia.key_year =
                                                            icda.key_year(+)
                                                     AND ia.key_cuo =
                                                            icda.key_cuo(+)
                                                     AND icda.key_dec(+) IS NULL
                                                     AND ia.key_nber =
                                                            icda.key_nber(+)
                                                     AND ia.itm_nber =
                                                            icda.itm_nber(+)
                                                     AND ia.sad_num =
                                                            icda.sad_num(+)
                                                     AND icda.saditm_tax_code(+) =
                                                            'ICD'
                                                     --para recuperar informacion del control
                                                     AND f.alc_tipo_tramite =
                                                            'DUI'
                                                     AND f.alc_gestion =
                                                            u.sad_reg_year
                                                     AND f.alc_aduana =
                                                            u.key_cuo
                                                     AND u.sad_reg_serial = 'C'
                                                     AND f.alc_numero =
                                                            u.sad_reg_nber
                                                     AND f.ctl_control_id =
                                                            prm_codigo
                                                     AND f.alc_num = 0
                                                     AND f.alc_lstope = 'U'
                                                     AND f.ctl_control_id =
                                                            n.ctl_control_id
                                                     AND n.not_num = 0
                                                     AND n.not_lstope = 'U'
                                          GROUP BY   u.sad_reg_year,
                                                     u.key_cuo,
                                                     u.sad_reg_nber,
                                                     u.sad_reg_date,
                                                     u.key_year,
                                                     u.key_dec,
                                                     u.key_nber,
                                                     u.sad_top_cod) x) t) d;

        RETURN ct;
    END;



    FUNCTION devuelve_liquidacion (prm_codigo IN VARCHAR2)
        RETURN cursortype
    IS
        ct   cursortype;
    BEGIN
        OPEN ct FOR
            SELECT   iu.itm_nber,
                     ia.saditm_hs_cod || ia.saditm_hsprec_cod nandina_ant,
                     u.sad_reg_year,
                     u.key_cuo,
                     'C',
                     u.sad_reg_nber,
                     TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy') fecval,
                     TO_CHAR (a.sad_reg_date + 3, 'dd/mm/yyyy') fecvven,
                     a.sad_tot_invoiced fob$_ant,
                     a.sad_stat_val cif_ant,
                     gaa.saditm_tax_amount ga_a,
                     iva.saditm_tax_amount iva_a,
                     NVL (icu.saditm_tax_amount, 0),
                     iu.saditm_hs_cod || iu.saditm_hsprec_cod nandina_u,
                     u.sad_tot_invoiced fob$_u,
                     u.sad_stat_val cif_u,
                     gau.saditm_tax_amount ga_u,
                     ivu.saditm_tax_amount iva_u
              FROM   fis_alcance f,
                     ops$asy.sad_gen u,
                     ops$asy.sad_gen a,
                     ops$asy.sad_itm iu,
                     ops$asy.sad_itm ia,
                     ops$asy.sad_tax gau,
                     ops$asy.sad_tax gaa,
                     ops$asy.sad_tax ivu,
                     ops$asy.sad_tax iva,
                     ops$asy.sad_tax icu,
                     ops$asy.sad_tax ica
             WHERE       u.key_year = a.key_year
                     AND u.key_cuo = a.key_cuo
                     AND u.key_dec = a.key_dec
                     AND u.key_nber = a.key_nber
                     AND a.sad_num =
                            (SELECT   MAX (t.sad_num)
                               FROM   ops$asy.sad_gen t
                              WHERE       t.key_year = u.key_year
                                      AND t.key_cuo = u.key_cuo
                                      AND t.key_dec = u.key_dec
                                      AND t.key_nber = u.key_nber)
                     AND u.key_year = iu.key_year
                     AND u.key_cuo = iu.key_cuo
                     AND u.key_dec = iu.key_dec
                     AND u.key_nber = iu.key_nber
                     AND u.sad_num = iu.sad_num
                     AND a.key_year = ia.key_year
                     AND a.key_cuo = ia.key_cuo
                     AND a.key_dec = ia.key_dec
                     AND a.key_nber = ia.key_nber
                     AND a.sad_num = ia.sad_num
                     AND iu.key_year = ia.key_year
                     AND iu.key_cuo = ia.key_cuo
                     AND iu.key_dec = ia.key_dec
                     AND iu.key_nber = ia.key_nber
                     AND iu.itm_nber = ia.itm_nber
                     AND iu.key_year = gau.key_year
                     AND iu.key_cuo = gau.key_cuo
                     AND iu.key_dec = gau.key_dec
                     AND iu.key_nber = gau.key_nber
                     AND iu.itm_nber = gau.itm_nber
                     AND iu.sad_num = gau.sad_num
                     AND gau.saditm_tax_code = 'GA'
                     AND ia.key_year = gaa.key_year
                     AND ia.key_cuo = gaa.key_cuo
                     AND ia.key_dec = gaa.key_dec
                     AND ia.key_nber = gaa.key_nber
                     AND ia.itm_nber = gaa.itm_nber
                     AND ia.sad_num = gaa.sad_num
                     AND gaa.saditm_tax_code = 'GA'
                     AND iu.key_year = ivu.key_year
                     AND iu.key_cuo = ivu.key_cuo
                     AND iu.key_dec = ivu.key_dec
                     AND iu.key_nber = ivu.key_nber
                     AND iu.itm_nber = ivu.itm_nber
                     AND iu.sad_num = ivu.sad_num
                     AND ivu.saditm_tax_code = 'IVA'
                     AND ia.key_year = iva.key_year
                     AND ia.key_cuo = iva.key_cuo
                     AND ia.key_dec = iva.key_dec
                     AND ia.key_nber = iva.key_nber
                     AND ia.itm_nber = iva.itm_nber
                     AND ia.sad_num = iva.sad_num
                     AND iva.saditm_tax_code = 'IVA'
                     AND iu.key_year = icu.key_year(+)
                     AND iu.key_cuo = icu.key_cuo(+)
                     AND iu.key_dec = icu.key_dec(+)
                     AND iu.key_nber = icu.key_nber(+)
                     AND iu.itm_nber = icu.itm_nber(+)
                     AND iu.sad_num = icu.sad_num(+)
                     AND icu.saditm_tax_code(+) = 'ICE'
                     AND ia.key_year = ica.key_year(+)
                     AND ia.key_cuo = ica.key_cuo(+)
                     AND ia.key_dec = ica.key_dec(+)
                     AND ia.key_nber = ica.key_nber(+)
                     AND ia.itm_nber = ica.itm_nber(+)
                     AND ia.sad_num = ica.sad_num(+)
                     AND ica.saditm_tax_code(+) = 'ICE'
                     AND u.sad_flw = 1
                     AND u.sad_num = 0
                     AND u.lst_ope = 'U'
                     AND u.key_dec IS NOT NULL
                     AND f.alc_tipo_tramite = 'DUI'
                     AND f.alc_gestion = u.sad_reg_year
                     AND f.alc_aduana = u.key_cuo
                     AND u.sad_reg_serial = 'C'
                     AND f.alc_numero = u.sad_reg_nber
                     AND f.ctl_control_id = prm_codigo
            UNION
            SELECT   iu.itm_nber,
                     ia.saditm_hs_cod || ia.saditm_hsprec_cod nandina_ant,
                     u.sad_reg_year,
                     u.key_cuo,
                     'C',
                     u.sad_reg_nber,
                     TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy') fecval,
                     TO_CHAR (a.sad_reg_date + 3, 'dd/mm/yyyy') fecvven,
                     a.sad_tot_invoiced fob$_ant,
                     a.sad_stat_val cif_ant,
                     gaa.saditm_tax_amount ga_a,
                     iva.saditm_tax_amount iva_a,
                     NVL (icu.saditm_tax_amount, 0),
                     iu.saditm_hs_cod || iu.saditm_hsprec_cod nandina_u,
                     u.sad_tot_invoiced fob$_u,
                     u.sad_stat_val cif_u,
                     gau.saditm_tax_amount ga_u,
                     ivu.saditm_tax_amount iva_u
              FROM   fis_alcance f,
                     ops$asy.sad_gen u,
                     ops$asy.sad_gen a,
                     ops$asy.sad_itm iu,
                     ops$asy.sad_itm ia,
                     ops$asy.sad_tax gau,
                     ops$asy.sad_tax gaa,
                     ops$asy.sad_tax ivu,
                     ops$asy.sad_tax iva,
                     ops$asy.sad_tax icu,
                     ops$asy.sad_tax ica
             WHERE       u.key_year = a.key_year
                     AND u.key_cuo = a.key_cuo
                     AND u.key_dec IS NULL
                     AND a.key_dec IS NULL
                     AND u.key_nber = a.key_nber
                     AND a.sad_num =
                            (SELECT   MAX (t.sad_num)
                               FROM   ops$asy.sad_gen t
                              WHERE       t.key_year = u.key_year
                                      AND t.key_cuo = u.key_cuo
                                      AND t.key_dec = u.key_dec
                                      AND t.key_nber = u.key_nber)
                     AND u.key_year = iu.key_year
                     AND u.key_cuo = iu.key_cuo
                     AND iu.key_dec IS NULL
                     AND u.key_nber = iu.key_nber
                     AND u.sad_num = iu.sad_num
                     AND a.key_year = ia.key_year
                     AND a.key_cuo = ia.key_cuo
                     AND ia.key_dec IS NULL
                     AND a.key_nber = ia.key_nber
                     AND a.sad_num = ia.sad_num
                     AND iu.key_year = ia.key_year
                     AND iu.key_cuo = ia.key_cuo
                     AND iu.key_nber = ia.key_nber
                     AND iu.itm_nber = ia.itm_nber
                     AND iu.key_year = gau.key_year
                     AND iu.key_cuo = gau.key_cuo
                     AND gau.key_dec IS NULL
                     AND iu.key_nber = gau.key_nber
                     AND iu.itm_nber = gau.itm_nber
                     AND iu.sad_num = gau.sad_num
                     AND gau.saditm_tax_code = 'GA'
                     AND ia.key_year = gaa.key_year
                     AND ia.key_cuo = gaa.key_cuo
                     AND gaa.key_dec IS NULL
                     AND ia.key_nber = gaa.key_nber
                     AND ia.itm_nber = gaa.itm_nber
                     AND ia.sad_num = gaa.sad_num
                     AND gaa.saditm_tax_code = 'GA'
                     AND iu.key_year = ivu.key_year
                     AND iu.key_cuo = ivu.key_cuo
                     AND ivu.key_dec IS NULL
                     AND iu.key_nber = ivu.key_nber
                     AND iu.itm_nber = ivu.itm_nber
                     AND iu.sad_num = ivu.sad_num
                     AND ivu.saditm_tax_code = 'IVA'
                     AND ia.key_year = iva.key_year
                     AND ia.key_cuo = iva.key_cuo
                     AND iva.key_dec IS NULL
                     AND ia.key_nber = iva.key_nber
                     AND ia.itm_nber = iva.itm_nber
                     AND ia.sad_num = iva.sad_num
                     AND iva.saditm_tax_code = 'IVA'
                     AND iu.key_year = icu.key_year(+)
                     AND iu.key_cuo = icu.key_cuo(+)
                     AND icu.key_dec(+) IS NULL
                     AND iu.key_nber = icu.key_nber(+)
                     AND iu.itm_nber = icu.itm_nber(+)
                     AND iu.sad_num = icu.sad_num(+)
                     AND icu.saditm_tax_code(+) = 'ICE'
                     AND ia.key_year = ica.key_year(+)
                     AND ia.key_cuo = ica.key_cuo(+)
                     AND ica.key_dec(+) IS NULL
                     AND ia.key_nber = ica.key_nber(+)
                     AND ia.itm_nber = ica.itm_nber(+)
                     AND ia.sad_num = ica.sad_num(+)
                     AND ica.saditm_tax_code(+) = 'ICE'
                     AND u.sad_flw = 1
                     AND u.sad_num = 0
                     AND u.lst_ope = 'U'
                     AND f.alc_tipo_tramite = 'DUI'
                     AND f.alc_gestion = u.sad_reg_year
                     AND f.alc_aduana = u.key_cuo
                     AND u.sad_reg_serial = 'C'
                     AND f.alc_numero = u.sad_reg_nber
                     AND f.ctl_control_id = prm_codigo
            ORDER BY   3,
                       4,
                       6,
                       1;

        RETURN ct;
    END;



    FUNCTION devuelve_liquidacion2 (prm_codigo IN VARCHAR2)
        RETURN cursortype
    IS
        ct   cursortype;
    BEGIN
        OPEN ct FOR
            SELECT                                                         --1
                  t  .itm,
                     t.nandina_ant,
                     t.nandina_u,
                     t.reg_year,
                     t.key_cuo,
                     t.reg_nber,
                     t.fecha_reg,
                     t.fecha_venc,
                     t.fecha_calculo,
                     --10
                     t.dec_fob,
                     t.dec_flete,
                     t.dec_seguro,
                     t.dec_otros,
                     t.dec_cifusd,
                     t.dec_tc,
                     t.dec_cifbs,
                     t.dec_ga,
                     t.dec_iva,
                     t.dec_ice,
                     --20
                     t.dec_iehd,
                     t.dec_icd,
                     --22
                     t.enc_fob,
                     t.enc_flete,
                     t.enc_seguro,
                     t.enc_otros,
                     t.enc_cifusd,
                     t.enc_tc,
                     t.enc_cifbs,
                     t.enc_ga,
                     --30
                     t.enc_iva,
                     t.enc_ice,
                     t.enc_iehd,
                     t.enc_icd,
                     --34
                     t.tc_ufvfecvenc,
                     t.to_ga,
                     t.to_iva,
                     t.to_ice,
                     t.to_iehd,
                     t.to_icd,
                     --40
                     t.to_ga + t.to_iva + t.to_ice + t.to_iehd + t.to_icd
                         to_total,
                     --41
                     ROUND (t.to_ga * t.tc_ufvfecvenc, 2) toufv_ga,
                     ROUND (t.to_iva * t.tc_ufvfecvenc, 2) toufv_iva,
                     ROUND (t.to_ice * t.tc_ufvfecvenc, 2) toufv_ice,
                     ROUND (t.to_iehd * t.tc_ufvfecvenc, 2) toufv_iehd,
                     ROUND (t.to_icd * t.tc_ufvfecvenc, 2) toufv_icd,
                     ROUND (
                         (  t.to_ga
                          + t.to_iva
                          + t.to_ice
                          + t.to_iehd
                          + t.to_icd)
                         * t.tc_ufvfecvenc,
                         2)
                         toufv_total,
                     t.dias,
                     ROUND (POWER (1 + (t.tc_tprfecvenc / 360), t.dias), 4)
                         formula,
                     ROUND (t.ga_dt * t.tc_ufvfecvenc, 2)
                     - ROUND (t.to_ga * t.tc_ufvfecvenc, 2)
                         itufv_ga,
                     --50
                     ROUND (t.to_iva * t.tc_ufvfecvenc, 2)
                     - ROUND (t.iva_dt * t.tc_ufvfecvenc, 2)
                         itufv_iva,
                     ROUND (t.to_ice * t.tc_ufvfecvenc, 2)
                     - ROUND (t.ice_dt * t.tc_ufvfecvenc, 2)
                         itufv_ice,
                     ROUND (t.to_iehd * t.tc_ufvfecvenc, 2)
                     - ROUND (t.iehd_dt * t.tc_ufvfecvenc, 2)
                         itufv_iehd,
                     ROUND (t.to_icd * t.tc_ufvfecvenc, 2)
                     - ROUND (t.icd_dt * t.tc_ufvfecvenc, 2)
                         itufv_icd,
                     (ROUND (
                          (  t.to_ga
                           + t.to_iva
                           + t.to_ice
                           + t.to_iehd
                           + t.to_icd)
                          * t.tc_ufvfecvenc,
                          2)
                      - ROUND (
                            (  t.ga_dt
                             + t.iva_dt
                             + t.ice_dt
                             + t.iehd_dt
                             + t.icd_dt)
                            * t.tc_ufvfecvenc,
                            2))
                         itufv_total,
                     --55
                     ROUND (t.ga_dt * t.tc_ufvfecvenc, 2) dt_ga,
                     ROUND (t.iva_dt * t.tc_ufvfecvenc, 2) dt_iva,
                     ROUND (t.ice_dt * t.tc_ufvfecvenc, 2) dt_ice,
                     ROUND (t.iehd_dt * t.tc_ufvfecvenc, 2) dt_iehd,
                     ROUND (t.icd_dt * t.tc_ufvfecvenc, 2) dt_icd,
                     --60
                     ROUND (
                         (  t.ga_dt
                          + t.iva_dt
                          + t.ice_dt
                          + t.iehd_dt
                          + t.icd_dt)
                         * t.tc_ufvfecvenc,
                         2)
                         dt_total,
                     --61
                     ( (t.to_ga + t.to_iva + t.to_ice + t.to_iehd + t.to_icd)
                      / t.tc_ufvhoy)
                     * t.tc_ufvfecvenc
                         sancion,
                     --62
                     ROUND (
                         t.ga_dt + t.iva_dt + t.ice_dt + t.iehd_dt + t.icd_dt,
                         2)
                         adeudo_totalbs,
                     --63
                     ROUND (
                         (  t.ga_dt
                          + t.iva_dt
                          + t.ice_dt
                          + t.iehd_dt
                          + t.icd_dt)
                         * t.tc_ufvhoy,
                         2)
                         adeudo_totalufv
              FROM   (SELECT   iu.itm_nber itm,
                               ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                   nandina_ant,
                               iu.saditm_hs_cod || iu.saditm_hsprec_cod
                                   nandina_u,
                               u.sad_reg_year reg_year,
                               u.key_cuo key_cuo,
                               u.sad_reg_nber reg_nber,
                               TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')
                                   fecha_reg,
                               TO_CHAR (
                                   pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                   'dd/mm/yyyy')
                                   fecha_venc,
                               TO_CHAR (SYSDATE, 'dd/mm/yyyy') fecha_calculo,
                               va.sad_iitminv_valc dec_fob,
                               va.sad_iitmefr_valc dec_flete,
                               va.sad_iitmins_valc dec_seguro,
                               va.sad_iitmotc_valc dec_otros,
                               ROUND (
                                   va.sad_iitmcif_valn / va.sad_iitminv_rat,
                                   2)
                                   dec_cifusd,
                               va.sad_iitminv_rat dec_tc,
                               va.sad_iitmcif_valn dec_cifbs,
                               gaa.saditm_tax_amount dec_ga,
                               ivaa.saditm_tax_amount dec_iva,
                               NVL (icea.saditm_tax_amount, 0) dec_ice,
                               NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                               NVL (icda.saditm_tax_amount, 0) dec_icd,
                               vu.sad_iitminv_valc enc_fob,
                               vu.sad_iitmefr_valc enc_flete,
                               vu.sad_iitmins_valc enc_seguro,
                               vu.sad_iitmotc_valc enc_otros,
                               ROUND (
                                   vu.sad_iitmcif_valn / vu.sad_iitminv_rat,
                                   2)
                                   enc_cifusd,
                               vu.sad_iitminv_rat enc_tc,
                               vu.sad_iitmcif_valn enc_cifbs,
                               gau.saditm_tax_amount enc_ga,
                               ivau.saditm_tax_amount enc_iva,
                               NVL (iceu.saditm_tax_amount, 0) enc_ice,
                               NVL (iehdu.saditm_tax_amount, 0) enc_iehd,
                               NVL (icdu.saditm_tax_amount, 0) enc_icd,
                               pkg_reporte.tipocambio (
                                   pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                   'UFV')
                                   tc_ufvfecvenc,
                               pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                       'UFV')
                                   tc_ufvhoy,
                               gau.saditm_tax_amount - gaa.saditm_tax_amount
                                   to_ga,
                               ivau.saditm_tax_amount
                               - ivaa.saditm_tax_amount
                                   to_iva,
                               NVL (iceu.saditm_tax_amount, 0)
                               - NVL (icea.saditm_tax_amount, 0)
                                   to_ice,
                               NVL (iehdu.saditm_tax_amount, 0)
                               - NVL (iehda.saditm_tax_amount, 0)
                                   to_iehd,
                               NVL (icdu.saditm_tax_amount, 0)
                               - NVL (icda.saditm_tax_amount, 0)
                                   to_icd,
                               TRUNC (SYSDATE)
                               - pkg_reporte.fecha_vencimiento (
                                     u.key_cuo,
                                     TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy'))
                                   dias,
                               pkg_reporte.tipocambio (
                                   pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                   'TPR')
                                   tc_tprfecvenc,
                               ops$asy.fcalculadeudatributaria (
                                   u.sad_reg_date,
                                   TRUNC (SYSDATE),
                                   u.key_year,
                                   u.key_cuo,
                                   u.key_dec,
                                   u.key_nber,
                                   gau.saditm_tax_amount
                                   - gaa.saditm_tax_amount,
                                   u.sad_top_cod)
                                   ga_dt,
                               ops$asy.fcalculadeudatributaria (
                                   u.sad_reg_date,
                                   TRUNC (SYSDATE),
                                   u.key_year,
                                   u.key_cuo,
                                   u.key_dec,
                                   u.key_nber,
                                   ivau.saditm_tax_amount
                                   - ivaa.saditm_tax_amount,
                                   u.sad_top_cod)
                                   iva_dt,
                               ops$asy.fcalculadeudatributaria (
                                   u.sad_reg_date,
                                   TRUNC (SYSDATE),
                                   u.key_year,
                                   u.key_cuo,
                                   u.key_dec,
                                   u.key_nber,
                                   NVL (iceu.saditm_tax_amount, 0)
                                   - NVL (icea.saditm_tax_amount, 0),
                                   u.sad_top_cod)
                                   ice_dt,
                               ops$asy.fcalculadeudatributaria (
                                   u.sad_reg_date,
                                   TRUNC (SYSDATE),
                                   u.key_year,
                                   u.key_cuo,
                                   u.key_dec,
                                   u.key_nber,
                                   NVL (iehdu.saditm_tax_amount, 0)
                                   - NVL (iehda.saditm_tax_amount, 0),
                                   u.sad_top_cod)
                                   iehd_dt,
                               ops$asy.fcalculadeudatributaria (
                                   u.sad_reg_date,
                                   TRUNC (SYSDATE),
                                   u.key_year,
                                   u.key_cuo,
                                   u.key_dec,
                                   u.key_nber,
                                   NVL (icdu.saditm_tax_amount, 0)
                                   - NVL (icda.saditm_tax_amount, 0),
                                   u.sad_top_cod)
                                   icd_dt
                        FROM   ops$asy.sad_gen u,
                               ops$asy.sad_gen a,
                               ops$asy.sad_itm iu,
                               ops$asy.sad_itm ia,
                               ops$asy.sad_tax gau,
                               ops$asy.sad_tax gaa,
                               ops$asy.sad_tax ivau,
                               ops$asy.sad_tax ivaa,
                               ops$asy.sad_tax iceu,
                               ops$asy.sad_tax icea,
                               ops$asy.sad_tax iehdu,
                               ops$asy.sad_tax iehda,
                               ops$asy.sad_tax icdu,
                               ops$asy.sad_tax icda,
                               ops$asy.sad_itm_vim vu,
                               ops$asy.sad_itm_vim va,
                               fis_alcance f,
                               fis_notificacion n
                       WHERE       u.key_year = a.key_year
                               AND u.key_cuo = a.key_cuo
                               AND u.key_dec IS NOT NULL
                               AND u.key_dec = a.key_dec
                               AND u.key_nber = a.key_nber
                               AND a.sad_num =
                                      NVL (
                                          (SELECT   MAX (x.sad_pst_num)
                                             FROM   ops$asy.sad_gen x
                                            WHERE   x.key_cuo = u.key_cuo
                                                    AND x.sad_reg_year =
                                                           u.sad_reg_year
                                                    AND x.sad_reg_serial =
                                                           u.sad_reg_serial
                                                    AND x.sad_reg_nber =
                                                           u.sad_reg_nber
                                                    AND x.sad_pst_dat <=
                                                           TO_DATE (
                                                               n.not_fecha_notificacion,
                                                               'dd/mm/yyyy')),
                                          0)
                               AND u.sad_flw = 1
                               AND u.sad_num = 0
                               AND u.lst_ope = 'U'
                               AND u.key_year = iu.key_year
                               AND u.key_cuo = iu.key_cuo
                               AND u.key_dec = iu.key_dec
                               AND u.key_nber = iu.key_nber
                               AND u.sad_num = iu.sad_num
                               AND a.key_year = ia.key_year
                               AND a.key_cuo = ia.key_cuo
                               AND a.key_dec = ia.key_dec
                               AND a.key_nber = ia.key_nber
                               AND a.sad_num = ia.sad_num
                               AND iu.key_year = ia.key_year
                               AND iu.key_cuo = ia.key_cuo
                               AND iu.key_dec = ia.key_dec
                               AND iu.key_nber = ia.key_nber
                               AND iu.itm_nber = ia.itm_nber
                               --tributo GA
                               AND iu.key_year = gau.key_year
                               AND iu.key_cuo = gau.key_cuo
                               AND iu.key_dec = gau.key_dec
                               AND iu.key_nber = gau.key_nber
                               AND iu.itm_nber = gau.itm_nber
                               AND iu.sad_num = gau.sad_num
                               AND gau.saditm_tax_code = 'GA'
                               AND ia.key_year = gaa.key_year
                               AND ia.key_cuo = gaa.key_cuo
                               AND ia.key_dec = gaa.key_dec
                               AND ia.key_nber = gaa.key_nber
                               AND ia.itm_nber = gaa.itm_nber
                               AND ia.sad_num = gaa.sad_num
                               AND gaa.saditm_tax_code = 'GA'
                               --tributo IVA
                               AND iu.key_year = ivau.key_year
                               AND iu.key_cuo = ivau.key_cuo
                               AND iu.key_dec = ivau.key_dec
                               AND iu.key_nber = ivau.key_nber
                               AND iu.itm_nber = ivau.itm_nber
                               AND iu.sad_num = ivau.sad_num
                               AND ivau.saditm_tax_code = 'IVA'
                               AND ia.key_year = ivaa.key_year
                               AND ia.key_cuo = ivaa.key_cuo
                               AND ia.key_dec = ivaa.key_dec
                               AND ia.key_nber = ivaa.key_nber
                               AND ia.itm_nber = ivaa.itm_nber
                               AND ia.sad_num = ivaa.sad_num
                               AND ivaa.saditm_tax_code = 'IVA'
                               --tributo ICE
                               AND iu.key_year = iceu.key_year(+)
                               AND iu.key_cuo = iceu.key_cuo(+)
                               AND iu.key_dec = iceu.key_dec(+)
                               AND iu.key_nber = iceu.key_nber(+)
                               AND iu.itm_nber = iceu.itm_nber(+)
                               AND iu.sad_num = iceu.sad_num(+)
                               AND iceu.saditm_tax_code(+) = 'ICE'
                               AND ia.key_year = icea.key_year(+)
                               AND ia.key_cuo = icea.key_cuo(+)
                               AND ia.key_dec = icea.key_dec(+)
                               AND ia.key_nber = icea.key_nber(+)
                               AND ia.itm_nber = icea.itm_nber(+)
                               AND ia.sad_num = icea.sad_num(+)
                               AND icea.saditm_tax_code(+) = 'ICE'
                               --tributo IEHD
                               AND iu.key_year = iehdu.key_year(+)
                               AND iu.key_cuo = iehdu.key_cuo(+)
                               AND iu.key_dec = iehdu.key_dec(+)
                               AND iu.key_nber = iehdu.key_nber(+)
                               AND iu.itm_nber = iehdu.itm_nber(+)
                               AND iu.sad_num = iehdu.sad_num(+)
                               AND iehdu.saditm_tax_code(+) = 'IEHD'
                               AND ia.key_year = iehda.key_year(+)
                               AND ia.key_cuo = iehda.key_cuo(+)
                               AND ia.key_dec = iehda.key_dec(+)
                               AND ia.key_nber = iehda.key_nber(+)
                               AND ia.itm_nber = iehda.itm_nber(+)
                               AND ia.sad_num = iehda.sad_num(+)
                               AND iehda.saditm_tax_code(+) = 'IEHD'
                               --tributo ICD
                               AND iu.key_year = icdu.key_year(+)
                               AND iu.key_cuo = icdu.key_cuo(+)
                               AND iu.key_dec = icdu.key_dec(+)
                               AND iu.key_nber = icdu.key_nber(+)
                               AND iu.itm_nber = icdu.itm_nber(+)
                               AND iu.sad_num = icdu.sad_num(+)
                               AND icdu.saditm_tax_code(+) = 'ICD'
                               AND ia.key_year = icda.key_year(+)
                               AND ia.key_cuo = icda.key_cuo(+)
                               AND ia.key_dec = icda.key_dec(+)
                               AND ia.key_nber = icda.key_nber(+)
                               AND ia.itm_nber = icda.itm_nber(+)
                               AND ia.sad_num = icda.sad_num(+)
                               AND icda.saditm_tax_code(+) = 'ICD'
                               --para los valores FOB FLETE SEGURO OTROS CIF
                               AND iu.key_year = vu.key_year
                               AND iu.key_cuo = vu.key_cuo
                               AND iu.key_dec = vu.key_dec
                               AND iu.key_nber = vu.key_nber
                               AND iu.itm_nber = vu.itm_nber
                               AND iu.sad_num = vu.sad_num
                               AND ia.key_year = va.key_year
                               AND ia.key_cuo = va.key_cuo
                               AND ia.key_dec = va.key_dec
                               AND ia.key_nber = va.key_nber
                               AND ia.itm_nber = va.itm_nber
                               AND ia.sad_num = va.sad_num
                               --para recuperar informacion del control
                               AND f.alc_tipo_tramite = 'DUI'
                               AND f.alc_gestion = u.sad_reg_year
                               AND f.alc_aduana = u.key_cuo
                               AND u.sad_reg_serial = 'C'
                               AND f.alc_numero = u.sad_reg_nber
                               AND f.ctl_control_id = prm_codigo
                               AND f.alc_num = 0
                               AND f.alc_lstope = 'U'
                               AND f.ctl_control_id = n.ctl_control_id
                               AND n.not_num = 0
                               AND n.not_lstope = 'U'
                      UNION
                      SELECT   iu.itm_nber itm,
                               ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                   nandina_ant,
                               iu.saditm_hs_cod || iu.saditm_hsprec_cod
                                   nandina_u,
                               u.sad_reg_year reg_year,
                               u.key_cuo key_cuo,
                               u.sad_reg_nber reg_nber,
                               TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')
                                   fecha_reg,
                               TO_CHAR (
                                   pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                   'dd/mm/yyyy')
                                   fecha_venc,
                               TO_CHAR (SYSDATE, 'dd/mm/yyyy') fecha_calculo,
                               va.sad_iitminv_valc dec_fob,
                               va.sad_iitmefr_valc dec_flete,
                               va.sad_iitmins_valc dec_seguro,
                               va.sad_iitmotc_valc dec_otros,
                               ROUND (
                                   va.sad_iitmcif_valn / va.sad_iitminv_rat,
                                   2)
                                   dec_cifusd,
                               va.sad_iitminv_rat dec_tc,
                               va.sad_iitmcif_valn dec_cifbs,
                               gaa.saditm_tax_amount dec_ga,
                               ivaa.saditm_tax_amount dec_iva,
                               NVL (icea.saditm_tax_amount, 0) dec_ice,
                               NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                               NVL (icda.saditm_tax_amount, 0) dec_icd,
                               vu.sad_iitminv_valc enc_fob,
                               vu.sad_iitmefr_valc enc_flete,
                               vu.sad_iitmins_valc enc_seguro,
                               vu.sad_iitmotc_valc enc_otros,
                               ROUND (
                                   vu.sad_iitmcif_valn / vu.sad_iitminv_rat,
                                   2)
                                   enc_cifusd,
                               vu.sad_iitminv_rat enc_tc,
                               vu.sad_iitmcif_valn enc_cifbs,
                               gau.saditm_tax_amount enc_ga,
                               ivau.saditm_tax_amount enc_iva,
                               NVL (iceu.saditm_tax_amount, 0) enc_ice,
                               NVL (iehdu.saditm_tax_amount, 0) enc_iehd,
                               NVL (icdu.saditm_tax_amount, 0) enc_icd,
                               pkg_reporte.tipocambio (
                                   pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                   'UFV')
                                   tc_ufvfecvenc,
                               pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                       'UFV')
                                   tc_ufvhoy,
                               gau.saditm_tax_amount - gaa.saditm_tax_amount
                                   to_ga,
                               ivau.saditm_tax_amount
                               - ivaa.saditm_tax_amount
                                   to_iva,
                               NVL (iceu.saditm_tax_amount, 0)
                               - NVL (icea.saditm_tax_amount, 0)
                                   to_ice,
                               NVL (iehdu.saditm_tax_amount, 0)
                               - NVL (iehda.saditm_tax_amount, 0)
                                   to_iehd,
                               NVL (icdu.saditm_tax_amount, 0)
                               - NVL (icda.saditm_tax_amount, 0)
                                   to_icd,
                               TRUNC (SYSDATE)
                               - pkg_reporte.fecha_vencimiento (
                                     u.key_cuo,
                                     TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy'))
                                   dias,
                               pkg_reporte.tipocambio (
                                   pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                   'TPR')
                                   tc_tprfecvenc,
                               ops$asy.fcalculadeudatributaria (
                                   u.sad_reg_date,
                                   TRUNC (SYSDATE),
                                   u.key_year,
                                   u.key_cuo,
                                   u.key_dec,
                                   u.key_nber,
                                   gau.saditm_tax_amount
                                   - gaa.saditm_tax_amount,
                                   u.sad_top_cod)
                                   ga_dt,
                               ops$asy.fcalculadeudatributaria (
                                   u.sad_reg_date,
                                   TRUNC (SYSDATE),
                                   u.key_year,
                                   u.key_cuo,
                                   u.key_dec,
                                   u.key_nber,
                                   ivau.saditm_tax_amount
                                   - ivaa.saditm_tax_amount,
                                   u.sad_top_cod)
                                   iva_dt,
                               ops$asy.fcalculadeudatributaria (
                                   u.sad_reg_date,
                                   TRUNC (SYSDATE),
                                   u.key_year,
                                   u.key_cuo,
                                   u.key_dec,
                                   u.key_nber,
                                   NVL (iceu.saditm_tax_amount, 0)
                                   - NVL (icea.saditm_tax_amount, 0),
                                   u.sad_top_cod)
                                   ice_dt,
                               ops$asy.fcalculadeudatributaria (
                                   u.sad_reg_date,
                                   TRUNC (SYSDATE),
                                   u.key_year,
                                   u.key_cuo,
                                   u.key_dec,
                                   u.key_nber,
                                   NVL (iehdu.saditm_tax_amount, 0)
                                   - NVL (iehda.saditm_tax_amount, 0),
                                   u.sad_top_cod)
                                   iehd_dt,
                               ops$asy.fcalculadeudatributaria (
                                   u.sad_reg_date,
                                   TRUNC (SYSDATE),
                                   u.key_year,
                                   u.key_cuo,
                                   u.key_dec,
                                   u.key_nber,
                                   NVL (icdu.saditm_tax_amount, 0)
                                   - NVL (icda.saditm_tax_amount, 0),
                                   u.sad_top_cod)
                                   icd_dt
                        FROM   ops$asy.sad_gen u,
                               ops$asy.sad_gen a,
                               ops$asy.sad_itm iu,
                               ops$asy.sad_itm ia,
                               ops$asy.sad_tax gau,
                               ops$asy.sad_tax gaa,
                               ops$asy.sad_tax ivau,
                               ops$asy.sad_tax ivaa,
                               ops$asy.sad_tax iceu,
                               ops$asy.sad_tax icea,
                               ops$asy.sad_tax iehdu,
                               ops$asy.sad_tax iehda,
                               ops$asy.sad_tax icdu,
                               ops$asy.sad_tax icda,
                               ops$asy.sad_itm_vim vu,
                               ops$asy.sad_itm_vim va,
                               fis_alcance f,
                               fis_notificacion n
                       WHERE       u.key_year = a.key_year
                               AND u.key_cuo = a.key_cuo
                               AND u.key_dec IS NULL
                               AND a.key_dec IS NULL
                               AND u.key_nber = a.key_nber
                               AND a.sad_num =
                                      NVL (
                                          (SELECT   MAX (x.sad_pst_num)
                                             FROM   ops$asy.sad_gen x
                                            WHERE   x.key_cuo = u.key_cuo
                                                    AND x.sad_reg_year =
                                                           u.sad_reg_year
                                                    AND x.sad_reg_serial =
                                                           u.sad_reg_serial
                                                    AND x.sad_reg_nber =
                                                           u.sad_reg_nber
                                                    AND x.sad_pst_dat <=
                                                           TO_DATE (
                                                               n.not_fecha_notificacion,
                                                               'dd/mm/yyyy')),
                                          0)
                               AND u.sad_flw = 1
                               AND u.sad_num = 0
                               AND u.lst_ope = 'U'
                               AND u.key_year = iu.key_year
                               AND u.key_cuo = iu.key_cuo
                               AND iu.key_dec IS NULL
                               AND u.key_nber = iu.key_nber
                               AND u.sad_num = iu.sad_num
                               AND a.key_year = ia.key_year
                               AND a.key_cuo = ia.key_cuo
                               AND ia.key_dec IS NULL
                               AND a.key_nber = ia.key_nber
                               AND a.sad_num = ia.sad_num
                               AND iu.key_year = ia.key_year
                               AND iu.key_cuo = ia.key_cuo
                               AND iu.key_nber = ia.key_nber
                               AND iu.itm_nber = ia.itm_nber
                               --tributo GA
                               AND iu.key_year = gau.key_year
                               AND iu.key_cuo = gau.key_cuo
                               AND gau.key_dec IS NULL
                               AND iu.key_nber = gau.key_nber
                               AND iu.itm_nber = gau.itm_nber
                               AND iu.sad_num = gau.sad_num
                               AND gau.saditm_tax_code = 'GA'
                               AND ia.key_year = gaa.key_year
                               AND ia.key_cuo = gaa.key_cuo
                               AND gaa.key_dec IS NULL
                               AND ia.key_nber = gaa.key_nber
                               AND ia.itm_nber = gaa.itm_nber
                               AND ia.sad_num = gaa.sad_num
                               AND gaa.saditm_tax_code = 'GA'
                               --tributo IVA
                               AND iu.key_year = ivau.key_year
                               AND iu.key_cuo = ivau.key_cuo
                               AND ivau.key_dec IS NULL
                               AND iu.key_nber = ivau.key_nber
                               AND iu.itm_nber = ivau.itm_nber
                               AND iu.sad_num = ivau.sad_num
                               AND ivau.saditm_tax_code = 'IVA'
                               AND ia.key_year = ivaa.key_year
                               AND ia.key_cuo = ivaa.key_cuo
                               AND ivaa.key_dec IS NULL
                               AND ia.key_nber = ivaa.key_nber
                               AND ia.itm_nber = ivaa.itm_nber
                               AND ia.sad_num = ivaa.sad_num
                               AND ivaa.saditm_tax_code = 'IVA'
                               --tributo ICE
                               AND iu.key_year = iceu.key_year(+)
                               AND iu.key_cuo = iceu.key_cuo(+)
                               AND iceu.key_dec(+) IS NULL
                               AND iu.key_nber = iceu.key_nber(+)
                               AND iu.itm_nber = iceu.itm_nber(+)
                               AND iu.sad_num = iceu.sad_num(+)
                               AND iceu.saditm_tax_code(+) = 'ICE'
                               AND ia.key_year = icea.key_year(+)
                               AND ia.key_cuo = icea.key_cuo(+)
                               AND icea.key_dec(+) IS NULL
                               AND ia.key_nber = icea.key_nber(+)
                               AND ia.itm_nber = icea.itm_nber(+)
                               AND ia.sad_num = icea.sad_num(+)
                               AND icea.saditm_tax_code(+) = 'ICE'
                               --tributo IEHD
                               AND iu.key_year = iehdu.key_year(+)
                               AND iu.key_cuo = iehdu.key_cuo(+)
                               AND iehdu.key_dec(+) IS NULL
                               AND iu.key_nber = iehdu.key_nber(+)
                               AND iu.itm_nber = iehdu.itm_nber(+)
                               AND iu.sad_num = iehdu.sad_num(+)
                               AND iehdu.saditm_tax_code(+) = 'IEHD'
                               AND ia.key_year = iehda.key_year(+)
                               AND ia.key_cuo = iehda.key_cuo(+)
                               AND iehda.key_dec(+) IS NULL
                               AND ia.key_nber = iehda.key_nber(+)
                               AND ia.itm_nber = iehda.itm_nber(+)
                               AND ia.sad_num = iehda.sad_num(+)
                               AND iehda.saditm_tax_code(+) = 'IEHD'
                               --tributo ICD
                               AND iu.key_year = icdu.key_year(+)
                               AND iu.key_cuo = icdu.key_cuo(+)
                               AND icdu.key_dec(+) IS NULL
                               AND iu.key_nber = icdu.key_nber(+)
                               AND iu.itm_nber = icdu.itm_nber(+)
                               AND iu.sad_num = icdu.sad_num(+)
                               AND icdu.saditm_tax_code(+) = 'ICD'
                               AND ia.key_year = icda.key_year(+)
                               AND ia.key_cuo = icda.key_cuo(+)
                               AND icda.key_dec(+) IS NULL
                               AND ia.key_nber = icda.key_nber(+)
                               AND ia.itm_nber = icda.itm_nber(+)
                               AND ia.sad_num = icda.sad_num(+)
                               AND icda.saditm_tax_code(+) = 'ICD'
                               --para los valores FOB FLETE SEGURO OTROS CIF
                               AND iu.key_year = vu.key_year
                               AND iu.key_cuo = vu.key_cuo
                               AND vu.key_dec IS NULL
                               AND iu.key_nber = vu.key_nber
                               AND iu.itm_nber = vu.itm_nber
                               AND iu.sad_num = vu.sad_num
                               AND ia.key_year = va.key_year
                               AND ia.key_cuo = va.key_cuo
                               AND va.key_dec IS NULL
                               AND ia.key_nber = va.key_nber
                               AND ia.itm_nber = va.itm_nber
                               AND ia.sad_num = va.sad_num
                               --para recuperar informacion del control
                               AND f.alc_tipo_tramite = 'DUI'
                               AND f.alc_gestion = u.sad_reg_year
                               AND f.alc_aduana = u.key_cuo
                               AND u.sad_reg_serial = 'C'
                               AND f.alc_numero = u.sad_reg_nber
                               AND f.ctl_control_id = prm_codigo
                               AND f.alc_num = 0
                               AND f.alc_lstope = 'U'
                               AND f.ctl_control_id = n.ctl_control_id
                               AND n.not_num = 0
                               AND n.not_lstope = 'U') t;

        RETURN ct;
    END;


    FUNCTION devuelve_liquidaciontab (prm_codigo    IN VARCHAR2,
                                      prm_codigo2   IN VARCHAR2)
        RETURN cursortype
    IS
        ct   cursortype;
    BEGIN
        OPEN ct FOR
            SELECT   *
              FROM   (SELECT   u.*
                        FROM   ops$asy.sad_gen u,
                               ops$asy.sad_gen a,
                               ops$asy.sad_itm iu,
                               ops$asy.sad_itm ia,
                               ops$asy.sad_tax gau,
                               ops$asy.sad_tax gaa,
                               ops$asy.sad_tax ivau,
                               ops$asy.sad_tax ivaa,
                               ops$asy.sad_tax iceu,
                               ops$asy.sad_tax icea,
                               ops$asy.sad_tax iehdu,
                               ops$asy.sad_tax iehda,
                               ops$asy.sad_tax icdu,
                               ops$asy.sad_tax icda,
                               ops$asy.sad_itm_vim vu,
                               ops$asy.sad_itm_vim va,
                               fis_alcance f,
                               fis_notificacion n
                       WHERE       u.key_year = a.key_year
                               AND u.key_cuo = a.key_cuo
                               AND u.key_dec IS NOT NULL
                               AND u.key_dec = a.key_dec
                               AND u.key_nber = a.key_nber
                               AND a.sad_num =
                                      NVL (
                                          (SELECT   MAX (x.sad_pst_num)
                                             FROM   ops$asy.sad_gen x
                                            WHERE   x.key_cuo = u.key_cuo
                                                    AND x.sad_reg_year =
                                                           u.sad_reg_year
                                                    AND x.sad_reg_serial =
                                                           u.sad_reg_serial
                                                    AND x.sad_reg_nber =
                                                           u.sad_reg_nber
                                                    AND x.sad_pst_dat <=
                                                           n.not_fecha_notificacion),
                                          0)
                               AND u.sad_flw = 1
                               AND u.sad_num = 0
                               AND u.lst_ope = 'U'
                               AND u.key_year = iu.key_year
                               AND u.key_cuo = iu.key_cuo
                               AND u.key_dec = iu.key_dec
                               AND u.key_nber = iu.key_nber
                               AND u.sad_num = iu.sad_num
                               AND a.key_year = ia.key_year
                               AND a.key_cuo = ia.key_cuo
                               AND a.key_dec = ia.key_dec
                               AND a.key_nber = ia.key_nber
                               AND a.sad_num = ia.sad_num
                               AND iu.key_year = ia.key_year
                               AND iu.key_cuo = ia.key_cuo
                               AND iu.key_dec = ia.key_dec
                               AND iu.key_nber = ia.key_nber
                               AND iu.itm_nber = ia.itm_nber
                               --tributo GA
                               AND iu.key_year = gau.key_year
                               AND iu.key_cuo = gau.key_cuo
                               AND iu.key_dec = gau.key_dec
                               AND iu.key_nber = gau.key_nber
                               AND iu.itm_nber = gau.itm_nber
                               AND iu.sad_num = gau.sad_num
                               AND gau.saditm_tax_code = 'GA'
                               AND ia.key_year = gaa.key_year
                               AND ia.key_cuo = gaa.key_cuo
                               AND ia.key_dec = gaa.key_dec
                               AND ia.key_nber = gaa.key_nber
                               AND ia.itm_nber = gaa.itm_nber
                               AND ia.sad_num = gaa.sad_num
                               AND gaa.saditm_tax_code = 'GA'
                               --tributo IVA
                               AND iu.key_year = ivau.key_year
                               AND iu.key_cuo = ivau.key_cuo
                               AND iu.key_dec = ivau.key_dec
                               AND iu.key_nber = ivau.key_nber
                               AND iu.itm_nber = ivau.itm_nber
                               AND iu.sad_num = ivau.sad_num
                               AND ivau.saditm_tax_code = 'IVA'
                               AND ia.key_year = ivaa.key_year
                               AND ia.key_cuo = ivaa.key_cuo
                               AND ia.key_dec = ivaa.key_dec
                               AND ia.key_nber = ivaa.key_nber
                               AND ia.itm_nber = ivaa.itm_nber
                               AND ia.sad_num = ivaa.sad_num
                               AND ivaa.saditm_tax_code = 'IVA'
                               --tributo ICE
                               AND iu.key_year = iceu.key_year(+)
                               AND iu.key_cuo = iceu.key_cuo(+)
                               AND iu.key_dec = iceu.key_dec(+)
                               AND iu.key_nber = iceu.key_nber(+)
                               AND iu.itm_nber = iceu.itm_nber(+)
                               AND iu.sad_num = iceu.sad_num(+)
                               AND iceu.saditm_tax_code(+) = 'ICE'
                               AND ia.key_year = icea.key_year(+)
                               AND ia.key_cuo = icea.key_cuo(+)
                               AND ia.key_dec = icea.key_dec(+)
                               AND ia.key_nber = icea.key_nber(+)
                               AND ia.itm_nber = icea.itm_nber(+)
                               AND ia.sad_num = icea.sad_num(+)
                               AND icea.saditm_tax_code(+) = 'ICE'
                               --tributo IEHD
                               AND iu.key_year = iehdu.key_year(+)
                               AND iu.key_cuo = iehdu.key_cuo(+)
                               AND iu.key_dec = iehdu.key_dec(+)
                               AND iu.key_nber = iehdu.key_nber(+)
                               AND iu.itm_nber = iehdu.itm_nber(+)
                               AND iu.sad_num = iehdu.sad_num(+)
                               AND iehdu.saditm_tax_code(+) = 'IEHD'
                               AND ia.key_year = iehda.key_year(+)
                               AND ia.key_cuo = iehda.key_cuo(+)
                               AND ia.key_dec = iehda.key_dec(+)
                               AND ia.key_nber = iehda.key_nber(+)
                               AND ia.itm_nber = iehda.itm_nber(+)
                               AND ia.sad_num = iehda.sad_num(+)
                               AND iehda.saditm_tax_code(+) = 'IEHD'
                               --tributo ICD
                               AND iu.key_year = icdu.key_year(+)
                               AND iu.key_cuo = icdu.key_cuo(+)
                               AND iu.key_dec = icdu.key_dec(+)
                               AND iu.key_nber = icdu.key_nber(+)
                               AND iu.itm_nber = icdu.itm_nber(+)
                               AND iu.sad_num = icdu.sad_num(+)
                               AND icdu.saditm_tax_code(+) = 'ICD'
                               AND ia.key_year = icda.key_year(+)
                               AND ia.key_cuo = icda.key_cuo(+)
                               AND ia.key_dec = icda.key_dec(+)
                               AND ia.key_nber = icda.key_nber(+)
                               AND ia.itm_nber = icda.itm_nber(+)
                               AND ia.sad_num = icda.sad_num(+)
                               AND icda.saditm_tax_code(+) = 'ICD'
                               --para los valores FOB FLETE SEGURO OTROS CIF
                               AND iu.key_year = vu.key_year
                               AND iu.key_cuo = vu.key_cuo
                               AND iu.key_dec = vu.key_dec
                               AND iu.key_nber = vu.key_nber
                               AND iu.itm_nber = vu.itm_nber
                               AND iu.sad_num = vu.sad_num
                               AND ia.key_year = va.key_year
                               AND ia.key_cuo = va.key_cuo
                               AND ia.key_dec = va.key_dec
                               AND ia.key_nber = va.key_nber
                               AND ia.itm_nber = va.itm_nber
                               AND ia.sad_num = va.sad_num
                               --para recuperar informacion del control
                               AND f.alc_tipo_tramite = 'DUI'
                               AND f.alc_gestion = u.sad_reg_year
                               AND f.alc_aduana = u.key_cuo
                               AND u.sad_reg_serial = 'C'
                               AND f.alc_numero = u.sad_reg_nber
                               AND f.ctl_control_id = '2017250'
                               AND f.alc_num = 0
                               AND f.alc_lstope = 'U'
                               AND f.ctl_control_id = n.ctl_control_id
                               AND n.not_num = 0
                               AND n.not_lstope = 'U'
                      UNION
                      SELECT   u.*
                        FROM   ops$asy.sad_gen u,
                               ops$asy.sad_gen a,
                               ops$asy.sad_itm iu,
                               ops$asy.sad_itm ia,
                               ops$asy.sad_tax gau,
                               ops$asy.sad_tax gaa,
                               ops$asy.sad_tax ivau,
                               ops$asy.sad_tax ivaa,
                               ops$asy.sad_tax iceu,
                               ops$asy.sad_tax icea,
                               ops$asy.sad_tax iehdu,
                               ops$asy.sad_tax iehda,
                               ops$asy.sad_tax icdu,
                               ops$asy.sad_tax icda,
                               ops$asy.sad_itm_vim vu,
                               ops$asy.sad_itm_vim va,
                               fis_alcance f,
                               fis_notificacion n
                       WHERE       u.key_year = a.key_year
                               AND u.key_cuo = a.key_cuo
                               AND u.key_dec IS NULL
                               AND a.key_dec IS NULL
                               AND u.key_nber = a.key_nber
                               AND a.sad_num =
                                      NVL (
                                          (SELECT   MAX (x.sad_pst_num)
                                             FROM   ops$asy.sad_gen x
                                            WHERE   x.key_cuo = u.key_cuo
                                                    AND x.sad_reg_year =
                                                           u.sad_reg_year
                                                    AND x.sad_reg_serial =
                                                           u.sad_reg_serial
                                                    AND x.sad_reg_nber =
                                                           u.sad_reg_nber
                                                    AND x.sad_pst_dat <=
                                                           n.not_fecha_notificacion),
                                          0)
                               AND u.sad_flw = 1
                               AND u.sad_num = 0
                               AND u.lst_ope = 'U'
                               AND u.key_year = iu.key_year
                               AND u.key_cuo = iu.key_cuo
                               AND iu.key_dec IS NULL
                               AND u.key_nber = iu.key_nber
                               AND u.sad_num = iu.sad_num
                               AND a.key_year = ia.key_year
                               AND a.key_cuo = ia.key_cuo
                               AND ia.key_dec IS NULL
                               AND a.key_nber = ia.key_nber
                               AND a.sad_num = ia.sad_num
                               AND iu.key_year = ia.key_year
                               AND iu.key_cuo = ia.key_cuo
                               AND iu.key_nber = ia.key_nber
                               AND iu.itm_nber = ia.itm_nber
                               --tributo GA
                               AND iu.key_year = gau.key_year
                               AND iu.key_cuo = gau.key_cuo
                               AND gau.key_dec IS NULL
                               AND iu.key_nber = gau.key_nber
                               AND iu.itm_nber = gau.itm_nber
                               AND iu.sad_num = gau.sad_num
                               AND gau.saditm_tax_code = 'GA'
                               AND ia.key_year = gaa.key_year
                               AND ia.key_cuo = gaa.key_cuo
                               AND gaa.key_dec IS NULL
                               AND ia.key_nber = gaa.key_nber
                               AND ia.itm_nber = gaa.itm_nber
                               AND ia.sad_num = gaa.sad_num
                               AND gaa.saditm_tax_code = 'GA'
                               --tributo IVA
                               AND iu.key_year = ivau.key_year
                               AND iu.key_cuo = ivau.key_cuo
                               AND ivau.key_dec IS NULL
                               AND iu.key_nber = ivau.key_nber
                               AND iu.itm_nber = ivau.itm_nber
                               AND iu.sad_num = ivau.sad_num
                               AND ivau.saditm_tax_code = 'IVA'
                               AND ia.key_year = ivaa.key_year
                               AND ia.key_cuo = ivaa.key_cuo
                               AND ivaa.key_dec IS NULL
                               AND ia.key_nber = ivaa.key_nber
                               AND ia.itm_nber = ivaa.itm_nber
                               AND ia.sad_num = ivaa.sad_num
                               AND ivaa.saditm_tax_code = 'IVA'
                               --tributo ICE
                               AND iu.key_year = iceu.key_year(+)
                               AND iu.key_cuo = iceu.key_cuo(+)
                               AND iceu.key_dec(+) IS NULL
                               AND iu.key_nber = iceu.key_nber(+)
                               AND iu.itm_nber = iceu.itm_nber(+)
                               AND iu.sad_num = iceu.sad_num(+)
                               AND iceu.saditm_tax_code(+) = 'ICE'
                               AND ia.key_year = icea.key_year(+)
                               AND ia.key_cuo = icea.key_cuo(+)
                               AND icea.key_dec(+) IS NULL
                               AND ia.key_nber = icea.key_nber(+)
                               AND ia.itm_nber = icea.itm_nber(+)
                               AND ia.sad_num = icea.sad_num(+)
                               AND icea.saditm_tax_code(+) = 'ICE'
                               --tributo IEHD
                               AND iu.key_year = iehdu.key_year(+)
                               AND iu.key_cuo = iehdu.key_cuo(+)
                               AND iehdu.key_dec(+) IS NULL
                               AND iu.key_nber = iehdu.key_nber(+)
                               AND iu.itm_nber = iehdu.itm_nber(+)
                               AND iu.sad_num = iehdu.sad_num(+)
                               AND iehdu.saditm_tax_code(+) = 'IEHD'
                               AND ia.key_year = iehda.key_year(+)
                               AND ia.key_cuo = iehda.key_cuo(+)
                               AND iehda.key_dec(+) IS NULL
                               AND ia.key_nber = iehda.key_nber(+)
                               AND ia.itm_nber = iehda.itm_nber(+)
                               AND ia.sad_num = iehda.sad_num(+)
                               AND iehda.saditm_tax_code(+) = 'IEHD'
                               --tributo ICD
                               AND iu.key_year = icdu.key_year(+)
                               AND iu.key_cuo = icdu.key_cuo(+)
                               AND icdu.key_dec(+) IS NULL
                               AND iu.key_nber = icdu.key_nber(+)
                               AND iu.itm_nber = icdu.itm_nber(+)
                               AND iu.sad_num = icdu.sad_num(+)
                               AND icdu.saditm_tax_code(+) = 'ICD'
                               AND ia.key_year = icda.key_year(+)
                               AND ia.key_cuo = icda.key_cuo(+)
                               AND icda.key_dec(+) IS NULL
                               AND ia.key_nber = icda.key_nber(+)
                               AND ia.itm_nber = icda.itm_nber(+)
                               AND ia.sad_num = icda.sad_num(+)
                               AND icda.saditm_tax_code(+) = 'ICD'
                               --para los valores FOB FLETE SEGURO OTROS CIF
                               AND iu.key_year = vu.key_year
                               AND iu.key_cuo = vu.key_cuo
                               AND vu.key_dec IS NULL
                               AND iu.key_nber = vu.key_nber
                               AND iu.itm_nber = vu.itm_nber
                               AND iu.sad_num = vu.sad_num
                               AND ia.key_year = va.key_year
                               AND ia.key_cuo = va.key_cuo
                               AND va.key_dec IS NULL
                               AND ia.key_nber = va.key_nber
                               AND ia.itm_nber = va.itm_nber
                               AND ia.sad_num = va.sad_num
                               --para recuperar informacion del control
                               AND f.alc_tipo_tramite = 'DUI'
                               AND f.alc_gestion = u.sad_reg_year
                               AND f.alc_aduana = u.key_cuo
                               AND u.sad_reg_serial = 'C'
                               AND f.alc_numero = u.sad_reg_nber
                               AND f.ctl_control_id = '2017250'
                               AND f.alc_num = 0
                               AND f.alc_lstope = 'U'
                               AND f.ctl_control_id = n.ctl_control_id
                               AND n.not_num = 0
                               AND n.not_lstope = 'U') t;

        RETURN ct;
    END;

    FUNCTION dev_liquidacion (prm_codigo IN VARCHAR2)
        RETURN cursortype
    IS
        ct   cursortype;
    BEGIN
        OPEN ct FOR
              SELECT                                                       --1
                    t  .itm,
                       t.nandina_ant,
                       t.nandina_u,
                       t.reg_year,
                       t.key_cuo,
                       t.reg_nber,
                       t.fecha_reg,
                       t.fecha_venc,
                       t.fecha_calculo,
                       --10
                       t.dec_fob,
                       t.dec_flete,
                       t.dec_seguro,
                       t.dec_otros,
                       t.dec_cifusd,
                       t.dec_tc,
                       t.dec_cifbs,
                       t.dec_ga,
                       t.dec_iva,
                       t.dec_ice,
                       --20
                       t.dec_iehd,
                       t.dec_icd,
                       --22
                       t.enc_fob,
                       t.enc_flete,
                       t.enc_seguro,
                       t.enc_otros,
                       t.enc_cifusd,
                       t.enc_tc,
                       t.enc_cifbs,
                       t.enc_ga,
                       --30
                       t.enc_iva,
                       t.enc_ice,
                       t.enc_iehd,
                       t.enc_icd,
                       --34
                       t.tc_ufvfecvenc,
                       t.to_ga,
                       t.to_iva,
                       t.to_ice,
                       t.to_iehd,
                       t.to_icd,
                       --40
                       t.to_ga + t.to_iva + t.to_ice + t.to_iehd + t.to_icd
                           to_total,
                       --41
                       ROUND (t.to_ga / t.tc_ufvfecvenc, 2) toufv_ga,
                       ROUND (t.to_iva / t.tc_ufvfecvenc, 2) toufv_iva,
                       ROUND (t.to_ice / t.tc_ufvfecvenc, 2) toufv_ice,
                       ROUND (t.to_iehd / t.tc_ufvfecvenc, 2) toufv_iehd,
                       ROUND (t.to_icd / t.tc_ufvfecvenc, 2) toufv_icd,
                       ROUND (
                           (  t.to_ga
                            + t.to_iva
                            + t.to_ice
                            + t.to_iehd
                            + t.to_icd)
                           / t.tc_ufvfecvenc,
                           2)
                           toufv_total,
                       t.dias,
                       ROUND (POWER (1 + (t.tc_tprfecvenc / 360), t.dias), 4)
                           formula,
                       ROUND (t.ga_dt / t.tc_ufvfecvenc, 2)
                       - ROUND (t.to_ga / t.tc_ufvfecvenc, 2)
                           itufv_ga,
                       --50
                       ROUND (t.to_iva / t.tc_ufvfecvenc, 2)
                       - ROUND (t.iva_dt / t.tc_ufvfecvenc, 2)
                           itufv_iva,
                       ROUND (t.to_ice / t.tc_ufvfecvenc, 2)
                       - ROUND (t.ice_dt / t.tc_ufvfecvenc, 2)
                           itufv_ice,
                       ROUND (t.to_iehd / t.tc_ufvfecvenc, 2)
                       - ROUND (t.iehd_dt / t.tc_ufvfecvenc, 2)
                           itufv_iehd,
                       ROUND (t.to_icd / t.tc_ufvfecvenc, 2)
                       - ROUND (t.icd_dt / t.tc_ufvfecvenc, 2)
                           itufv_icd,
                       (ROUND (
                            (  t.to_ga
                             + t.to_iva
                             + t.to_ice
                             + t.to_iehd
                             + t.to_icd)
                            / t.tc_ufvfecvenc,
                            2)
                        - ROUND (
                              (  t.ga_dt
                               + t.iva_dt
                               + t.ice_dt
                               + t.iehd_dt
                               + t.icd_dt)
                              / t.tc_ufvfecvenc,
                              2))
                           itufv_total,
                       --55
                       ROUND ( (t.to_ga + t.ga_dt) / t.tc_ufvhoy, 2) dt_ga,
                       ROUND ( (t.to_iva + t.iva_dt) / t.tc_ufvhoy, 2) dt_iva,
                       ROUND ( (t.to_ice + t.ice_dt) / t.tc_ufvhoy, 2) dt_ice,
                       ROUND ( (t.to_iehd + t.iehd_dt) / t.tc_ufvhoy, 2)
                           dt_iehd,
                       ROUND ( (t.to_icd + t.icd_dt) / t.tc_ufvhoy, 2) dt_icd,
                       --60
                       ROUND (
                           (  t.to_ga
                            + t.to_iva
                            + t.to_ice
                            + t.to_iehd
                            + t.to_icd
                            + t.ga_dt
                            + t.iva_dt
                            + t.ice_dt
                            + t.iehd_dt
                            + t.icd_dt)
                           / t.tc_ufvfecvenc,
                           2)
                           dt_total,
                       --61
                       ROUND (
                           ( (  t.to_ga
                              + t.to_iva
                              + t.to_ice
                              + t.to_iehd
                              + t.to_icd)
                            / t.tc_ufvhoy)
                           * t.tc_ufvfecvenc,
                           2)
                           sancion,
                       --62
                       ROUND (
                             t.to_ga
                           + t.to_iva
                           + t.to_ice
                           + t.to_iehd
                           + t.to_icd
                           + t.ga_dt
                           + t.iva_dt
                           + t.ice_dt
                           + t.iehd_dt
                           + t.icd_dt,
                           2)
                           adeudo_totalbs,
                       --63
                       ROUND (
                           (  t.to_ga
                            + t.to_iva
                            + t.to_ice
                            + t.to_iehd
                            + t.to_icd
                            + t.ga_dt
                            + t.iva_dt
                            + t.ice_dt
                            + t.iehd_dt
                            + t.icd_dt)
                           / t.tc_ufvhoy,
                           2)
                           adeudo_totalufv,
                       --64
                       t.tc_ufvhoy,
                       t.unum,
                       t.anum,
                       t.fecnot
                FROM   (SELECT   iu.itm_nber itm,
                                 ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                     nandina_ant,
                                 iu.saditm_hs_cod || iu.saditm_hsprec_cod
                                     nandina_u,
                                 u.sad_reg_year reg_year,
                                 u.key_cuo key_cuo,
                                 u.sad_reg_nber reg_nber,
                                 TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')
                                     fecha_reg,
                                 TO_CHAR (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'dd/mm/yyyy')
                                     fecha_venc,
                                 TO_CHAR (SYSDATE, 'dd/mm/yyyy') fecha_calculo,
                                 va.sad_iitminv_valc dec_fob,
                                 va.sad_iitmefr_valc dec_flete,
                                 va.sad_iitmins_valc dec_seguro,
                                 va.sad_iitmotc_valc dec_otros,
                                 ROUND (
                                     va.sad_iitmcif_valn / va.sad_iitminv_rat,
                                     2)
                                     dec_cifusd,
                                 va.sad_iitminv_rat dec_tc,
                                 va.sad_iitmcif_valn dec_cifbs,
                                 gaa.saditm_tax_amount dec_ga,
                                 ivaa.saditm_tax_amount dec_iva,
                                 NVL (icea.saditm_tax_amount, 0) dec_ice,
                                 NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                 NVL (icda.saditm_tax_amount, 0) dec_icd,
                                 vu.sad_iitminv_valc enc_fob,
                                 vu.sad_iitmefr_valc enc_flete,
                                 vu.sad_iitmins_valc enc_seguro,
                                 vu.sad_iitmotc_valc enc_otros,
                                 ROUND (
                                     vu.sad_iitmcif_valn / vu.sad_iitminv_rat,
                                     2)
                                     enc_cifusd,
                                 vu.sad_iitminv_rat enc_tc,
                                 vu.sad_iitmcif_valn enc_cifbs,
                                 gau.saditm_tax_amount enc_ga,
                                 ivau.saditm_tax_amount enc_iva,
                                 NVL (iceu.saditm_tax_amount, 0) enc_ice,
                                 NVL (iehdu.saditm_tax_amount, 0) enc_iehd,
                                 NVL (icdu.saditm_tax_amount, 0) enc_icd,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'UFV')
                                     tc_ufvfecvenc,
                                 pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                         'UFV')
                                     tc_ufvhoy,
                                 gau.saditm_tax_amount - gaa.saditm_tax_amount
                                     to_ga,
                                 ivau.saditm_tax_amount
                                 - ivaa.saditm_tax_amount
                                     to_iva,
                                 NVL (iceu.saditm_tax_amount, 0)
                                 - NVL (icea.saditm_tax_amount, 0)
                                     to_ice,
                                 NVL (iehdu.saditm_tax_amount, 0)
                                 - NVL (iehda.saditm_tax_amount, 0)
                                     to_iehd,
                                 NVL (icdu.saditm_tax_amount, 0)
                                 - NVL (icda.saditm_tax_amount, 0)
                                     to_icd,
                                 TRUNC (SYSDATE)
                                 - pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy'))
                                     dias,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'TPR')
                                     tc_tprfecvenc,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     ga_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     iva_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     ice_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     iehd_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     icd_dt,
                                 u.sad_num unum,
                                 a.sad_num anum,
                                 n.not_fecha_notificacion fecnot
                          FROM   ops$asy.sad_gen u,
                                 ops$asy.sad_gen a,
                                 ops$asy.sad_itm iu,
                                 ops$asy.sad_itm ia,
                                 ops$asy.sad_tax gau,
                                 ops$asy.sad_tax gaa,
                                 ops$asy.sad_tax ivau,
                                 ops$asy.sad_tax ivaa,
                                 ops$asy.sad_tax iceu,
                                 ops$asy.sad_tax icea,
                                 ops$asy.sad_tax iehdu,
                                 ops$asy.sad_tax iehda,
                                 ops$asy.sad_tax icdu,
                                 ops$asy.sad_tax icda,
                                 ops$asy.sad_itm_vim vu,
                                 ops$asy.sad_itm_vim va,
                                 fis_alcance f,
                                 fis_notificacion n
                         WHERE       u.key_year = a.key_year
                                 AND u.key_cuo = a.key_cuo
                                 AND u.key_dec IS NOT NULL
                                 AND u.key_dec = a.key_dec
                                 AND u.key_nber = a.key_nber
                                 AND a.sad_num =
                                        NVL (
                                            (SELECT   MIN (x.sad_pst_num)
                                               FROM   ops$asy.sad_gen x
                                              WHERE   x.key_cuo = u.key_cuo
                                                      AND x.sad_reg_year =
                                                             u.sad_reg_year
                                                      AND x.sad_reg_serial =
                                                             u.sad_reg_serial
                                                      AND x.sad_reg_nber =
                                                             u.sad_reg_nber
                                                      AND x.sad_pst_dat >=
                                                             n.not_fecha_notificacion),
                                            0)
                                 AND u.sad_flw = 1
                                 AND u.sad_num = 0
                                 AND u.lst_ope = 'U'
                                 AND u.key_year = iu.key_year
                                 AND u.key_cuo = iu.key_cuo
                                 AND u.key_dec = iu.key_dec
                                 AND u.key_nber = iu.key_nber
                                 AND u.sad_num = iu.sad_num
                                 AND a.key_year = ia.key_year
                                 AND a.key_cuo = ia.key_cuo
                                 AND a.key_dec = ia.key_dec
                                 AND a.key_nber = ia.key_nber
                                 AND a.sad_num = ia.sad_num
                                 AND iu.key_year = ia.key_year
                                 AND iu.key_cuo = ia.key_cuo
                                 AND iu.key_dec = ia.key_dec
                                 AND iu.key_nber = ia.key_nber
                                 AND iu.itm_nber = ia.itm_nber
                                 --tributo GA
                                 AND iu.key_year = gau.key_year
                                 AND iu.key_cuo = gau.key_cuo
                                 AND iu.key_dec = gau.key_dec
                                 AND iu.key_nber = gau.key_nber
                                 AND iu.itm_nber = gau.itm_nber
                                 AND iu.sad_num = gau.sad_num
                                 AND gau.saditm_tax_code = 'GA'
                                 AND ia.key_year = gaa.key_year
                                 AND ia.key_cuo = gaa.key_cuo
                                 AND ia.key_dec = gaa.key_dec
                                 AND ia.key_nber = gaa.key_nber
                                 AND ia.itm_nber = gaa.itm_nber
                                 AND ia.sad_num = gaa.sad_num
                                 AND gaa.saditm_tax_code = 'GA'
                                 --tributo IVA
                                 AND iu.key_year = ivau.key_year
                                 AND iu.key_cuo = ivau.key_cuo
                                 AND iu.key_dec = ivau.key_dec
                                 AND iu.key_nber = ivau.key_nber
                                 AND iu.itm_nber = ivau.itm_nber
                                 AND iu.sad_num = ivau.sad_num
                                 AND ivau.saditm_tax_code = 'IVA'
                                 AND ia.key_year = ivaa.key_year
                                 AND ia.key_cuo = ivaa.key_cuo
                                 AND ia.key_dec = ivaa.key_dec
                                 AND ia.key_nber = ivaa.key_nber
                                 AND ia.itm_nber = ivaa.itm_nber
                                 AND ia.sad_num = ivaa.sad_num
                                 AND ivaa.saditm_tax_code = 'IVA'
                                 --tributo ICE
                                 AND iu.key_year = iceu.key_year(+)
                                 AND iu.key_cuo = iceu.key_cuo(+)
                                 AND iu.key_dec = iceu.key_dec(+)
                                 AND iu.key_nber = iceu.key_nber(+)
                                 AND iu.itm_nber = iceu.itm_nber(+)
                                 AND iu.sad_num = iceu.sad_num(+)
                                 AND iceu.saditm_tax_code(+) = 'ICE'
                                 AND ia.key_year = icea.key_year(+)
                                 AND ia.key_cuo = icea.key_cuo(+)
                                 AND ia.key_dec = icea.key_dec(+)
                                 AND ia.key_nber = icea.key_nber(+)
                                 AND ia.itm_nber = icea.itm_nber(+)
                                 AND ia.sad_num = icea.sad_num(+)
                                 AND icea.saditm_tax_code(+) = 'ICE'
                                 --tributo IEHD
                                 AND iu.key_year = iehdu.key_year(+)
                                 AND iu.key_cuo = iehdu.key_cuo(+)
                                 AND iu.key_dec = iehdu.key_dec(+)
                                 AND iu.key_nber = iehdu.key_nber(+)
                                 AND iu.itm_nber = iehdu.itm_nber(+)
                                 AND iu.sad_num = iehdu.sad_num(+)
                                 AND iehdu.saditm_tax_code(+) = 'IEHD'
                                 AND ia.key_year = iehda.key_year(+)
                                 AND ia.key_cuo = iehda.key_cuo(+)
                                 AND ia.key_dec = iehda.key_dec(+)
                                 AND ia.key_nber = iehda.key_nber(+)
                                 AND ia.itm_nber = iehda.itm_nber(+)
                                 AND ia.sad_num = iehda.sad_num(+)
                                 AND iehda.saditm_tax_code(+) = 'IEHD'
                                 --tributo ICD
                                 AND iu.key_year = icdu.key_year(+)
                                 AND iu.key_cuo = icdu.key_cuo(+)
                                 AND iu.key_dec = icdu.key_dec(+)
                                 AND iu.key_nber = icdu.key_nber(+)
                                 AND iu.itm_nber = icdu.itm_nber(+)
                                 AND iu.sad_num = icdu.sad_num(+)
                                 AND icdu.saditm_tax_code(+) = 'ICD'
                                 AND ia.key_year = icda.key_year(+)
                                 AND ia.key_cuo = icda.key_cuo(+)
                                 AND ia.key_dec = icda.key_dec(+)
                                 AND ia.key_nber = icda.key_nber(+)
                                 AND ia.itm_nber = icda.itm_nber(+)
                                 AND ia.sad_num = icda.sad_num(+)
                                 AND icda.saditm_tax_code(+) = 'ICD'
                                 --para los valores FOB FLETE SEGURO OTROS CIF
                                 AND iu.key_year = vu.key_year
                                 AND iu.key_cuo = vu.key_cuo
                                 AND iu.key_dec = vu.key_dec
                                 AND iu.key_nber = vu.key_nber
                                 AND iu.itm_nber = vu.itm_nber
                                 AND iu.sad_num = vu.sad_num
                                 AND ia.key_year = va.key_year
                                 AND ia.key_cuo = va.key_cuo
                                 AND ia.key_dec = va.key_dec
                                 AND ia.key_nber = va.key_nber
                                 AND ia.itm_nber = va.itm_nber
                                 AND ia.sad_num = va.sad_num
                                 --para recuperar informacion del control
                                 AND f.alc_tipo_tramite = 'DUI'
                                 AND f.alc_gestion = u.sad_reg_year
                                 AND f.alc_aduana = u.key_cuo
                                 AND u.sad_reg_serial = 'C'
                                 AND f.alc_numero = u.sad_reg_nber
                                 AND f.ctl_control_id = prm_codigo
                                 AND f.alc_num = 0
                                 AND f.alc_lstope = 'U'
                                 AND f.ctl_control_id = n.ctl_control_id
                                 AND n.not_num = 0
                                 AND n.not_lstope = 'U'
                        UNION ALL
                        SELECT   iu.itm_nber itm,
                                 ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                     nandina_ant,
                                 iu.saditm_hs_cod || iu.saditm_hsprec_cod
                                     nandina_u,
                                 u.sad_reg_year reg_year,
                                 u.key_cuo key_cuo,
                                 u.sad_reg_nber reg_nber,
                                 TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')
                                     fecha_reg,
                                 TO_CHAR (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'dd/mm/yyyy')
                                     fecha_venc,
                                 TO_CHAR (SYSDATE, 'dd/mm/yyyy') fecha_calculo,
                                 va.sad_iitminv_valc dec_fob,
                                 va.sad_iitmefr_valc dec_flete,
                                 va.sad_iitmins_valc dec_seguro,
                                 va.sad_iitmotc_valc dec_otros,
                                 ROUND (
                                     va.sad_iitmcif_valn / va.sad_iitminv_rat,
                                     2)
                                     dec_cifusd,
                                 va.sad_iitminv_rat dec_tc,
                                 va.sad_iitmcif_valn dec_cifbs,
                                 gaa.saditm_tax_amount dec_ga,
                                 ivaa.saditm_tax_amount dec_iva,
                                 NVL (icea.saditm_tax_amount, 0) dec_ice,
                                 NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                 NVL (icda.saditm_tax_amount, 0) dec_icd,
                                 vu.sad_iitminv_valc enc_fob,
                                 vu.sad_iitmefr_valc enc_flete,
                                 vu.sad_iitmins_valc enc_seguro,
                                 vu.sad_iitmotc_valc enc_otros,
                                 ROUND (
                                     vu.sad_iitmcif_valn / vu.sad_iitminv_rat,
                                     2)
                                     enc_cifusd,
                                 vu.sad_iitminv_rat enc_tc,
                                 vu.sad_iitmcif_valn enc_cifbs,
                                 gau.saditm_tax_amount enc_ga,
                                 ivau.saditm_tax_amount enc_iva,
                                 NVL (iceu.saditm_tax_amount, 0) enc_ice,
                                 NVL (iehdu.saditm_tax_amount, 0) enc_iehd,
                                 NVL (icdu.saditm_tax_amount, 0) enc_icd,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'UFV')
                                     tc_ufvfecvenc,
                                 pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                         'UFV')
                                     tc_ufvhoy,
                                 gau.saditm_tax_amount - gaa.saditm_tax_amount
                                     to_ga,
                                 ivau.saditm_tax_amount
                                 - ivaa.saditm_tax_amount
                                     to_iva,
                                 NVL (iceu.saditm_tax_amount, 0)
                                 - NVL (icea.saditm_tax_amount, 0)
                                     to_ice,
                                 NVL (iehdu.saditm_tax_amount, 0)
                                 - NVL (iehda.saditm_tax_amount, 0)
                                     to_iehd,
                                 NVL (icdu.saditm_tax_amount, 0)
                                 - NVL (icda.saditm_tax_amount, 0)
                                     to_icd,
                                 TRUNC (SYSDATE)
                                 - pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy'))
                                     dias,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'TPR')
                                     tc_tprfecvenc,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     ga_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     iva_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     ice_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     iehd_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (SYSDATE),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     icd_dt,
                                 u.sad_num unum,
                                 a.sad_num anum,
                                 n.not_fecha_notificacion fecnot
                          FROM   ops$asy.sad_gen u,
                                 ops$asy.sad_gen a,
                                 ops$asy.sad_itm iu,
                                 ops$asy.sad_itm ia,
                                 ops$asy.sad_tax gau,
                                 ops$asy.sad_tax gaa,
                                 ops$asy.sad_tax ivau,
                                 ops$asy.sad_tax ivaa,
                                 ops$asy.sad_tax iceu,
                                 ops$asy.sad_tax icea,
                                 ops$asy.sad_tax iehdu,
                                 ops$asy.sad_tax iehda,
                                 ops$asy.sad_tax icdu,
                                 ops$asy.sad_tax icda,
                                 ops$asy.sad_itm_vim vu,
                                 ops$asy.sad_itm_vim va,
                                 fis_alcance f,
                                 fis_notificacion n
                         WHERE       u.key_year = a.key_year
                                 AND u.key_cuo = a.key_cuo
                                 AND u.key_dec IS NULL
                                 AND a.key_dec IS NULL
                                 AND u.key_nber = a.key_nber
                                 AND a.sad_num =
                                        NVL (
                                            (SELECT   MIN (x.sad_pst_num)
                                               FROM   ops$asy.sad_gen x
                                              WHERE   x.key_cuo = u.key_cuo
                                                      AND x.sad_reg_year =
                                                             u.sad_reg_year
                                                      AND x.sad_reg_serial =
                                                             u.sad_reg_serial
                                                      AND x.sad_reg_nber =
                                                             u.sad_reg_nber
                                                      AND x.sad_pst_dat >=
                                                             n.not_fecha_notificacion),
                                            0)
                                 AND u.sad_flw = 1
                                 AND u.sad_num = 0
                                 AND u.lst_ope = 'U'
                                 AND u.key_year = iu.key_year
                                 AND u.key_cuo = iu.key_cuo
                                 AND iu.key_dec IS NULL
                                 AND u.key_nber = iu.key_nber
                                 AND u.sad_num = iu.sad_num
                                 AND a.key_year = ia.key_year
                                 AND a.key_cuo = ia.key_cuo
                                 AND ia.key_dec IS NULL
                                 AND a.key_nber = ia.key_nber
                                 AND a.sad_num = ia.sad_num
                                 AND iu.key_year = ia.key_year
                                 AND iu.key_cuo = ia.key_cuo
                                 AND iu.key_nber = ia.key_nber
                                 AND iu.itm_nber = ia.itm_nber
                                 --tributo GA
                                 AND iu.key_year = gau.key_year
                                 AND iu.key_cuo = gau.key_cuo
                                 AND gau.key_dec IS NULL
                                 AND iu.key_nber = gau.key_nber
                                 AND iu.itm_nber = gau.itm_nber
                                 AND iu.sad_num = gau.sad_num
                                 AND gau.saditm_tax_code = 'GA'
                                 AND ia.key_year = gaa.key_year
                                 AND ia.key_cuo = gaa.key_cuo
                                 AND gaa.key_dec IS NULL
                                 AND ia.key_nber = gaa.key_nber
                                 AND ia.itm_nber = gaa.itm_nber
                                 AND ia.sad_num = gaa.sad_num
                                 AND gaa.saditm_tax_code = 'GA'
                                 --tributo IVA
                                 AND iu.key_year = ivau.key_year
                                 AND iu.key_cuo = ivau.key_cuo
                                 AND ivau.key_dec IS NULL
                                 AND iu.key_nber = ivau.key_nber
                                 AND iu.itm_nber = ivau.itm_nber
                                 AND iu.sad_num = ivau.sad_num
                                 AND ivau.saditm_tax_code = 'IVA'
                                 AND ia.key_year = ivaa.key_year
                                 AND ia.key_cuo = ivaa.key_cuo
                                 AND ivaa.key_dec IS NULL
                                 AND ia.key_nber = ivaa.key_nber
                                 AND ia.itm_nber = ivaa.itm_nber
                                 AND ia.sad_num = ivaa.sad_num
                                 AND ivaa.saditm_tax_code = 'IVA'
                                 --tributo ICE
                                 AND iu.key_year = iceu.key_year(+)
                                 AND iu.key_cuo = iceu.key_cuo(+)
                                 AND iceu.key_dec(+) IS NULL
                                 AND iu.key_nber = iceu.key_nber(+)
                                 AND iu.itm_nber = iceu.itm_nber(+)
                                 AND iu.sad_num = iceu.sad_num(+)
                                 AND iceu.saditm_tax_code(+) = 'ICE'
                                 AND ia.key_year = icea.key_year(+)
                                 AND ia.key_cuo = icea.key_cuo(+)
                                 AND icea.key_dec(+) IS NULL
                                 AND ia.key_nber = icea.key_nber(+)
                                 AND ia.itm_nber = icea.itm_nber(+)
                                 AND ia.sad_num = icea.sad_num(+)
                                 AND icea.saditm_tax_code(+) = 'ICE'
                                 --tributo IEHD
                                 AND iu.key_year = iehdu.key_year(+)
                                 AND iu.key_cuo = iehdu.key_cuo(+)
                                 AND iehdu.key_dec(+) IS NULL
                                 AND iu.key_nber = iehdu.key_nber(+)
                                 AND iu.itm_nber = iehdu.itm_nber(+)
                                 AND iu.sad_num = iehdu.sad_num(+)
                                 AND iehdu.saditm_tax_code(+) = 'IEHD'
                                 AND ia.key_year = iehda.key_year(+)
                                 AND ia.key_cuo = iehda.key_cuo(+)
                                 AND iehda.key_dec(+) IS NULL
                                 AND ia.key_nber = iehda.key_nber(+)
                                 AND ia.itm_nber = iehda.itm_nber(+)
                                 AND ia.sad_num = iehda.sad_num(+)
                                 AND iehda.saditm_tax_code(+) = 'IEHD'
                                 --tributo ICD
                                 AND iu.key_year = icdu.key_year(+)
                                 AND iu.key_cuo = icdu.key_cuo(+)
                                 AND icdu.key_dec(+) IS NULL
                                 AND iu.key_nber = icdu.key_nber(+)
                                 AND iu.itm_nber = icdu.itm_nber(+)
                                 AND iu.sad_num = icdu.sad_num(+)
                                 AND icdu.saditm_tax_code(+) = 'ICD'
                                 AND ia.key_year = icda.key_year(+)
                                 AND ia.key_cuo = icda.key_cuo(+)
                                 AND icda.key_dec(+) IS NULL
                                 AND ia.key_nber = icda.key_nber(+)
                                 AND ia.itm_nber = icda.itm_nber(+)
                                 AND ia.sad_num = icda.sad_num(+)
                                 AND icda.saditm_tax_code(+) = 'ICD'
                                 --para los valores FOB FLETE SEGURO OTROS CIF
                                 AND iu.key_year = vu.key_year
                                 AND iu.key_cuo = vu.key_cuo
                                 AND vu.key_dec IS NULL
                                 AND iu.key_nber = vu.key_nber
                                 AND iu.itm_nber = vu.itm_nber
                                 AND iu.sad_num = vu.sad_num
                                 AND ia.key_year = va.key_year
                                 AND ia.key_cuo = va.key_cuo
                                 AND va.key_dec IS NULL
                                 AND ia.key_nber = va.key_nber
                                 AND ia.itm_nber = va.itm_nber
                                 AND ia.sad_num = va.sad_num
                                 --para recuperar informacion del control
                                 AND f.alc_tipo_tramite = 'DUI'
                                 AND f.alc_gestion = u.sad_reg_year
                                 AND f.alc_aduana = u.key_cuo
                                 AND u.sad_reg_serial = 'C'
                                 AND f.alc_numero = u.sad_reg_nber
                                 AND f.ctl_control_id = prm_codigo
                                 AND f.alc_num = 0
                                 AND f.alc_lstope = 'U'
                                 AND f.ctl_control_id = n.ctl_control_id
                                 AND n.not_num = 0
                                 AND n.not_lstope = 'U') t
            ORDER BY   4,
                       5,
                       6,
                       1;

        RETURN ct;
    END;

    FUNCTION dev_liquidacionfecha (prm_codigo   IN VARCHAR2,
                                   prm_fecha    IN VARCHAR2)
        RETURN cursortype
    IS
        ct              cursortype;
        fecha_reporte   DATE;
    BEGIN
        IF prm_fecha IS NULL
        THEN
            fecha_reporte := TRUNC (SYSDATE);
        ELSE
            fecha_reporte := TO_DATE (prm_fecha, 'dd/mm/yyyy');
        END IF;

        OPEN ct FOR
              SELECT                                                       --1
                    t  .itm,
                       t.nandina_ant,
                       t.nandina_u,
                       t.reg_year,
                       t.key_cuo,
                       t.reg_nber,
                       t.fecha_reg,
                       t.fecha_venc,
                       t.fecha_calculo,
                       --10
                       t.dec_fob,
                       t.dec_flete,
                       t.dec_seguro,
                       t.dec_otros,
                       t.dec_cifusd,
                       t.dec_tc,
                       t.dec_cifbs,
                       t.dec_ga,
                       t.dec_iva,
                       t.dec_ice,
                       --20
                       t.dec_iehd,
                       t.dec_icd,
                       --22
                       t.enc_fob,
                       t.enc_flete,
                       t.enc_seguro,
                       t.enc_otros,
                       t.enc_cifusd,
                       t.enc_tc,
                       t.enc_cifbs,
                       t.enc_ga,
                       --30
                       t.enc_iva,
                       t.enc_ice,
                       t.enc_iehd,
                       t.enc_icd,
                       --34
                       t.tc_ufvfecvenc,
                       t.to_ga,
                       t.to_iva,
                       t.to_ice,
                       t.to_iehd,
                       t.to_icd,
                       --40
                       t.to_ga + t.to_iva + t.to_ice + t.to_iehd + t.to_icd
                           to_total,
                       --41
                       ROUND (t.to_ga / t.tc_ufvfecvenc, 2) toufv_ga,
                       ROUND (t.to_iva / t.tc_ufvfecvenc, 2) toufv_iva,
                       ROUND (t.to_ice / t.tc_ufvfecvenc, 2) toufv_ice,
                       ROUND (t.to_iehd / t.tc_ufvfecvenc, 2) toufv_iehd,
                       ROUND (t.to_icd / t.tc_ufvfecvenc, 2) toufv_icd,
                       ROUND (
                           (  t.to_ga
                            + t.to_iva
                            + t.to_ice
                            + t.to_iehd
                            + t.to_icd)
                           / t.tc_ufvfecvenc,
                           2)
                           toufv_total,
                       t.dias,
                       ROUND (POWER (1 + (t.tc_tprfecvenc / 360), t.dias), 4)
                           formula,
                       ROUND (t.ga_dt / t.tc_ufvfecvenc, 2)
                       - ROUND (t.to_ga / t.tc_ufvfecvenc, 2)
                           itufv_ga,
                       --50
                       ROUND (t.to_iva / t.tc_ufvfecvenc, 2)
                       - ROUND (t.iva_dt / t.tc_ufvfecvenc, 2)
                           itufv_iva,
                       ROUND (t.to_ice / t.tc_ufvfecvenc, 2)
                       - ROUND (t.ice_dt / t.tc_ufvfecvenc, 2)
                           itufv_ice,
                       ROUND (t.to_iehd / t.tc_ufvfecvenc, 2)
                       - ROUND (t.iehd_dt / t.tc_ufvfecvenc, 2)
                           itufv_iehd,
                       ROUND (t.to_icd / t.tc_ufvfecvenc, 2)
                       - ROUND (t.icd_dt / t.tc_ufvfecvenc, 2)
                           itufv_icd,
                       (ROUND (
                            (  t.to_ga
                             + t.to_iva
                             + t.to_ice
                             + t.to_iehd
                             + t.to_icd)
                            / t.tc_ufvfecvenc,
                            2)
                        - ROUND (
                              (  t.ga_dt
                               + t.iva_dt
                               + t.ice_dt
                               + t.iehd_dt
                               + t.icd_dt)
                              / t.tc_ufvfecvenc,
                              2))
                           itufv_total,
                       --55
                       ROUND ( (t.to_ga + t.ga_dt) / t.tc_ufvhoy, 2) dt_ga,
                       ROUND ( (t.to_iva + t.iva_dt) / t.tc_ufvhoy, 2) dt_iva,
                       ROUND ( (t.to_ice + t.ice_dt) / t.tc_ufvhoy, 2) dt_ice,
                       ROUND ( (t.to_iehd + t.iehd_dt) / t.tc_ufvhoy, 2)
                           dt_iehd,
                       ROUND ( (t.to_icd + t.icd_dt) / t.tc_ufvhoy, 2) dt_icd,
                       --60
                       ROUND (
                           (  t.to_ga
                            + t.to_iva
                            + t.to_ice
                            + t.to_iehd
                            + t.to_icd
                            + t.ga_dt
                            + t.iva_dt
                            + t.ice_dt
                            + t.iehd_dt
                            + t.icd_dt)
                           / t.tc_ufvfecvenc,
                           2)
                           dt_total,
                       --61
                       ROUND (
                           ( (  t.to_ga
                              + t.to_iva
                              + t.to_ice
                              + t.to_iehd
                              + t.to_icd)
                            / t.tc_ufvhoy)
                           * t.tc_ufvfecvenc,
                           2)
                           sancion,
                       --62
                       ROUND (
                             t.to_ga
                           + t.to_iva
                           + t.to_ice
                           + t.to_iehd
                           + t.to_icd
                           + t.ga_dt
                           + t.iva_dt
                           + t.ice_dt
                           + t.iehd_dt
                           + t.icd_dt,
                           2)
                           adeudo_totalbs,
                       --63
                       ROUND (
                           (  t.to_ga
                            + t.to_iva
                            + t.to_ice
                            + t.to_iehd
                            + t.to_icd
                            + t.ga_dt
                            + t.iva_dt
                            + t.ice_dt
                            + t.iehd_dt
                            + t.icd_dt)
                           / t.tc_ufvhoy,
                           2)
                           adeudo_totalufv,
                       --64
                       t.tc_ufvhoy
                FROM   (SELECT   iu.itm_nber itm,
                                 ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                     nandina_ant,
                                 iu.saditm_hs_cod || iu.saditm_hsprec_cod
                                     nandina_u,
                                 u.sad_reg_year reg_year,
                                 u.key_cuo key_cuo,
                                 u.sad_reg_nber reg_nber,
                                 TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')
                                     fecha_reg,
                                 TO_CHAR (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'dd/mm/yyyy')
                                     fecha_venc,
                                 TO_CHAR (fecha_reporte, 'dd/mm/yyyy')
                                     fecha_calculo,
                                 va.sad_iitminv_valc dec_fob,
                                 va.sad_iitmefr_valc dec_flete,
                                 va.sad_iitmins_valc dec_seguro,
                                 va.sad_iitmotc_valc dec_otros,
                                 ROUND (
                                     va.sad_iitmcif_valn / va.sad_iitminv_rat,
                                     2)
                                     dec_cifusd,
                                 va.sad_iitminv_rat dec_tc,
                                 va.sad_iitmcif_valn dec_cifbs,
                                 gaa.saditm_tax_amount dec_ga,
                                 ivaa.saditm_tax_amount dec_iva,
                                 NVL (icea.saditm_tax_amount, 0) dec_ice,
                                 NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                 NVL (icda.saditm_tax_amount, 0) dec_icd,
                                 vu.sad_iitminv_valc enc_fob,
                                 vu.sad_iitmefr_valc enc_flete,
                                 vu.sad_iitmins_valc enc_seguro,
                                 vu.sad_iitmotc_valc enc_otros,
                                 ROUND (
                                     vu.sad_iitmcif_valn / vu.sad_iitminv_rat,
                                     2)
                                     enc_cifusd,
                                 vu.sad_iitminv_rat enc_tc,
                                 vu.sad_iitmcif_valn enc_cifbs,
                                 gau.saditm_tax_amount enc_ga,
                                 ivau.saditm_tax_amount enc_iva,
                                 NVL (iceu.saditm_tax_amount, 0) enc_ice,
                                 NVL (iehdu.saditm_tax_amount, 0) enc_iehd,
                                 NVL (icdu.saditm_tax_amount, 0) enc_icd,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'UFV')
                                     tc_ufvfecvenc,
                                 pkg_reporte.tipocambio (TRUNC (fecha_reporte),
                                                         'UFV')
                                     tc_ufvhoy,
                                 gau.saditm_tax_amount - gaa.saditm_tax_amount
                                     to_ga,
                                 ivau.saditm_tax_amount
                                 - ivaa.saditm_tax_amount
                                     to_iva,
                                 NVL (iceu.saditm_tax_amount, 0)
                                 - NVL (icea.saditm_tax_amount, 0)
                                     to_ice,
                                 NVL (iehdu.saditm_tax_amount, 0)
                                 - NVL (iehda.saditm_tax_amount, 0)
                                     to_iehd,
                                 NVL (icdu.saditm_tax_amount, 0)
                                 - NVL (icda.saditm_tax_amount, 0)
                                     to_icd,
                                 TRUNC (fecha_reporte)
                                 - pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy'))
                                     dias,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'TPR')
                                     tc_tprfecvenc,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     ga_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     iva_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     ice_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     iehd_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     icd_dt
                          FROM   ops$asy.sad_gen u,
                                 ops$asy.sad_gen a,
                                 ops$asy.sad_itm iu,
                                 ops$asy.sad_itm ia,
                                 ops$asy.sad_tax gau,
                                 ops$asy.sad_tax gaa,
                                 ops$asy.sad_tax ivau,
                                 ops$asy.sad_tax ivaa,
                                 ops$asy.sad_tax iceu,
                                 ops$asy.sad_tax icea,
                                 ops$asy.sad_tax iehdu,
                                 ops$asy.sad_tax iehda,
                                 ops$asy.sad_tax icdu,
                                 ops$asy.sad_tax icda,
                                 ops$asy.sad_itm_vim vu,
                                 ops$asy.sad_itm_vim va,
                                 fis_alcance f,
                                 fis_notificacion n
                         WHERE       u.key_year = a.key_year
                                 AND u.key_cuo = a.key_cuo
                                 AND u.key_dec IS NOT NULL
                                 AND u.key_dec = a.key_dec
                                 AND u.key_nber = a.key_nber
                                 AND a.sad_num =
                                        NVL (
                                            (SELECT   MIN (x.sad_pst_num)
                                               FROM   ops$asy.sad_gen x
                                              WHERE   x.key_cuo = u.key_cuo
                                                      AND x.sad_reg_year =
                                                             u.sad_reg_year
                                                      AND x.sad_reg_serial =
                                                             u.sad_reg_serial
                                                      AND x.sad_reg_nber =
                                                             u.sad_reg_nber
                                                      AND x.sad_pst_dat >=
                                                             n.not_fecha_notificacion),
                                            0)
                                 AND u.sad_flw = 1
                                 AND u.sad_num = 0
                                 AND u.lst_ope = 'U'
                                 AND u.key_year = iu.key_year
                                 AND u.key_cuo = iu.key_cuo
                                 AND u.key_dec = iu.key_dec
                                 AND u.key_nber = iu.key_nber
                                 AND u.sad_num = iu.sad_num
                                 AND a.key_year = ia.key_year
                                 AND a.key_cuo = ia.key_cuo
                                 AND a.key_dec = ia.key_dec
                                 AND a.key_nber = ia.key_nber
                                 AND a.sad_num = ia.sad_num
                                 AND iu.key_year = ia.key_year
                                 AND iu.key_cuo = ia.key_cuo
                                 AND iu.key_dec = ia.key_dec
                                 AND iu.key_nber = ia.key_nber
                                 AND iu.itm_nber = ia.itm_nber
                                 --tributo GA
                                 AND iu.key_year = gau.key_year
                                 AND iu.key_cuo = gau.key_cuo
                                 AND iu.key_dec = gau.key_dec
                                 AND iu.key_nber = gau.key_nber
                                 AND iu.itm_nber = gau.itm_nber
                                 AND iu.sad_num = gau.sad_num
                                 AND gau.saditm_tax_code = 'GA'
                                 AND ia.key_year = gaa.key_year
                                 AND ia.key_cuo = gaa.key_cuo
                                 AND ia.key_dec = gaa.key_dec
                                 AND ia.key_nber = gaa.key_nber
                                 AND ia.itm_nber = gaa.itm_nber
                                 AND ia.sad_num = gaa.sad_num
                                 AND gaa.saditm_tax_code = 'GA'
                                 --tributo IVA
                                 AND iu.key_year = ivau.key_year
                                 AND iu.key_cuo = ivau.key_cuo
                                 AND iu.key_dec = ivau.key_dec
                                 AND iu.key_nber = ivau.key_nber
                                 AND iu.itm_nber = ivau.itm_nber
                                 AND iu.sad_num = ivau.sad_num
                                 AND ivau.saditm_tax_code = 'IVA'
                                 AND ia.key_year = ivaa.key_year
                                 AND ia.key_cuo = ivaa.key_cuo
                                 AND ia.key_dec = ivaa.key_dec
                                 AND ia.key_nber = ivaa.key_nber
                                 AND ia.itm_nber = ivaa.itm_nber
                                 AND ia.sad_num = ivaa.sad_num
                                 AND ivaa.saditm_tax_code = 'IVA'
                                 --tributo ICE
                                 AND iu.key_year = iceu.key_year(+)
                                 AND iu.key_cuo = iceu.key_cuo(+)
                                 AND iu.key_dec = iceu.key_dec(+)
                                 AND iu.key_nber = iceu.key_nber(+)
                                 AND iu.itm_nber = iceu.itm_nber(+)
                                 AND iu.sad_num = iceu.sad_num(+)
                                 AND iceu.saditm_tax_code(+) = 'ICE'
                                 AND ia.key_year = icea.key_year(+)
                                 AND ia.key_cuo = icea.key_cuo(+)
                                 AND ia.key_dec = icea.key_dec(+)
                                 AND ia.key_nber = icea.key_nber(+)
                                 AND ia.itm_nber = icea.itm_nber(+)
                                 AND ia.sad_num = icea.sad_num(+)
                                 AND icea.saditm_tax_code(+) = 'ICE'
                                 --tributo IEHD
                                 AND iu.key_year = iehdu.key_year(+)
                                 AND iu.key_cuo = iehdu.key_cuo(+)
                                 AND iu.key_dec = iehdu.key_dec(+)
                                 AND iu.key_nber = iehdu.key_nber(+)
                                 AND iu.itm_nber = iehdu.itm_nber(+)
                                 AND iu.sad_num = iehdu.sad_num(+)
                                 AND iehdu.saditm_tax_code(+) = 'IEHD'
                                 AND ia.key_year = iehda.key_year(+)
                                 AND ia.key_cuo = iehda.key_cuo(+)
                                 AND ia.key_dec = iehda.key_dec(+)
                                 AND ia.key_nber = iehda.key_nber(+)
                                 AND ia.itm_nber = iehda.itm_nber(+)
                                 AND ia.sad_num = iehda.sad_num(+)
                                 AND iehda.saditm_tax_code(+) = 'IEHD'
                                 --tributo ICD
                                 AND iu.key_year = icdu.key_year(+)
                                 AND iu.key_cuo = icdu.key_cuo(+)
                                 AND iu.key_dec = icdu.key_dec(+)
                                 AND iu.key_nber = icdu.key_nber(+)
                                 AND iu.itm_nber = icdu.itm_nber(+)
                                 AND iu.sad_num = icdu.sad_num(+)
                                 AND icdu.saditm_tax_code(+) = 'ICD'
                                 AND ia.key_year = icda.key_year(+)
                                 AND ia.key_cuo = icda.key_cuo(+)
                                 AND ia.key_dec = icda.key_dec(+)
                                 AND ia.key_nber = icda.key_nber(+)
                                 AND ia.itm_nber = icda.itm_nber(+)
                                 AND ia.sad_num = icda.sad_num(+)
                                 AND icda.saditm_tax_code(+) = 'ICD'
                                 --para los valores FOB FLETE SEGURO OTROS CIF
                                 AND iu.key_year = vu.key_year
                                 AND iu.key_cuo = vu.key_cuo
                                 AND iu.key_dec = vu.key_dec
                                 AND iu.key_nber = vu.key_nber
                                 AND iu.itm_nber = vu.itm_nber
                                 AND iu.sad_num = vu.sad_num
                                 AND ia.key_year = va.key_year
                                 AND ia.key_cuo = va.key_cuo
                                 AND ia.key_dec = va.key_dec
                                 AND ia.key_nber = va.key_nber
                                 AND ia.itm_nber = va.itm_nber
                                 AND ia.sad_num = va.sad_num
                                 --para recuperar informacion del control
                                 AND f.alc_tipo_tramite = 'DUI'
                                 AND f.alc_gestion = u.sad_reg_year
                                 AND f.alc_aduana = u.key_cuo
                                 AND u.sad_reg_serial = 'C'
                                 AND f.alc_numero = u.sad_reg_nber
                                 AND f.ctl_control_id = prm_codigo
                                 AND f.alc_num = 0
                                 AND f.alc_lstope = 'U'
                                 AND f.ctl_control_id = n.ctl_control_id
                                 AND n.not_num = 0
                                 AND n.not_lstope = 'U'
                        UNION
                        SELECT   iu.itm_nber itm,
                                 ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                     nandina_ant,
                                 iu.saditm_hs_cod || iu.saditm_hsprec_cod
                                     nandina_u,
                                 u.sad_reg_year reg_year,
                                 u.key_cuo key_cuo,
                                 u.sad_reg_nber reg_nber,
                                 TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')
                                     fecha_reg,
                                 TO_CHAR (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'dd/mm/yyyy')
                                     fecha_venc,
                                 TO_CHAR (fecha_reporte, 'dd/mm/yyyy')
                                     fecha_calculo,
                                 va.sad_iitminv_valc dec_fob,
                                 va.sad_iitmefr_valc dec_flete,
                                 va.sad_iitmins_valc dec_seguro,
                                 va.sad_iitmotc_valc dec_otros,
                                 ROUND (
                                     va.sad_iitmcif_valn / va.sad_iitminv_rat,
                                     2)
                                     dec_cifusd,
                                 va.sad_iitminv_rat dec_tc,
                                 va.sad_iitmcif_valn dec_cifbs,
                                 gaa.saditm_tax_amount dec_ga,
                                 ivaa.saditm_tax_amount dec_iva,
                                 NVL (icea.saditm_tax_amount, 0) dec_ice,
                                 NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                 NVL (icda.saditm_tax_amount, 0) dec_icd,
                                 vu.sad_iitminv_valc enc_fob,
                                 vu.sad_iitmefr_valc enc_flete,
                                 vu.sad_iitmins_valc enc_seguro,
                                 vu.sad_iitmotc_valc enc_otros,
                                 ROUND (
                                     vu.sad_iitmcif_valn / vu.sad_iitminv_rat,
                                     2)
                                     enc_cifusd,
                                 vu.sad_iitminv_rat enc_tc,
                                 vu.sad_iitmcif_valn enc_cifbs,
                                 gau.saditm_tax_amount enc_ga,
                                 ivau.saditm_tax_amount enc_iva,
                                 NVL (iceu.saditm_tax_amount, 0) enc_ice,
                                 NVL (iehdu.saditm_tax_amount, 0) enc_iehd,
                                 NVL (icdu.saditm_tax_amount, 0) enc_icd,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'UFV')
                                     tc_ufvfecvenc,
                                 pkg_reporte.tipocambio (TRUNC (fecha_reporte),
                                                         'UFV')
                                     tc_ufvhoy,
                                 gau.saditm_tax_amount - gaa.saditm_tax_amount
                                     to_ga,
                                 ivau.saditm_tax_amount
                                 - ivaa.saditm_tax_amount
                                     to_iva,
                                 NVL (iceu.saditm_tax_amount, 0)
                                 - NVL (icea.saditm_tax_amount, 0)
                                     to_ice,
                                 NVL (iehdu.saditm_tax_amount, 0)
                                 - NVL (iehda.saditm_tax_amount, 0)
                                     to_iehd,
                                 NVL (icdu.saditm_tax_amount, 0)
                                 - NVL (icda.saditm_tax_amount, 0)
                                     to_icd,
                                 TRUNC (fecha_reporte)
                                 - pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy'))
                                     dias,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'TPR')
                                     tc_tprfecvenc,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     ga_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     iva_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     ice_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     iehd_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     icd_dt
                          FROM   ops$asy.sad_gen u,
                                 ops$asy.sad_gen a,
                                 ops$asy.sad_itm iu,
                                 ops$asy.sad_itm ia,
                                 ops$asy.sad_tax gau,
                                 ops$asy.sad_tax gaa,
                                 ops$asy.sad_tax ivau,
                                 ops$asy.sad_tax ivaa,
                                 ops$asy.sad_tax iceu,
                                 ops$asy.sad_tax icea,
                                 ops$asy.sad_tax iehdu,
                                 ops$asy.sad_tax iehda,
                                 ops$asy.sad_tax icdu,
                                 ops$asy.sad_tax icda,
                                 ops$asy.sad_itm_vim vu,
                                 ops$asy.sad_itm_vim va,
                                 fis_alcance f,
                                 fis_notificacion n
                         WHERE       u.key_year = a.key_year
                                 AND u.key_cuo = a.key_cuo
                                 AND u.key_dec IS NULL
                                 AND a.key_dec IS NULL
                                 AND u.key_nber = a.key_nber
                                 AND a.sad_num =
                                        NVL (
                                            (SELECT   MIN (x.sad_pst_num)
                                               FROM   ops$asy.sad_gen x
                                              WHERE   x.key_cuo = u.key_cuo
                                                      AND x.sad_reg_year =
                                                             u.sad_reg_year
                                                      AND x.sad_reg_serial =
                                                             u.sad_reg_serial
                                                      AND x.sad_reg_nber =
                                                             u.sad_reg_nber
                                                      AND x.sad_pst_dat >=
                                                             n.not_fecha_notificacion),
                                            0)
                                 AND u.sad_flw = 1
                                 AND u.sad_num = 0
                                 AND u.lst_ope = 'U'
                                 AND u.key_year = iu.key_year
                                 AND u.key_cuo = iu.key_cuo
                                 AND iu.key_dec IS NULL
                                 AND u.key_nber = iu.key_nber
                                 AND u.sad_num = iu.sad_num
                                 AND a.key_year = ia.key_year
                                 AND a.key_cuo = ia.key_cuo
                                 AND ia.key_dec IS NULL
                                 AND a.key_nber = ia.key_nber
                                 AND a.sad_num = ia.sad_num
                                 AND iu.key_year = ia.key_year
                                 AND iu.key_cuo = ia.key_cuo
                                 AND iu.key_nber = ia.key_nber
                                 AND iu.itm_nber = ia.itm_nber
                                 --tributo GA
                                 AND iu.key_year = gau.key_year
                                 AND iu.key_cuo = gau.key_cuo
                                 AND gau.key_dec IS NULL
                                 AND iu.key_nber = gau.key_nber
                                 AND iu.itm_nber = gau.itm_nber
                                 AND iu.sad_num = gau.sad_num
                                 AND gau.saditm_tax_code = 'GA'
                                 AND ia.key_year = gaa.key_year
                                 AND ia.key_cuo = gaa.key_cuo
                                 AND gaa.key_dec IS NULL
                                 AND ia.key_nber = gaa.key_nber
                                 AND ia.itm_nber = gaa.itm_nber
                                 AND ia.sad_num = gaa.sad_num
                                 AND gaa.saditm_tax_code = 'GA'
                                 --tributo IVA
                                 AND iu.key_year = ivau.key_year
                                 AND iu.key_cuo = ivau.key_cuo
                                 AND ivau.key_dec IS NULL
                                 AND iu.key_nber = ivau.key_nber
                                 AND iu.itm_nber = ivau.itm_nber
                                 AND iu.sad_num = ivau.sad_num
                                 AND ivau.saditm_tax_code = 'IVA'
                                 AND ia.key_year = ivaa.key_year
                                 AND ia.key_cuo = ivaa.key_cuo
                                 AND ivaa.key_dec IS NULL
                                 AND ia.key_nber = ivaa.key_nber
                                 AND ia.itm_nber = ivaa.itm_nber
                                 AND ia.sad_num = ivaa.sad_num
                                 AND ivaa.saditm_tax_code = 'IVA'
                                 --tributo ICE
                                 AND iu.key_year = iceu.key_year(+)
                                 AND iu.key_cuo = iceu.key_cuo(+)
                                 AND iceu.key_dec(+) IS NULL
                                 AND iu.key_nber = iceu.key_nber(+)
                                 AND iu.itm_nber = iceu.itm_nber(+)
                                 AND iu.sad_num = iceu.sad_num(+)
                                 AND iceu.saditm_tax_code(+) = 'ICE'
                                 AND ia.key_year = icea.key_year(+)
                                 AND ia.key_cuo = icea.key_cuo(+)
                                 AND icea.key_dec(+) IS NULL
                                 AND ia.key_nber = icea.key_nber(+)
                                 AND ia.itm_nber = icea.itm_nber(+)
                                 AND ia.sad_num = icea.sad_num(+)
                                 AND icea.saditm_tax_code(+) = 'ICE'
                                 --tributo IEHD
                                 AND iu.key_year = iehdu.key_year(+)
                                 AND iu.key_cuo = iehdu.key_cuo(+)
                                 AND iehdu.key_dec(+) IS NULL
                                 AND iu.key_nber = iehdu.key_nber(+)
                                 AND iu.itm_nber = iehdu.itm_nber(+)
                                 AND iu.sad_num = iehdu.sad_num(+)
                                 AND iehdu.saditm_tax_code(+) = 'IEHD'
                                 AND ia.key_year = iehda.key_year(+)
                                 AND ia.key_cuo = iehda.key_cuo(+)
                                 AND iehda.key_dec(+) IS NULL
                                 AND ia.key_nber = iehda.key_nber(+)
                                 AND ia.itm_nber = iehda.itm_nber(+)
                                 AND ia.sad_num = iehda.sad_num(+)
                                 AND iehda.saditm_tax_code(+) = 'IEHD'
                                 --tributo ICD
                                 AND iu.key_year = icdu.key_year(+)
                                 AND iu.key_cuo = icdu.key_cuo(+)
                                 AND icdu.key_dec(+) IS NULL
                                 AND iu.key_nber = icdu.key_nber(+)
                                 AND iu.itm_nber = icdu.itm_nber(+)
                                 AND iu.sad_num = icdu.sad_num(+)
                                 AND icdu.saditm_tax_code(+) = 'ICD'
                                 AND ia.key_year = icda.key_year(+)
                                 AND ia.key_cuo = icda.key_cuo(+)
                                 AND icda.key_dec(+) IS NULL
                                 AND ia.key_nber = icda.key_nber(+)
                                 AND ia.itm_nber = icda.itm_nber(+)
                                 AND ia.sad_num = icda.sad_num(+)
                                 AND icda.saditm_tax_code(+) = 'ICD'
                                 --para los valores FOB FLETE SEGURO OTROS CIF
                                 AND iu.key_year = vu.key_year
                                 AND iu.key_cuo = vu.key_cuo
                                 AND vu.key_dec IS NULL
                                 AND iu.key_nber = vu.key_nber
                                 AND iu.itm_nber = vu.itm_nber
                                 AND iu.sad_num = vu.sad_num
                                 AND ia.key_year = va.key_year
                                 AND ia.key_cuo = va.key_cuo
                                 AND va.key_dec IS NULL
                                 AND ia.key_nber = va.key_nber
                                 AND ia.itm_nber = va.itm_nber
                                 AND ia.sad_num = va.sad_num
                                 --para recuperar informacion del control
                                 AND f.alc_tipo_tramite = 'DUI'
                                 AND f.alc_gestion = u.sad_reg_year
                                 AND f.alc_aduana = u.key_cuo
                                 AND u.sad_reg_serial = 'C'
                                 AND f.alc_numero = u.sad_reg_nber
                                 AND f.ctl_control_id = prm_codigo
                                 AND f.alc_num = 0
                                 AND f.alc_lstope = 'U'
                                 AND f.ctl_control_id = n.ctl_control_id
                                 AND n.not_num = 0
                                 AND n.not_lstope = 'U') t
            ORDER BY   4,
                       5,
                       6,
                       1;

        RETURN ct;
    END;

    FUNCTION dev_tributoomitidofechatotal (prm_codigo   IN VARCHAR2,
                                           prm_fecha    IN VARCHAR2)
        RETURN cursortype
    IS
        ct                cursortype;
        fecha_reporte     DATE;
        vcontravdui       NUMBER (18, 2);
        vcontravorden     NUMBER (18, 2);

        vsancioncontrab   NUMBER (18, 2);
        vsanciondefraud   NUMBER (18, 2);
        vsanciondelito    NUMBER (18, 2);
    BEGIN
        --Determinar las sancones por ilicitos

        SELECT   SUM (cif)
          INTO   vsancioncontrab
          FROM   (SELECT   i.saditm_stat_val
                           * pkg_reporte.tipocambio (
                                 TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                 'UFV')
                           / pkg_reporte.tipocambio (
                                 pkg_reporte.fecha_vencimiento (
                                     g.key_cuo,
                                     TO_CHAR (g.sad_reg_date, 'dd/mm/yyyy')),
                                 'UFV')
                               cif
                    FROM   fis_alcance a,
                           fis_resultados b,
                           ops$asy.sad_gen g,
                           ops$asy.sad_itm i
                   WHERE       a.ctl_control_id = prm_codigo
                           AND a.alc_num = 0
                           AND a.alc_lstope = 'U'
                           AND a.alc_alcance_id = b.alc_alcance_id
                           AND b.res_num = 0
                           AND b.res_lstope = 'U'
                           AND b.res_ilicito = 'CC'
                           AND g.sad_num = 0
                           AND g.lst_ope = 'U'
                           AND i.sad_num = 0
                           AND g.key_year = i.key_year
                           AND g.key_cuo = i.key_cuo
                           AND g.key_dec = i.key_dec
                           AND g.key_nber = i.key_nber
                           AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                           AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                           AND g.sad_reg_serial = 'C'
                           AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                           AND i.itm_nber = b.res_numero_item
                  UNION
                  SELECT   ret_cif_bob
                           * pkg_reporte.tipocambio (
                                 TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                 'UFV')
                           / pkg_reporte.tipocambio (alc_fecha, 'UFV')
                               cif
                    FROM   fis_alcance a, fis_resultados_tramite b
                   WHERE       a.ctl_control_id = prm_codigo
                           AND a.alc_num = 0
                           AND a.alc_lstope = 'U'
                           AND a.alc_alcance_id = b.alc_alcance_id
                           AND b.ret_num = 0
                           AND b.ret_lstope = 'U'
                           AND ret_ilicito = 'C') tbl;

        SELECT   SUM (cif)
          INTO   vsanciondefraud
          FROM   (SELECT   i.saditm_stat_val
                           * pkg_reporte.tipocambio (
                                 TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                 'UFV')
                           / pkg_reporte.tipocambio (
                                 pkg_reporte.fecha_vencimiento (
                                     g.key_cuo,
                                     TO_CHAR (g.sad_reg_date, 'dd/mm/yyyy')),
                                 'UFV')
                               cif
                    FROM   fis_alcance a,
                           fis_resultados b,
                           ops$asy.sad_gen g,
                           ops$asy.sad_itm i
                   WHERE       a.ctl_control_id = prm_codigo
                           AND a.alc_num = 0
                           AND a.alc_lstope = 'U'
                           AND a.alc_alcance_id = b.alc_alcance_id
                           AND b.res_num = 0
                           AND b.res_lstope = 'U'
                           AND b.res_ilicito = 'CD'
                           AND g.sad_num = 0
                           AND g.lst_ope = 'U'
                           AND i.sad_num = 0
                           AND g.key_year = i.key_year
                           AND g.key_cuo = i.key_cuo
                           AND g.key_dec = i.key_dec
                           AND g.key_nber = i.key_nber
                           AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                           AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                           AND g.sad_reg_serial = 'C'
                           AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                           AND i.itm_nber = b.res_numero_item
                  UNION
                  SELECT   ret_cif_bob
                           * pkg_reporte.tipocambio (
                                 TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                 'UFV')
                           / pkg_reporte.tipocambio (alc_fecha, 'UFV')
                               cif
                    FROM   fis_alcance a, fis_resultados_tramite b
                   WHERE       a.ctl_control_id = prm_codigo
                           AND a.alc_num = 0
                           AND a.alc_lstope = 'U'
                           AND a.alc_alcance_id = b.alc_alcance_id
                           AND b.ret_num = 0
                           AND b.ret_lstope = 'U'
                           AND ret_ilicito = 'CD') tbl;

        SELECT   SUM (cif)
          INTO   vsanciondelito
          FROM   (SELECT   i.saditm_stat_val
                           * pkg_reporte.tipocambio (
                                 TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                 'UFV')
                           / pkg_reporte.tipocambio (
                                 pkg_reporte.fecha_vencimiento (
                                     g.key_cuo,
                                     TO_CHAR (g.sad_reg_date, 'dd/mm/yyyy')),
                                 'UFV')
                               cif
                    FROM   fis_alcance a,
                           fis_resultados b,
                           ops$asy.sad_gen g,
                           ops$asy.sad_itm i
                   WHERE       a.ctl_control_id = prm_codigo
                           AND a.alc_num = 0
                           AND a.alc_lstope = 'U'
                           AND a.alc_alcance_id = b.alc_alcance_id
                           AND b.res_num = 0
                           AND b.res_lstope = 'U'
                           AND b.res_ilicito = 'OD'
                           AND g.sad_num = 0
                           AND g.lst_ope = 'U'
                           AND i.sad_num = 0
                           AND g.key_year = i.key_year
                           AND g.key_cuo = i.key_cuo
                           AND g.key_dec = i.key_dec
                           AND g.key_nber = i.key_nber
                           AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                           AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                           AND g.sad_reg_serial = 'C'
                           AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                           AND i.itm_nber = b.res_numero_item
                  UNION
                  SELECT   ret_cif_bob
                           * pkg_reporte.tipocambio (
                                 TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                 'UFV')
                           / pkg_reporte.tipocambio (alc_fecha, 'UFV')
                               cif
                    FROM   fis_alcance a, fis_resultados_tramite b
                   WHERE       a.ctl_control_id = prm_codigo
                           AND a.alc_num = 0
                           AND a.alc_lstope = 'U'
                           AND a.alc_alcance_id = b.alc_alcance_id
                           AND b.ret_num = 0
                           AND b.ret_lstope = 'U'
                           AND ret_ilicito = 'OD') tbl;


        --Determinar las contravenciones
        SELECT   ROUND (SUM (contravdui), 2), ROUND (SUM (contravorden), 2)
          INTO   vcontravdui, vcontravorden
          FROM   (SELECT   SUM (b.res_contrav)
                           * pkg_reporte.tipocambio (
                                 TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                 'UFV')
                               contravdui,
                           SUM (b.res_contravorden)
                           * pkg_reporte.tipocambio (
                                 TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                 'UFV')
                               contravorden
                    FROM   fis_alcance a, fis_resultados b
                   WHERE       a.ctl_control_id = prm_codigo
                           AND a.alc_num = 0
                           AND a.alc_lstope = 'U'
                           AND a.alc_alcance_id = b.alc_alcance_id
                           AND b.res_num = 0
                           AND b.res_lstope = 'U'
                  UNION
                  SELECT   0 contravdui,
                           SUM (NVL (b.ret_contravorden, 0))
                           * pkg_reporte.tipocambio (
                                 TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                 'UFV')
                               contravorden
                    FROM   fis_alcance a, fis_resultados_tramite b
                   WHERE       a.ctl_control_id = prm_codigo
                           AND a.alc_num = 0
                           AND a.alc_lstope = 'U'
                           AND a.alc_alcance_id = b.alc_alcance_id
                           AND b.ret_num = 0
                           AND b.ret_lstope = 'U') tbl;

        OPEN ct FOR
            SELECT   0 sancionomision,
                     NVL (vcontravdui, 0) contravdui,
                     NVL (vcontravorden, 0) contravorden,
                     NVL (vsancioncontrab, 0) sancioncontrabando,
                     NVL (vsanciondefraud, 0) sanciondefraudacion,
                     NVL (vsanciondelito, 0) delito,
                     TO_CHAR (SYSDATE, 'dd/mm/yyyy')
              FROM   DUAL;



        RETURN ct;
    END;

    FUNCTION dev_totales_multas_dui (prm_codigo     IN VARCHAR2,
                                     prm_fecha      IN VARCHAR2,
                                     prm_key_year   IN VARCHAR2,
                                     prm_key_cuo    IN VARCHAR2,
                                     prm_key_dec    IN VARCHAR2,
                                     prm_key_nber   IN VARCHAR2)
        RETURN VARCHAR2
    IS
        res               VARCHAR2 (200);
        fecha_reporte     DATE;
        vcontravdui       NUMBER (18, 2);
        vcontravorden     NUMBER (18, 2);

        vsancioncontrab   NUMBER (18, 2);
        vsanciondefraud   NUMBER (18, 2);
        vsanciondelito    NUMBER (18, 2);
    BEGIN
        --Determinar las sancones por ilicitos
        IF prm_fecha IS NULL
        THEN
            SELECT   '0&0&0&0&0&0&0&' INTO res FROM DUAL;
        ELSE
            SELECT   SUM (cif)
              INTO   vsancioncontrab
              FROM   (SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'CC'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND g.key_dec = i.key_dec
                               AND g.key_nber = i.key_nber
                               AND g.key_year = prm_key_year
                               AND g.key_cuo = prm_key_cuo
                               AND g.key_dec = prm_key_dec
                               AND g.key_nber = prm_key_nber
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item
                      UNION
                      SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'CC'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND i.key_dec IS NULL
                               AND g.key_nber = i.key_nber
                               AND g.key_year = prm_key_year
                               AND g.key_cuo = prm_key_cuo
                               AND g.key_dec IS NULL
                               AND g.key_nber = prm_key_nber
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item) tbl;

            SELECT   SUM (cif)
              INTO   vsanciondefraud
              FROM   (SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'CD'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND g.key_dec = i.key_dec
                               AND g.key_nber = i.key_nber
                               AND g.key_year = prm_key_year
                               AND g.key_cuo = prm_key_cuo
                               AND g.key_dec = prm_key_dec
                               AND g.key_nber = prm_key_nber
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item
                      UNION
                      SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'CD'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND i.key_dec IS NULL
                               AND g.key_nber = i.key_nber
                               AND g.key_year = prm_key_year
                               AND g.key_cuo = prm_key_cuo
                               AND g.key_dec IS NULL
                               AND g.key_nber = prm_key_nber
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item) tbl;

            SELECT   SUM (cif)
              INTO   vsanciondelito
              FROM   (SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'OD'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND g.key_dec = i.key_dec
                               AND g.key_nber = i.key_nber
                               AND g.key_year = prm_key_year
                               AND g.key_cuo = prm_key_cuo
                               AND g.key_dec = prm_key_dec
                               AND g.key_nber = prm_key_nber
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item
                      UNION
                      SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'OD'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND i.key_dec IS NULL
                               AND g.key_nber = i.key_nber
                               AND g.key_year = prm_key_year
                               AND g.key_cuo = prm_key_cuo
                               AND g.key_dec IS NULL
                               AND g.key_nber = prm_key_nber
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item) tbl;


            --Determinar las contravenciones
            SELECT   ROUND (SUM (contravdui), 2),
                     ROUND (SUM (contravorden), 2)
              INTO   vcontravdui, vcontravorden
              FROM   (SELECT   SUM (b.res_contrav)
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                                   contravdui,
                               SUM (b.res_contravorden)
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                                   contravorden
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND g.key_dec = i.key_dec
                               AND g.key_nber = i.key_nber
                               AND g.key_year = prm_key_year
                               AND g.key_cuo = prm_key_cuo
                               AND g.key_dec = prm_key_dec
                               AND g.key_nber = prm_key_nber
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item
                      UNION
                      SELECT   SUM (b.res_contrav)
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                                   contravdui,
                               SUM (b.res_contravorden)
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                                   contravorden
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND i.key_dec IS NULL
                               AND g.key_nber = i.key_nber
                               AND g.key_year = prm_key_year
                               AND g.key_cuo = prm_key_cuo
                               AND g.key_dec IS NULL
                               AND g.key_nber = prm_key_nber
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item) tbl;

            SELECT      0
                     || '&'
                     || NVL (vcontravdui, 0)
                     || '&'
                     || NVL (vcontravorden, 0)
                     || '&'
                     || NVL (vsancioncontrab, 0)
                     || '&'
                     || NVL (vsanciondefraud, 0)
                     || '&'
                     || NVL (vsanciondelito, 0)
                     || '&'
                     || TO_CHAR(  NVL (vcontravdui, 0)
                                + NVL (vcontravorden, 0)
                                + NVL (vsancioncontrab, 0)
                                + NVL (vsanciondefraud, 0)
                                + NVL (vsanciondelito, 0))
                     || '&'
              INTO   res
              FROM   DUAL;
        END IF;

        RETURN res;
    END;

    FUNCTION dev_totales_multas_item (prm_codigo     IN VARCHAR2,
                                      prm_fecha      IN VARCHAR2,
                                      prm_key_year   IN VARCHAR2,
                                      prm_key_cuo    IN VARCHAR2,
                                      prm_key_dec    IN VARCHAR2,
                                      prm_key_nber   IN VARCHAR2,
                                      prm_item       IN VARCHAR2)
        RETURN VARCHAR2
    IS
        res               VARCHAR2 (200);
        fecha_reporte     DATE;
        vcontravdui       NUMBER (18, 2);
        vcontravorden     NUMBER (18, 2);

        vsancioncontrab   NUMBER (18, 2);
        vsanciondefraud   NUMBER (18, 2);
        vsanciondelito    NUMBER (18, 2);
    BEGIN
        --Determinar las sancones por ilicitos

        IF prm_fecha IS NULL
        THEN
            SELECT   '0&0&0&0&0&0&0&' INTO res FROM DUAL;
        ELSE
            SELECT   SUM (cif)
              INTO   vsancioncontrab
              FROM   (SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'CC'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND g.key_dec = i.key_dec
                               AND g.key_nber = i.key_nber
                               AND i.key_year = prm_key_year
                               AND i.key_cuo = prm_key_cuo
                               AND i.key_dec = prm_key_dec
                               AND i.key_nber = prm_key_nber
                               AND i.itm_nber = prm_item
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item
                      UNION
                      SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'CC'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND i.key_dec IS NULL
                               AND g.key_nber = i.key_nber
                               AND i.key_year = prm_key_year
                               AND i.key_cuo = prm_key_cuo
                               AND i.key_dec IS NULL
                               AND i.key_nber = prm_key_nber
                               AND i.itm_nber = prm_item
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item) tbl;

            SELECT   SUM (cif)
              INTO   vsanciondefraud
              FROM   (SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'CD'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND g.key_dec = i.key_dec
                               AND g.key_nber = i.key_nber
                               AND i.key_year = prm_key_year
                               AND i.key_cuo = prm_key_cuo
                               AND i.key_dec = prm_key_dec
                               AND i.key_nber = prm_key_nber
                               AND i.itm_nber = prm_item
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item
                      UNION
                      SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'CD'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND i.key_dec IS NULL
                               AND g.key_nber = i.key_nber
                               AND i.key_year = prm_key_year
                               AND i.key_cuo = prm_key_cuo
                               AND i.key_dec IS NULL
                               AND i.key_nber = prm_key_nber
                               AND i.itm_nber = prm_item
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item) tbl;

            SELECT   SUM (cif)
              INTO   vsanciondelito
              FROM   (SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'OD'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND g.key_dec = i.key_dec
                               AND g.key_nber = i.key_nber
                               AND i.key_year = prm_key_year
                               AND i.key_cuo = prm_key_cuo
                               AND i.key_dec = prm_key_dec
                               AND i.key_nber = prm_key_nber
                               AND i.itm_nber = prm_item
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item
                      UNION
                      SELECT   i.saditm_stat_val
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                               / pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         g.key_cuo,
                                         TO_CHAR (g.sad_reg_date,
                                                  'dd/mm/yyyy')),
                                     'UFV')
                                   cif
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND b.res_ilicito = 'OD'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND i.key_dec IS NULL
                               AND g.key_nber = i.key_nber
                               AND i.key_year = prm_key_year
                               AND i.key_cuo = prm_key_cuo
                               AND i.key_dec IS NULL
                               AND i.key_nber = prm_key_nber
                               AND i.itm_nber = prm_item
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item) tbl;


            --Determinar las contravenciones
            SELECT   ROUND (SUM (contravdui), 2),
                     ROUND (SUM (contravorden), 2)
              INTO   vcontravdui, vcontravorden
              FROM   (SELECT   SUM (b.res_contrav)
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                                   contravdui,
                               SUM (b.res_contravorden)
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                                   contravorden
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND g.key_dec = i.key_dec
                               AND g.key_nber = i.key_nber
                               AND i.key_year = prm_key_year
                               AND i.key_cuo = prm_key_cuo
                               AND i.key_dec = prm_key_dec
                               AND i.key_nber = prm_key_nber
                               AND i.itm_nber = prm_item
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item
                      UNION
                      SELECT   SUM (b.res_contrav)
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                                   contravdui,
                               SUM (b.res_contravorden)
                               * pkg_reporte.tipocambio (
                                     TO_DATE (prm_fecha, 'dd/mm/yyyy'),
                                     'UFV')
                                   contravorden
                        FROM   fis_alcance a,
                               fis_resultados b,
                               ops$asy.sad_gen g,
                               ops$asy.sad_itm i
                       WHERE       a.ctl_control_id = prm_codigo
                               AND a.alc_num = 0
                               AND a.alc_lstope = 'U'
                               AND a.alc_alcance_id = b.alc_alcance_id
                               AND b.res_num = 0
                               AND b.res_lstope = 'U'
                               AND g.sad_num = 0
                               AND g.lst_ope = 'U'
                               AND i.sad_num = 0
                               AND g.key_year = i.key_year
                               AND g.key_cuo = i.key_cuo
                               AND i.key_dec IS NULL
                               AND g.key_nber = i.key_nber
                               AND i.key_year = prm_key_year
                               AND i.key_cuo = prm_key_cuo
                               AND i.key_dec IS NULL
                               AND i.key_nber = prm_key_nber
                               AND i.itm_nber = prm_item
                               AND g.sad_reg_year = SUBSTR (b.res_dui, 1, 4)
                               AND g.key_cuo = SUBSTR (b.res_dui, 6, 3)
                               AND g.sad_reg_serial = 'C'
                               AND g.sad_reg_nber = SUBSTR (b.res_dui, 12)
                               AND i.itm_nber = b.res_numero_item) tbl;

            SELECT      0
                     || '&'
                     || NVL (vcontravdui, 0)
                     || '&'
                     || NVL (vcontravorden, 0)
                     || '&'
                     || NVL (vsancioncontrab, 0)
                     || '&'
                     || NVL (vsanciondefraud, 0)
                     || '&'
                     || NVL (vsanciondelito, 0)
                     || '&'
                     || TO_CHAR(  NVL (vcontravdui, 0)
                                + NVL (vcontravorden, 0)
                                + NVL (vsancioncontrab, 0)
                                + NVL (vsanciondefraud, 0)
                                + NVL (vsanciondelito, 0))
                     || '&'
              INTO   res
              FROM   DUAL;
        END IF;

        RETURN res;
    END;

    FUNCTION dev_tributoomitidofecha (prm_codigo   IN VARCHAR2,
                                      prm_fecha    IN VARCHAR2)
        RETURN cursortype
    IS
        ct              cursortype;
        fecha_reporte   DATE;
    BEGIN
        IF prm_fecha IS NULL
        THEN
            fecha_reporte := TRUNC (SYSDATE);
        ELSE
            fecha_reporte := TO_DATE (prm_fecha, 'dd/mm/yyyy');
        END IF;

        OPEN ct FOR
              SELECT   t.reg_year,
                       t.key_cuo,
                       t.reg_nber,
                       t.fecha_reg,
                       ROUND (SUM (t.to_ga) + SUM (t.ga_dt), 2) dt_ga,
                       ROUND (SUM (t.to_iva) + SUM (t.iva_dt), 2) dt_iva,
                       ROUND (SUM (t.to_ice) + SUM (t.ice_dt), 2) dt_ice,
                       ROUND (SUM (t.to_iehd) + SUM (t.iehd_dt), 2) dt_iehd,
                       ROUND (SUM (t.to_icd) + SUM (t.icd_dt), 2) dt_icd,
                       ROUND (
                             SUM (t.to_ga)
                           + SUM (t.to_iva)
                           + SUM (t.to_ice)
                           + SUM (t.to_iehd)
                           + SUM (t.to_icd)
                           + SUM (t.ga_dt)
                           + SUM (t.iva_dt)
                           + SUM (t.ice_dt)
                           + SUM (t.iehd_dt)
                           + SUM (t.icd_dt),
                           2)
                           adeudo_totalbs,
                       ROUND (
                             SUM (t.to_ga)
                           + SUM (t.to_iva)
                           + SUM (t.to_ice)
                           + SUM (t.to_iehd)
                           + SUM (t.to_icd),
                           2)
                           totot,
                       t.tc_ufvhoy / t.tc_ufvfecvenc facufvact,
                       ROUND (
                           (  SUM (t.to_ga)
                            + SUM (t.to_iva)
                            + SUM (t.to_ice)
                            + SUM (t.to_iehd)
                            + SUM (t.to_icd))
                           * t.tc_ufvhoy
                           / t.tc_ufvfecvenc,
                           2)
                           toactbs,
                       t.fec_notvc,
                       TO_CHAR (
                           pkg_reporte.aumentardiashabiles (
                               pkg_general.devuelve_gerencia (prm_codigo),
                               t.fec_notvc,
                               10),
                           'dd/mm/yyyy')
                           fec_notvc10,
                       t.fec_notrdvc,
                       TRUNC (fecha_reporte)
                       - TRUNC(pkg_reporte.aumentardiashabiles (
                                   pkg_general.devuelve_gerencia (prm_codigo),
                                   t.fec_notvc,
                                   10))
                           dias_notvc,
                       TRUNC (fecha_reporte)
                       - TRUNC (TO_DATE (t.fec_notrdvc, 'dd/mm/yyyy'))
                           dias_notrdvc
                FROM   (SELECT   iu.itm_nber itm,
                                 ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                     nandina_ant,
                                 iu.saditm_hs_cod || iu.saditm_hsprec_cod
                                     nandina_u,
                                 u.sad_reg_year reg_year,
                                 u.key_cuo key_cuo,
                                 u.sad_reg_nber reg_nber,
                                 TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')
                                     fecha_reg,
                                 TO_CHAR (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'dd/mm/yyyy')
                                     fecha_venc,
                                 TO_CHAR (fecha_reporte, 'dd/mm/yyyy')
                                     fecha_calculo,
                                 va.sad_iitminv_valc dec_fob,
                                 va.sad_iitmefr_valc dec_flete,
                                 va.sad_iitmins_valc dec_seguro,
                                 va.sad_iitmotc_valc dec_otros,
                                 ROUND (
                                     va.sad_iitmcif_valn / va.sad_iitminv_rat,
                                     2)
                                     dec_cifusd,
                                 va.sad_iitminv_rat dec_tc,
                                 va.sad_iitmcif_valn dec_cifbs,
                                 gaa.saditm_tax_amount dec_ga,
                                 ivaa.saditm_tax_amount dec_iva,
                                 NVL (icea.saditm_tax_amount, 0) dec_ice,
                                 NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                 NVL (icda.saditm_tax_amount, 0) dec_icd,
                                 vu.sad_iitminv_valc enc_fob,
                                 vu.sad_iitmefr_valc enc_flete,
                                 vu.sad_iitmins_valc enc_seguro,
                                 vu.sad_iitmotc_valc enc_otros,
                                 ROUND (
                                     vu.sad_iitmcif_valn / vu.sad_iitminv_rat,
                                     2)
                                     enc_cifusd,
                                 vu.sad_iitminv_rat enc_tc,
                                 vu.sad_iitmcif_valn enc_cifbs,
                                 gau.saditm_tax_amount enc_ga,
                                 ivau.saditm_tax_amount enc_iva,
                                 NVL (iceu.saditm_tax_amount, 0) enc_ice,
                                 NVL (iehdu.saditm_tax_amount, 0) enc_iehd,
                                 NVL (icdu.saditm_tax_amount, 0) enc_icd,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'UFV')
                                     tc_ufvfecvenc,
                                 pkg_reporte.tipocambio (TRUNC (fecha_reporte),
                                                         'UFV')
                                     tc_ufvhoy,
                                 gau.saditm_tax_amount - gaa.saditm_tax_amount
                                     to_ga,
                                 ivau.saditm_tax_amount
                                 - ivaa.saditm_tax_amount
                                     to_iva,
                                 NVL (iceu.saditm_tax_amount, 0)
                                 - NVL (icea.saditm_tax_amount, 0)
                                     to_ice,
                                 NVL (iehdu.saditm_tax_amount, 0)
                                 - NVL (iehda.saditm_tax_amount, 0)
                                     to_iehd,
                                 NVL (icdu.saditm_tax_amount, 0)
                                 - NVL (icda.saditm_tax_amount, 0)
                                     to_icd,
                                 TRUNC (fecha_reporte)
                                 - pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy'))
                                     dias,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'TPR')
                                     tc_tprfecvenc,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     ga_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     iva_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     ice_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     iehd_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     icd_dt,
                                 TO_CHAR (vc.cvc_fecha_notificacion,
                                          'dd/mm/yyyy')
                                     fec_notvc,
                                 TO_CHAR (vc.cvc_fecha_rd, 'dd/mm/yyyy')
                                     fec_notrdvc
                          FROM   ops$asy.sad_gen u,
                                 ops$asy.sad_gen a,
                                 ops$asy.sad_itm iu,
                                 ops$asy.sad_itm ia,
                                 ops$asy.sad_tax gau,
                                 ops$asy.sad_tax gaa,
                                 ops$asy.sad_tax ivau,
                                 ops$asy.sad_tax ivaa,
                                 ops$asy.sad_tax iceu,
                                 ops$asy.sad_tax icea,
                                 ops$asy.sad_tax iehdu,
                                 ops$asy.sad_tax iehda,
                                 ops$asy.sad_tax icdu,
                                 ops$asy.sad_tax icda,
                                 ops$asy.sad_itm_vim vu,
                                 ops$asy.sad_itm_vim va,
                                 fis_alcance f,
                                 fis_notificacion n,
                                 fis_con_viscargo vc
                         WHERE       u.key_year = a.key_year
                                 AND u.key_cuo = a.key_cuo
                                 AND u.key_dec IS NOT NULL
                                 AND u.key_dec = a.key_dec
                                 AND u.key_nber = a.key_nber
                                 AND a.sad_num =
                                        NVL (
                                            (SELECT   MIN (x.sad_pst_num)
                                               FROM   ops$asy.sad_gen x
                                              WHERE   x.key_cuo = u.key_cuo
                                                      AND x.sad_reg_year =
                                                             u.sad_reg_year
                                                      AND x.sad_reg_serial =
                                                             u.sad_reg_serial
                                                      AND x.sad_reg_nber =
                                                             u.sad_reg_nber
                                                      AND x.sad_pst_dat >=
                                                             n.not_fecha_notificacion),
                                            0)
                                 AND u.sad_flw = 1
                                 AND u.sad_num = 0
                                 AND u.lst_ope = 'U'
                                 AND u.key_year = iu.key_year
                                 AND u.key_cuo = iu.key_cuo
                                 AND u.key_dec = iu.key_dec
                                 AND u.key_nber = iu.key_nber
                                 AND u.sad_num = iu.sad_num
                                 AND a.key_year = ia.key_year
                                 AND a.key_cuo = ia.key_cuo
                                 AND a.key_dec = ia.key_dec
                                 AND a.key_nber = ia.key_nber
                                 AND a.sad_num = ia.sad_num
                                 AND iu.key_year = ia.key_year
                                 AND iu.key_cuo = ia.key_cuo
                                 AND iu.key_dec = ia.key_dec
                                 AND iu.key_nber = ia.key_nber
                                 AND iu.itm_nber = ia.itm_nber
                                 --tributo GA
                                 AND iu.key_year = gau.key_year
                                 AND iu.key_cuo = gau.key_cuo
                                 AND iu.key_dec = gau.key_dec
                                 AND iu.key_nber = gau.key_nber
                                 AND iu.itm_nber = gau.itm_nber
                                 AND iu.sad_num = gau.sad_num
                                 AND gau.saditm_tax_code = 'GA'
                                 AND ia.key_year = gaa.key_year
                                 AND ia.key_cuo = gaa.key_cuo
                                 AND ia.key_dec = gaa.key_dec
                                 AND ia.key_nber = gaa.key_nber
                                 AND ia.itm_nber = gaa.itm_nber
                                 AND ia.sad_num = gaa.sad_num
                                 AND gaa.saditm_tax_code = 'GA'
                                 --tributo IVA
                                 AND iu.key_year = ivau.key_year
                                 AND iu.key_cuo = ivau.key_cuo
                                 AND iu.key_dec = ivau.key_dec
                                 AND iu.key_nber = ivau.key_nber
                                 AND iu.itm_nber = ivau.itm_nber
                                 AND iu.sad_num = ivau.sad_num
                                 AND ivau.saditm_tax_code = 'IVA'
                                 AND ia.key_year = ivaa.key_year
                                 AND ia.key_cuo = ivaa.key_cuo
                                 AND ia.key_dec = ivaa.key_dec
                                 AND ia.key_nber = ivaa.key_nber
                                 AND ia.itm_nber = ivaa.itm_nber
                                 AND ia.sad_num = ivaa.sad_num
                                 AND ivaa.saditm_tax_code = 'IVA'
                                 --tributo ICE
                                 AND iu.key_year = iceu.key_year(+)
                                 AND iu.key_cuo = iceu.key_cuo(+)
                                 AND iu.key_dec = iceu.key_dec(+)
                                 AND iu.key_nber = iceu.key_nber(+)
                                 AND iu.itm_nber = iceu.itm_nber(+)
                                 AND iu.sad_num = iceu.sad_num(+)
                                 AND iceu.saditm_tax_code(+) = 'ICE'
                                 AND ia.key_year = icea.key_year(+)
                                 AND ia.key_cuo = icea.key_cuo(+)
                                 AND ia.key_dec = icea.key_dec(+)
                                 AND ia.key_nber = icea.key_nber(+)
                                 AND ia.itm_nber = icea.itm_nber(+)
                                 AND ia.sad_num = icea.sad_num(+)
                                 AND icea.saditm_tax_code(+) = 'ICE'
                                 --tributo IEHD
                                 AND iu.key_year = iehdu.key_year(+)
                                 AND iu.key_cuo = iehdu.key_cuo(+)
                                 AND iu.key_dec = iehdu.key_dec(+)
                                 AND iu.key_nber = iehdu.key_nber(+)
                                 AND iu.itm_nber = iehdu.itm_nber(+)
                                 AND iu.sad_num = iehdu.sad_num(+)
                                 AND iehdu.saditm_tax_code(+) = 'IEHD'
                                 AND ia.key_year = iehda.key_year(+)
                                 AND ia.key_cuo = iehda.key_cuo(+)
                                 AND ia.key_dec = iehda.key_dec(+)
                                 AND ia.key_nber = iehda.key_nber(+)
                                 AND ia.itm_nber = iehda.itm_nber(+)
                                 AND ia.sad_num = iehda.sad_num(+)
                                 AND iehda.saditm_tax_code(+) = 'IEHD'
                                 --tributo ICD
                                 AND iu.key_year = icdu.key_year(+)
                                 AND iu.key_cuo = icdu.key_cuo(+)
                                 AND iu.key_dec = icdu.key_dec(+)
                                 AND iu.key_nber = icdu.key_nber(+)
                                 AND iu.itm_nber = icdu.itm_nber(+)
                                 AND iu.sad_num = icdu.sad_num(+)
                                 AND icdu.saditm_tax_code(+) = 'ICD'
                                 AND ia.key_year = icda.key_year(+)
                                 AND ia.key_cuo = icda.key_cuo(+)
                                 AND ia.key_dec = icda.key_dec(+)
                                 AND ia.key_nber = icda.key_nber(+)
                                 AND ia.itm_nber = icda.itm_nber(+)
                                 AND ia.sad_num = icda.sad_num(+)
                                 AND icda.saditm_tax_code(+) = 'ICD'
                                 --para los valores FOB FLETE SEGURO OTROS CIF
                                 AND iu.key_year = vu.key_year
                                 AND iu.key_cuo = vu.key_cuo
                                 AND iu.key_dec = vu.key_dec
                                 AND iu.key_nber = vu.key_nber
                                 AND iu.itm_nber = vu.itm_nber
                                 AND iu.sad_num = vu.sad_num
                                 AND ia.key_year = va.key_year
                                 AND ia.key_cuo = va.key_cuo
                                 AND ia.key_dec = va.key_dec
                                 AND ia.key_nber = va.key_nber
                                 AND ia.itm_nber = va.itm_nber
                                 AND ia.sad_num = va.sad_num
                                 --para recuperar informacion del control
                                 AND f.alc_tipo_tramite = 'DUI'
                                 AND f.alc_gestion = u.sad_reg_year
                                 AND f.alc_aduana = u.key_cuo
                                 AND u.sad_reg_serial = 'C'
                                 AND f.alc_numero = u.sad_reg_nber
                                 AND f.ctl_control_id = prm_codigo
                                 AND f.alc_num = 0
                                 AND f.alc_lstope = 'U'
                                 AND f.ctl_control_id = n.ctl_control_id
                                 AND n.not_num = 0
                                 AND n.not_lstope = 'U'
                                 AND vc.cvc_num = 0
                                 AND vc.cvc_lstope = 'U'
                                 AND vc.ctl_control_id = f.ctl_control_id
                        UNION
                        SELECT   iu.itm_nber itm,
                                 ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                     nandina_ant,
                                 iu.saditm_hs_cod || iu.saditm_hsprec_cod
                                     nandina_u,
                                 u.sad_reg_year reg_year,
                                 u.key_cuo key_cuo,
                                 u.sad_reg_nber reg_nber,
                                 TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')
                                     fecha_reg,
                                 TO_CHAR (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'dd/mm/yyyy')
                                     fecha_venc,
                                 TO_CHAR (fecha_reporte, 'dd/mm/yyyy')
                                     fecha_calculo,
                                 va.sad_iitminv_valc dec_fob,
                                 va.sad_iitmefr_valc dec_flete,
                                 va.sad_iitmins_valc dec_seguro,
                                 va.sad_iitmotc_valc dec_otros,
                                 ROUND (
                                     va.sad_iitmcif_valn / va.sad_iitminv_rat,
                                     2)
                                     dec_cifusd,
                                 va.sad_iitminv_rat dec_tc,
                                 va.sad_iitmcif_valn dec_cifbs,
                                 gaa.saditm_tax_amount dec_ga,
                                 ivaa.saditm_tax_amount dec_iva,
                                 NVL (icea.saditm_tax_amount, 0) dec_ice,
                                 NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                 NVL (icda.saditm_tax_amount, 0) dec_icd,
                                 vu.sad_iitminv_valc enc_fob,
                                 vu.sad_iitmefr_valc enc_flete,
                                 vu.sad_iitmins_valc enc_seguro,
                                 vu.sad_iitmotc_valc enc_otros,
                                 ROUND (
                                     vu.sad_iitmcif_valn / vu.sad_iitminv_rat,
                                     2)
                                     enc_cifusd,
                                 vu.sad_iitminv_rat enc_tc,
                                 vu.sad_iitmcif_valn enc_cifbs,
                                 gau.saditm_tax_amount enc_ga,
                                 ivau.saditm_tax_amount enc_iva,
                                 NVL (iceu.saditm_tax_amount, 0) enc_ice,
                                 NVL (iehdu.saditm_tax_amount, 0) enc_iehd,
                                 NVL (icdu.saditm_tax_amount, 0) enc_icd,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'UFV')
                                     tc_ufvfecvenc,
                                 pkg_reporte.tipocambio (TRUNC (fecha_reporte),
                                                         'UFV')
                                     tc_ufvhoy,
                                 gau.saditm_tax_amount - gaa.saditm_tax_amount
                                     to_ga,
                                 ivau.saditm_tax_amount
                                 - ivaa.saditm_tax_amount
                                     to_iva,
                                 NVL (iceu.saditm_tax_amount, 0)
                                 - NVL (icea.saditm_tax_amount, 0)
                                     to_ice,
                                 NVL (iehdu.saditm_tax_amount, 0)
                                 - NVL (iehda.saditm_tax_amount, 0)
                                     to_iehd,
                                 NVL (icdu.saditm_tax_amount, 0)
                                 - NVL (icda.saditm_tax_amount, 0)
                                     to_icd,
                                 TRUNC (fecha_reporte)
                                 - pkg_reporte.fecha_vencimiento (
                                       u.key_cuo,
                                       TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy'))
                                     dias,
                                 pkg_reporte.tipocambio (
                                     pkg_reporte.fecha_vencimiento (
                                         u.key_cuo,
                                         TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy')),
                                     'TPR')
                                     tc_tprfecvenc,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     ga_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount,
                                     u.sad_top_cod)
                                     iva_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     ice_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     iehd_dt,
                                 ops$asy.fcalculadeudatributaria (
                                     u.sad_reg_date,
                                     TRUNC (fecha_reporte),
                                     u.key_year,
                                     u.key_cuo,
                                     u.key_dec,
                                     u.key_nber,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0),
                                     u.sad_top_cod)
                                     icd_dt,
                                 TO_CHAR (vc.cvc_fecha_notificacion,
                                          'dd/mm/yyyy')
                                     fec_notvc,
                                 TO_CHAR (vc.cvc_fecha_rd, 'dd/mm/yyyy')
                                     fec_notrdvc
                          FROM   ops$asy.sad_gen u,
                                 ops$asy.sad_gen a,
                                 ops$asy.sad_itm iu,
                                 ops$asy.sad_itm ia,
                                 ops$asy.sad_tax gau,
                                 ops$asy.sad_tax gaa,
                                 ops$asy.sad_tax ivau,
                                 ops$asy.sad_tax ivaa,
                                 ops$asy.sad_tax iceu,
                                 ops$asy.sad_tax icea,
                                 ops$asy.sad_tax iehdu,
                                 ops$asy.sad_tax iehda,
                                 ops$asy.sad_tax icdu,
                                 ops$asy.sad_tax icda,
                                 ops$asy.sad_itm_vim vu,
                                 ops$asy.sad_itm_vim va,
                                 fis_alcance f,
                                 fis_notificacion n,
                                 fis_con_viscargo vc
                         WHERE       u.key_year = a.key_year
                                 AND u.key_cuo = a.key_cuo
                                 AND u.key_dec IS NULL
                                 AND a.key_dec IS NULL
                                 AND u.key_nber = a.key_nber
                                 AND a.sad_num =
                                        NVL (
                                            (SELECT   MIN (x.sad_pst_num)
                                               FROM   ops$asy.sad_gen x
                                              WHERE   x.key_cuo = u.key_cuo
                                                      AND x.sad_reg_year =
                                                             u.sad_reg_year
                                                      AND x.sad_reg_serial =
                                                             u.sad_reg_serial
                                                      AND x.sad_reg_nber =
                                                             u.sad_reg_nber
                                                      AND x.sad_pst_dat >=
                                                             n.not_fecha_notificacion),
                                            0)
                                 AND u.sad_flw = 1
                                 AND u.sad_num = 0
                                 AND u.lst_ope = 'U'
                                 AND u.key_year = iu.key_year
                                 AND u.key_cuo = iu.key_cuo
                                 AND iu.key_dec IS NULL
                                 AND u.key_nber = iu.key_nber
                                 AND u.sad_num = iu.sad_num
                                 AND a.key_year = ia.key_year
                                 AND a.key_cuo = ia.key_cuo
                                 AND ia.key_dec IS NULL
                                 AND a.key_nber = ia.key_nber
                                 AND a.sad_num = ia.sad_num
                                 AND iu.key_year = ia.key_year
                                 AND iu.key_cuo = ia.key_cuo
                                 AND iu.key_nber = ia.key_nber
                                 AND iu.itm_nber = ia.itm_nber
                                 --tributo GA
                                 AND iu.key_year = gau.key_year
                                 AND iu.key_cuo = gau.key_cuo
                                 AND gau.key_dec IS NULL
                                 AND iu.key_nber = gau.key_nber
                                 AND iu.itm_nber = gau.itm_nber
                                 AND iu.sad_num = gau.sad_num
                                 AND gau.saditm_tax_code = 'GA'
                                 AND ia.key_year = gaa.key_year
                                 AND ia.key_cuo = gaa.key_cuo
                                 AND gaa.key_dec IS NULL
                                 AND ia.key_nber = gaa.key_nber
                                 AND ia.itm_nber = gaa.itm_nber
                                 AND ia.sad_num = gaa.sad_num
                                 AND gaa.saditm_tax_code = 'GA'
                                 --tributo IVA
                                 AND iu.key_year = ivau.key_year
                                 AND iu.key_cuo = ivau.key_cuo
                                 AND ivau.key_dec IS NULL
                                 AND iu.key_nber = ivau.key_nber
                                 AND iu.itm_nber = ivau.itm_nber
                                 AND iu.sad_num = ivau.sad_num
                                 AND ivau.saditm_tax_code = 'IVA'
                                 AND ia.key_year = ivaa.key_year
                                 AND ia.key_cuo = ivaa.key_cuo
                                 AND ivaa.key_dec IS NULL
                                 AND ia.key_nber = ivaa.key_nber
                                 AND ia.itm_nber = ivaa.itm_nber
                                 AND ia.sad_num = ivaa.sad_num
                                 AND ivaa.saditm_tax_code = 'IVA'
                                 --tributo ICE
                                 AND iu.key_year = iceu.key_year(+)
                                 AND iu.key_cuo = iceu.key_cuo(+)
                                 AND iceu.key_dec(+) IS NULL
                                 AND iu.key_nber = iceu.key_nber(+)
                                 AND iu.itm_nber = iceu.itm_nber(+)
                                 AND iu.sad_num = iceu.sad_num(+)
                                 AND iceu.saditm_tax_code(+) = 'ICE'
                                 AND ia.key_year = icea.key_year(+)
                                 AND ia.key_cuo = icea.key_cuo(+)
                                 AND icea.key_dec(+) IS NULL
                                 AND ia.key_nber = icea.key_nber(+)
                                 AND ia.itm_nber = icea.itm_nber(+)
                                 AND ia.sad_num = icea.sad_num(+)
                                 AND icea.saditm_tax_code(+) = 'ICE'
                                 --tributo IEHD
                                 AND iu.key_year = iehdu.key_year(+)
                                 AND iu.key_cuo = iehdu.key_cuo(+)
                                 AND iehdu.key_dec(+) IS NULL
                                 AND iu.key_nber = iehdu.key_nber(+)
                                 AND iu.itm_nber = iehdu.itm_nber(+)
                                 AND iu.sad_num = iehdu.sad_num(+)
                                 AND iehdu.saditm_tax_code(+) = 'IEHD'
                                 AND ia.key_year = iehda.key_year(+)
                                 AND ia.key_cuo = iehda.key_cuo(+)
                                 AND iehda.key_dec(+) IS NULL
                                 AND ia.key_nber = iehda.key_nber(+)
                                 AND ia.itm_nber = iehda.itm_nber(+)
                                 AND ia.sad_num = iehda.sad_num(+)
                                 AND iehda.saditm_tax_code(+) = 'IEHD'
                                 --tributo ICD
                                 AND iu.key_year = icdu.key_year(+)
                                 AND iu.key_cuo = icdu.key_cuo(+)
                                 AND icdu.key_dec(+) IS NULL
                                 AND iu.key_nber = icdu.key_nber(+)
                                 AND iu.itm_nber = icdu.itm_nber(+)
                                 AND iu.sad_num = icdu.sad_num(+)
                                 AND icdu.saditm_tax_code(+) = 'ICD'
                                 AND ia.key_year = icda.key_year(+)
                                 AND ia.key_cuo = icda.key_cuo(+)
                                 AND icda.key_dec(+) IS NULL
                                 AND ia.key_nber = icda.key_nber(+)
                                 AND ia.itm_nber = icda.itm_nber(+)
                                 AND ia.sad_num = icda.sad_num(+)
                                 AND icda.saditm_tax_code(+) = 'ICD'
                                 --para los valores FOB FLETE SEGURO OTROS CIF
                                 AND iu.key_year = vu.key_year
                                 AND iu.key_cuo = vu.key_cuo
                                 AND vu.key_dec IS NULL
                                 AND iu.key_nber = vu.key_nber
                                 AND iu.itm_nber = vu.itm_nber
                                 AND iu.sad_num = vu.sad_num
                                 AND ia.key_year = va.key_year
                                 AND ia.key_cuo = va.key_cuo
                                 AND va.key_dec IS NULL
                                 AND ia.key_nber = va.key_nber
                                 AND ia.itm_nber = va.itm_nber
                                 AND ia.sad_num = va.sad_num
                                 --para recuperar informacion del control
                                 AND f.alc_tipo_tramite = 'DUI'
                                 AND f.alc_gestion = u.sad_reg_year
                                 AND f.alc_aduana = u.key_cuo
                                 AND u.sad_reg_serial = 'C'
                                 AND f.alc_numero = u.sad_reg_nber
                                 AND f.ctl_control_id = prm_codigo
                                 AND f.alc_num = 0
                                 AND f.alc_lstope = 'U'
                                 AND f.ctl_control_id = n.ctl_control_id
                                 AND n.not_num = 0
                                 AND n.not_lstope = 'U'
                                 AND vc.cvc_num = 0
                                 AND vc.cvc_lstope = 'U'
                                 AND vc.ctl_control_id = f.ctl_control_id) t
            GROUP BY   t.reg_year,
                       t.key_cuo,
                       t.reg_nber,
                       t.fecha_reg,
                       t.fec_notvc,
                       t.fec_notrdvc,
                       t.tc_ufvhoy,
                       t.tc_ufvfecvenc
            ORDER BY   1, 2, 3;

        RETURN ct;
    END;

    FUNCTION tipocambio (fecha IN DATE, tipo IN VARCHAR2)
        RETURN NUMBER
    IS
        v_valor   NUMBER;
    BEGIN
        SELECT   rat_exc
          INTO   v_valor
          FROM   ops$asy.unrattab
         WHERE       lst_ope = 'U'
                 AND cur_cod = tipo
                 AND eea_dov <= fecha
                 AND NVL (eea_eov, fecha + 1) >= fecha;

        RETURN v_valor;
    EXCEPTION
        WHEN NO_DATA_FOUND
        THEN
            RETURN 0;
        WHEN OTHERS
        THEN
            RETURN 0;
    END;

    FUNCTION devuelve_sanciones (prm_codigo IN VARCHAR2)
        RETURN cursortype
    IS
        ct   cursortype;
    BEGIN
        OPEN ct FOR
            SELECT   SUM (res_contrav), SUM (res_contravorden)
              FROM   fis_alcance a, fis_resultados b
             WHERE   a.alc_tipo_tramite = 'DUI'
                     AND res_dui =
                               a.alc_gestion
                            || '/'
                            || a.alc_aduana
                            || '/C-'
                            || a.alc_numero
                     AND a.alc_num = 0
                     AND a.alc_lstope = 'U'
                     AND b.res_num = 0
                     AND b.res_lstope = 'U'
                     AND a.ctl_control_id = prm_codigo;

        RETURN ct;
    END;



    FUNCTION fecha_vencimiento (prm_aduana   IN VARCHAR2,
                                prm_fecha    IN VARCHAR2)
        RETURN DATE
    IS
        v_valor              DATE;
        v_fecharegistro      DATE;
        v_fechavencimiento   DATE;
        v_fechatemp          DATE;
        v_plazo              NUMBER;
        v_i                  NUMBER;
        v_cant               NUMBER;
    BEGIN
        v_plazo := 3;
        v_i := 1;
        v_fechatemp := TO_DATE (prm_fecha, 'dd/mm/yyyy') + 1;

        WHILE v_i <= v_plazo
        LOOP
            SELECT   COUNT ( * )
              INTO   v_cant
              FROM   ops$asy.unholtab
             WHERE       cuo_cod = prm_aduana
                     AND hol_day = v_fechatemp
                     AND lst_ope = 'U';

            IF v_cant = 0
            THEN                                            --Si no es feriado
                v_i := v_i + 1;
            END IF;

            v_fechavencimiento := v_fechatemp;
            v_fechatemp := v_fechatemp + 1;
        END LOOP;

        RETURN v_fechavencimiento;
    END;

    FUNCTION fecha_liquidacion (prm_control    IN VARCHAR2,
                                prm_key_year   IN VARCHAR2,
                                prm_key_cuo    IN VARCHAR2,
                                prm_key_dec    IN VARCHAR2,
                                prm_key_nber   IN VARCHAR2)
        RETURN DATE
    IS
        fechaliq              DATE;
        v_valor               DATE;
        v_fechanotificacion   DATE;
        v_fechapago           DATE;
        v_fechacon            DATE;
        v_plazo               NUMBER;
        v_i                   NUMBER;
        v_cant                NUMBER;
        existe                NUMBER;
    BEGIN
        SELECT   COUNT (1)
          INTO   existe
          FROM   fiscalizacion.fis_notificacion
         WHERE       ctl_control_id = prm_control
                 AND not_num = 0
                 AND not_lstope = 'U';

        IF existe = 0
        THEN
            RETURN NULL;
        ELSE
            SELECT   not_fecha_notificacion
              INTO   v_fechanotificacion
              FROM   fiscalizacion.fis_notificacion
             WHERE       ctl_control_id = prm_control
                     AND not_num = 0
                     AND not_lstope = 'U';

            IF prm_key_dec IS NULL
            THEN
                SELECT   COUNT (1)
                  INTO   existe
                  FROM   ops$asy.bo_sad_payment a
                 WHERE       a.sad_rcpt_date > v_fechanotificacion
                         AND a.key_year = prm_key_year
                         AND a.key_cuo = prm_key_cuo
                         AND a.key_dec IS NULL
                         AND a.key_nber = prm_key_nber;

                IF existe = 0
                THEN
                    SELECT   COUNT (1)
                      INTO   existe
                      FROM   fiscalizacion.fis_conclusion
                     WHERE       ctl_control_id = prm_control
                             AND con_num = 0
                             AND con_lstope = 'U';

                    IF existe = 0
                    THEN
                        RETURN NULL;
                    ELSE
                        SELECT   con_fecha_doc_con
                          INTO   v_fechacon
                          FROM   fiscalizacion.fis_conclusion
                         WHERE       ctl_control_id = prm_control
                                 AND con_num = 0
                                 AND con_lstope = 'U';

                        RETURN v_fechacon;
                    END IF;
                ELSE
                    SELECT   TO_CHAR (MIN (a.sad_rcpt_date), 'dd/mm/yyyy')
                      INTO   v_fechapago
                      FROM   ops$asy.bo_sad_payment a
                     WHERE       a.sad_rcpt_date > v_fechanotificacion
                             AND a.key_year = prm_key_year
                             AND a.key_cuo = prm_key_cuo
                             AND a.key_dec IS NULL
                             AND a.key_nber = prm_key_nber;

                    RETURN v_fechapago;
                END IF;
            ELSE
                SELECT   COUNT (1)
                  INTO   existe
                  FROM   ops$asy.bo_sad_payment a
                 WHERE       a.sad_rcpt_date > v_fechanotificacion
                         AND a.key_year = prm_key_year
                         AND a.key_cuo = prm_key_cuo
                         AND a.key_dec IS NULL
                         AND a.key_nber = prm_key_nber;


                IF existe = 0
                THEN
                    SELECT   COUNT (1)
                      INTO   existe
                      FROM   fiscalizacion.fis_conclusion
                     WHERE       ctl_control_id = prm_control
                             AND con_num = 0
                             AND con_lstope = 'U';

                    IF existe = 0
                    THEN
                        RETURN NULL;
                    ELSE
                        SELECT   con_fecha_doc_con
                          INTO   v_fechacon
                          FROM   fiscalizacion.fis_conclusion
                         WHERE       ctl_control_id = prm_control
                                 AND con_num = 0
                                 AND con_lstope = 'U';

                        RETURN v_fechacon;
                    END IF;
                ELSE
                    SELECT   TO_CHAR (MIN (a.sad_rcpt_date), 'dd/mm/yyyy')
                      INTO   v_fechapago
                      FROM   ops$asy.bo_sad_payment a
                     WHERE       a.sad_rcpt_date > v_fechanotificacion
                             AND a.key_year = prm_key_year
                             AND a.key_cuo = prm_key_cuo
                             AND a.key_dec = prm_key_dec
                             AND a.key_nber = prm_key_nber;

                    RETURN v_fechapago;
                END IF;
            END IF;
        END IF;
    END;


    FUNCTION aumentardiashabiles (prm_gerencia   IN VARCHAR2,
                                  prm_fecha      IN VARCHAR2,
                                  prm_dias       IN NUMBER)
        RETURN DATE
    IS
        v_valor              DATE;
        v_fecharegistro      DATE;
        v_fechavencimiento   DATE;
        v_fechatemp          DATE;
        v_plazo              NUMBER;
        v_i                  NUMBER;
        v_cant               NUMBER;
        v_aduana             VARCHAR2 (4);
    BEGIN
        IF prm_fecha IS NULL
        THEN
            RETURN NULL;
        ELSE
            v_plazo := prm_dias;
            v_i := 1;
            v_fechatemp := TO_DATE (prm_fecha, 'dd/mm/yyyy') + 1;

            SELECT   DECODE (prm_gerencia,
                             'GNF', '201',
                             'GRL', '201',
                             'GRO', '401',
                             'GRC', '301',
                             'GRS', '701',
                             'GRT', '601',
                             'GRP', '501',
                             '201')
              INTO   v_aduana
              FROM   DUAL;


            WHILE v_i <= v_plazo
            LOOP
                SELECT   COUNT ( * )
                  INTO   v_cant
                  FROM   ops$asy.unholtab
                 WHERE       cuo_cod = v_aduana
                         AND hol_day = v_fechatemp
                         AND lst_ope = 'U';

                IF v_cant = 0
                THEN                                        --Si no es feriado
                    v_i := v_i + 1;
                END IF;

                v_fechavencimiento := v_fechatemp;
                v_fechatemp := v_fechatemp + 1;
            END LOOP;

            RETURN v_fechavencimiento;
        END IF;
    END;

    FUNCTION c_diligencia1_x (sid IN VARCHAR2)
        RETURN cursortype
    IS
        cr   cursortype;
    BEGIN
        OPEN cr FOR
            SELECT   b.con_key_year || b.con_key_cuo || b.con_reg_nber AS dma,
                        a.sad_reg_year
                     || '/'
                     || a.key_cuo
                     || '/C-'
                     || a.sad_reg_nber
                         AS dui,
                     b.con_fuente || ' ' || NVL (b.con_fuente_obs, ' ')
                         AS dav,
                     TO_CHAR (a.sad_reg_date, 'dd/mm/yyyy') AS fecha_dui,
                     UPPER (e.cuo_nam) AS aduana,
                        e.cuo_adr
                     || ' '
                     || e.cuo_ad2
                     || ' '
                     || e.cuo_ad3
                     || ' '
                     || e.cuo_ad4
                         AS lugar,
                     DECODE (a.sad_consignee, NULL, h.sad_con_nam, d.cmp_nam)
                         AS importador,
                     NVL (a.sad_consignee, h.sad_con_zip) AS id_importador,
                     DECODE (a.key_dec, NULL, g.sad_dec_nam, c.dec_nam)
                         AS agencia,
                     NVL (a.key_dec, '-') AS id_agencia,
                     f.dil1_tipo,
                     f.dil1_factores,
                     f.dil1_especifique,
                     f.dil1_notifica,
                     f.dil1_nombre,
                     f.dil1_identificacion,
                     f.dil1_poder,
                     f.dil1_lugar,
                     NVL (f.dil1_aceptacion, '-') dil1_aceptacion,
                     TO_CHAR (b.con_diligencia1, 'dd/mm/yyyy')
                         AS fecha_diligencia,
                     f.dil1_usuario AS usuario,
                     NVL (
                         TO_CHAR (b.con_ndiligencia1,
                                  'DD/MM/YYYY HH24:MI:ss'),
                         '-')
                         AS fecha_notificacion,
                     TO_CHAR (f.dil1_fec_reg, 'dd/mm/yyyy HH24:MI:ss')
                         AS fecha_dili1
              FROM   ops$asy.sad_gen a,
                     mira.mir_control b,
                     ops$asy.undectab c,
                     ops$asy.uncmptab d,
                     ops$asy.uncuotab e,
                     mira.mir_diligencia1 f,
                     ops$asy.sad_occ_dec g,
                     ops$asy.sad_occ_cns h
             WHERE   a.sad_reg_year = SUBSTR (sid, 1, 4)
                     AND a.key_cuo = SUBSTR (sid, 5, 3)
                     AND a.sad_reg_nber =
                            SUBSTR (sid, 8, INSTR (sid, '-') - 8)
                     AND a.sad_flw = 1
                     AND a.lst_ope = 'U'
                     AND a.sad_num = 0
                     AND a.sad_reg_year = b.con_key_year
                     AND a.key_cuo = b.con_key_cuo
                     AND a.sad_reg_nber = b.con_reg_nber
                     AND b.con_fuente = SUBSTR (sid, INSTR (sid, '-') + 1)
                     AND a.key_cuo = e.cuo_cod
                     AND e.lst_ope = 'U'
                     AND NVL (a.sad_consignee, '-') = NVL (d.cmp_cod(+), '-')
                     AND d.lst_ope(+) = 'U'
                     AND NVL (a.key_dec, '-') = NVL (c.dec_cod(+), '-')
                     AND c.lst_ope(+) = 'U'
                     AND a.key_year = g.key_year(+)
                     AND a.key_cuo = g.key_cuo(+)
                     AND NVL (a.key_dec, '-') = NVL (g.key_dec(+), '-')
                     AND a.key_nber = g.key_nber(+)
                     AND a.sad_num = g.sad_num(+)
                     AND b.con_key_year = SUBSTR (f.id, 1, 4)
                     AND b.con_key_cuo = SUBSTR (f.id, 5, 3)
                     AND b.con_reg_nber =
                            SUBSTR (f.id, 8, INSTR (f.id, '-') - 8)
                     AND b.con_fuente = SUBSTR (f.id, INSTR (f.id, '-') + 1)
                     AND f.dil1_num = 0
                     AND a.key_year = h.key_year(+)
                     AND a.key_cuo = h.key_cuo(+)
                     AND NVL (a.key_dec, '-') = NVL (h.key_dec(+), '-')
                     AND a.key_nber = h.key_nber(+)
                     AND a.sad_num = h.sad_num(+);

        RETURN cr;
    END;


    FUNCTION resumen_controles (prm_supervisor   IN VARCHAR2,
                                prm_fecini       IN VARCHAR2,
                                prm_fecfin       IN VARCHAR2,
                                prm_gerencia     IN VARCHAR2)
        RETURN cursortype
    IS
        cr   cursortype;
    BEGIN
        OPEN cr FOR
              SELECT   u.usuapepat || ' ' || u.usuapemat || ' ' || u.usunombre,
                       ger.ger_descripcion,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a, fis_acceso c, fis_control t
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'REGISTRADO'
                                 AND est_lstope = 'U'
                                 AND a.ctl_control_id = c.ctl_control_id
                                 AND c.fis_lstope = 'U'
                                 AND c.fis_num = 0
                                 AND c.fis_codigo_fiscalizador =
                                        c1.fis_codigo_fiscalizador
                                 AND (c.fis_cargo = 'SUPERVISOR'
                                      OR c.fis_cargo = 'JEFE')
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_cod_gerencia = f1.ctl_cod_gerencia
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'POSTERIOR')
                           asig_fap,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a, fis_acceso c, fis_control t
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'CONCLUIDO'
                                 AND est_lstope = 'U'
                                 AND a.ctl_control_id = c.ctl_control_id
                                 AND c.fis_lstope = 'U'
                                 AND c.fis_num = 0
                                 AND c.fis_codigo_fiscalizador =
                                        c1.fis_codigo_fiscalizador
                                 AND (c.fis_cargo = 'SUPERVISOR'
                                      OR c.fis_cargo = 'JEFE')
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_cod_gerencia = f1.ctl_cod_gerencia
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'POSTERIOR')
                           con_fap,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a, fis_acceso c, fis_control t
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'REGISTRADO'
                                 AND est_lstope = 'U'
                                 AND a.ctl_control_id = c.ctl_control_id
                                 AND c.fis_lstope = 'U'
                                 AND c.fis_num = 0
                                 AND c.fis_codigo_fiscalizador =
                                        c1.fis_codigo_fiscalizador
                                 AND (c.fis_cargo = 'SUPERVISOR'
                                      OR c.fis_cargo = 'JEFE')
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_cod_gerencia = f1.ctl_cod_gerencia
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'DIFERIDO')
                           asig_dif,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a, fis_acceso c, fis_control t
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'CONCLUIDO'
                                 AND est_lstope = 'U'
                                 AND a.ctl_control_id = c.ctl_control_id
                                 AND c.fis_lstope = 'U'
                                 AND c.fis_num = 0
                                 AND c.fis_codigo_fiscalizador =
                                        c1.fis_codigo_fiscalizador
                                 AND (c.fis_cargo = 'SUPERVISOR'
                                      OR c.fis_cargo = 'JEFE')
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_cod_gerencia = f1.ctl_cod_gerencia
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'DIFERIDO')
                           con_dif
                FROM   fis_estado a1,
                       fis_acceso c1,
                       fis_control f1,
                       usuario.usuario u,
                       fis_gerencia ger
               WHERE   a1.est_fecsys BETWEEN TO_DATE (prm_fecini, 'dd/mm/yyyy')
                                         AND  TO_DATE (prm_fecfin,
                                                       'dd/mm/yyyy')
                       AND a1.est_estado = 'REGISTRADO'
                       AND a1.est_lstope = 'U'
                       AND a1.ctl_control_id = c1.ctl_control_id
                       AND c1.fis_lstope = 'U'
                       AND c1.fis_num = 0
                       AND c1.fis_codigo_fiscalizador LIKE prm_supervisor
                       AND ger.reg_cod LIKE prm_gerencia
                       AND (c1.fis_cargo = 'SUPERVISOR'
                            OR c1.fis_cargo = 'JEFE')
                       AND f1.ctl_control_id = c1.ctl_control_id
                       AND f1.ctl_num = 0
                       AND f1.ctl_lstope = 'U'
                       AND u.usucodusu = c1.fis_codigo_fiscalizador
                       AND ger.ger_codigo = f1.ctl_cod_gerencia
                       AND ger.reg_lstope = 'U'
                       AND u.usu_num = 0
            GROUP BY   u.usuapepat,
                       u.usuapemat,
                       u.usunombre,
                       ger.ger_descripcion,
                       c1.fis_codigo_fiscalizador,
                       f1.ctl_cod_gerencia
            ORDER BY   2, 1;

        RETURN cr;
    END;

    FUNCTION resumen_controles_gen (prm_fecini     IN VARCHAR2,
                                    prm_fecfin     IN VARCHAR2,
                                    prm_gerencia   IN VARCHAR2)
        RETURN cursortype
    IS
        cr   cursortype;
    BEGIN
        OPEN cr FOR
              SELECT   ger.ger_descripcion,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a, fis_control t
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'REGISTRADO'
                                 AND est_lstope = 'U'
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_cod_gerencia = f1.ctl_cod_gerencia
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'POSTERIOR')
                           asig_fap,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a, fis_control t
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'CONCLUIDO'
                                 AND est_lstope = 'U'
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_cod_gerencia = f1.ctl_cod_gerencia
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'POSTERIOR')
                           con_fap,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a, fis_control t
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'REGISTRADO'
                                 AND est_lstope = 'U'
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_cod_gerencia = f1.ctl_cod_gerencia
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'DIFERIDO')
                           asig_dif,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a, fis_control t
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'CONCLUIDO'
                                 AND est_lstope = 'U'
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_cod_gerencia = f1.ctl_cod_gerencia
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'DIFERIDO')
                           con_dif,
                       ger.ger_id
                FROM   fis_estado a1, fis_control f1, fis_gerencia ger
               WHERE   a1.est_fecsys BETWEEN TO_DATE (prm_fecini, 'dd/mm/yyyy')
                                         AND  TO_DATE (prm_fecfin,
                                                       'dd/mm/yyyy')
                       AND a1.est_estado = 'REGISTRADO'
                       AND a1.est_lstope = 'U'
                       AND a1.ctl_control_id = f1.ctl_control_id
                       AND f1.ctl_num = 0
                       AND f1.ctl_lstope = 'U'
                       AND ger.ger_codigo = f1.ctl_cod_gerencia
                       AND ger.reg_cod LIKE prm_gerencia
                       AND ger.reg_lstope = 'U'
            GROUP BY   ger.ger_descripcion, f1.ctl_cod_gerencia, ger.ger_id
            ORDER BY   ger.ger_id;

        RETURN cr;
    END;

    FUNCTION resumen_controles_tot (prm_supervisor   IN VARCHAR2,
                                    prm_fecini       IN VARCHAR2,
                                    prm_fecfin       IN VARCHAR2,
                                    prm_gerencia     IN VARCHAR2)
        RETURN cursortype
    IS
        cr   cursortype;
    BEGIN
        OPEN cr FOR
            SELECT   SUM (asig_fap),
                     SUM (con_fap),
                     SUM (asig_cd),
                     SUM (con_cd)
              FROM   (  SELECT   c1.fis_codigo_fiscalizador,
                                 (SELECT   COUNT (1)
                                    FROM   fis_estado a,
                                           fis_acceso c,
                                           fis_control t
                                   WHERE   est_fecsys BETWEEN TO_DATE (
                                                                  prm_fecini,
                                                                  'dd/mm/yyyy')
                                                          AND  TO_DATE (
                                                                   prm_fecfin,
                                                                   'dd/mm/yyyy')
                                           AND a.est_estado = 'REGISTRADO'
                                           AND est_lstope = 'U'
                                           AND a.ctl_control_id =
                                                  c.ctl_control_id
                                           AND c.fis_lstope = 'U'
                                           AND c.fis_num = 0
                                           AND c.fis_codigo_fiscalizador =
                                                  c1.fis_codigo_fiscalizador
                                           AND c.fis_cargo = 'SUPERVISOR'
                                           AND t.ctl_control_id =
                                                  a.ctl_control_id
                                           AND t.ctl_num = 0
                                           AND t.ctl_lstope = 'U'
                                           AND t.ctl_cod_tipo = 'POSTERIOR')
                                     asig_fap,
                                 (SELECT   COUNT (1)
                                    FROM   fis_estado a,
                                           fis_acceso c,
                                           fis_control t,
                                           fis_conclusion f
                                   WHERE   est_fecsys BETWEEN TO_DATE (
                                                                  prm_fecini,
                                                                  'dd/mm/yyyy')
                                                          AND  TO_DATE (
                                                                   prm_fecfin,
                                                                   'dd/mm/yyyy')
                                           AND a.est_estado = 'REGISTRADO'
                                           AND est_lstope = 'U'
                                           AND a.ctl_control_id =
                                                  c.ctl_control_id
                                           AND c.fis_lstope = 'U'
                                           AND c.fis_num = 0
                                           AND c.fis_codigo_fiscalizador =
                                                  c1.fis_codigo_fiscalizador
                                           AND c.fis_cargo = 'SUPERVISOR'
                                           AND t.ctl_control_id =
                                                  a.ctl_control_id
                                           AND t.ctl_num = 0
                                           AND t.ctl_lstope = 'U'
                                           AND t.ctl_cod_tipo = 'POSTERIOR'
                                           AND f.ctl_control_id =
                                                  a.ctl_control_id
                                           AND f.con_num = 0
                                           AND f.con_lstope = 'U')
                                     con_fap,
                                 (SELECT   COUNT (1)
                                    FROM   fis_estado a,
                                           fis_acceso c,
                                           fis_control t
                                   WHERE   est_fecsys BETWEEN TO_DATE (
                                                                  prm_fecini,
                                                                  'dd/mm/yyyy')
                                                          AND  TO_DATE (
                                                                   prm_fecfin,
                                                                   'dd/mm/yyyy')
                                           AND a.est_estado = 'REGISTRADO'
                                           AND est_lstope = 'U'
                                           AND a.ctl_control_id =
                                                  c.ctl_control_id
                                           AND c.fis_lstope = 'U'
                                           AND c.fis_num = 0
                                           AND c.fis_codigo_fiscalizador =
                                                  c1.fis_codigo_fiscalizador
                                           AND c.fis_cargo = 'SUPERVISOR'
                                           AND t.ctl_control_id =
                                                  a.ctl_control_id
                                           AND t.ctl_num = 0
                                           AND t.ctl_lstope = 'U'
                                           AND t.ctl_cod_tipo = 'DIFERIDO')
                                     asig_cd,
                                 (SELECT   COUNT (1)
                                    FROM   fis_estado a,
                                           fis_acceso c,
                                           fis_control t,
                                           fis_conclusion f
                                   WHERE   est_fecsys BETWEEN TO_DATE (
                                                                  prm_fecini,
                                                                  'dd/mm/yyyy')
                                                          AND  TO_DATE (
                                                                   prm_fecfin,
                                                                   'dd/mm/yyyy')
                                           AND a.est_estado = 'REGISTRADO'
                                           AND est_lstope = 'U'
                                           AND a.ctl_control_id =
                                                  c.ctl_control_id
                                           AND c.fis_lstope = 'U'
                                           AND c.fis_num = 0
                                           AND c.fis_codigo_fiscalizador =
                                                  c1.fis_codigo_fiscalizador
                                           AND c.fis_cargo = 'SUPERVISOR'
                                           AND t.ctl_control_id =
                                                  a.ctl_control_id
                                           AND t.ctl_num = 0
                                           AND t.ctl_lstope = 'U'
                                           AND t.ctl_cod_tipo = 'DIFERIDO'
                                           AND f.ctl_control_id =
                                                  a.ctl_control_id
                                           AND f.con_num = 0
                                           AND f.con_lstope = 'U')
                                     con_cd
                          FROM   fis_estado a1, fis_acceso c1
                         WHERE   a1.est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                                'dd/mm/yyyy')
                                                   AND  TO_DATE (prm_fecfin,
                                                                 'dd/mm/yyyy')
                                 AND a1.est_estado = 'REGISTRADO'
                                 AND a1.est_lstope = 'U'
                                 AND a1.ctl_control_id = c1.ctl_control_id
                                 AND c1.fis_lstope = 'U'
                                 AND c1.fis_num = 0
                                 AND c1.fis_codigo_fiscalizador LIKE
                                        prm_supervisor
                                 AND c1.fis_cargo = 'SUPERVISOR'
                      GROUP BY   c1.fis_codigo_fiscalizador) tbl;

        RETURN cr;
    END;

    FUNCTION detalle_controles_sup (prm_fiscalizador   IN VARCHAR2,
                                    prm_fecini         IN VARCHAR2,
                                    prm_fecfin         IN VARCHAR2,
                                    prm_tipo_tramite   IN VARCHAR2,
                                    prm_estado         IN VARCHAR2,
                                    prm_gerencia       IN VARCHAR2)
        RETURN cursortype
    IS
        cr   cursortype;
    BEGIN
        OPEN cr FOR
              SELECT   *
                FROM   (SELECT      u.usuapepat
                                 || ' '
                                 || u.usuapemat
                                 || ' '
                                 || u.usunombre
                                     nombre,
                                 DECODE (t.ctl_cod_tipo,
                                         'POSTERIOR', 'FAP',
                                         'CD')
                                     tipo,
                                 (t.ctl_cod_gestion
                                  || DECODE (t.ctl_cod_tipo,
                                             'DIFERIDO', 'CD',
                                             'POSTERIOR', 'FP',
                                             'AMPLIATORIA DIFERIDO', 'CD',
                                             'AMPLIATORIA POSTERIOR', 'FP',
                                             '-')
                                  || t.ctl_cod_gerencia
                                  || DECODE (
                                         t.ctl_amp_correlativo,
                                         NULL,
                                         '00',
                                         DECODE (
                                             LENGTH (t.ctl_amp_correlativo),
                                             1,
                                             '0' || t.ctl_amp_correlativo,
                                             t.ctl_amp_correlativo))
                                  || DECODE (LENGTH (t.ctl_cod_numero),
                                             1, '0000' || t.ctl_cod_numero,
                                             2, '000' || t.ctl_cod_numero,
                                             3, '00' || t.ctl_cod_numero,
                                             4, '0' || t.ctl_cod_numero,
                                             t.ctl_cod_numero))
                                     control,
                                 DECODE (t.ctl_tipo_doc_identidad,
                                         'NIT', TO_CHAR (t.ctl_nit),
                                         TO_CHAR (t.ctl_ci))
                                 || ':'
                                 || DECODE (
                                        t.ctl_tipo_doc_identidad,
                                        'NIT',
                                        UPPER (t.ctl_razon_social),
                                        UPPER(   t.ctl_nombres
                                              || ' '
                                              || t.ctl_appat
                                              || ' '
                                              || t.ctl_apmat))
                                     operador,
                                 TO_CHAR (a.est_fecsys, 'dd/mm/yyyy')
                                     fec_asignacion,
                                 (SELECT   COUNT (1)
                                    FROM   fis_alcance x
                                   WHERE   x.alc_alcance_id = t.ctl_control_id
                                           AND x.alc_num = 0
                                           AND x.alc_lstope = 'U')
                                     cant_duis,
                                 TO_CHAR (n.not_fecha_notificacion,
                                          'dd/mm/yyyy')
                                     fec_notificacion,
                                 pkg_general.devuelve_estadocontrol (
                                     t.ctl_control_id)
                                     est_estado,
                                 t.ctl_cod_tipo
                          FROM   fis_estado a,
                                 fis_acceso c,
                                 fis_control t,
                                 fis_notificacion n,
                                 fis_estado e,
                                 fis_conclusion co,
                                 usuario.usuario u
                         WHERE   a.est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                               'dd/mm/yyyy')
                                                  AND  TO_DATE (prm_fecfin,
                                                                'dd/mm/yyyy')
                                 AND a.est_estado = 'REGISTRADO'
                                 AND a.est_lstope = 'U'
                                 AND a.ctl_control_id = c.ctl_control_id
                                 AND c.fis_lstope = 'U'
                                 AND a.ctl_control_id = co.ctl_control_id(+)
                                 AND co.con_num(+) = 0
                                 AND co.con_lstope(+) = 'U'
                                 AND c.fis_num = 0
                                 AND c.fis_codigo_fiscalizador LIKE
                                        prm_fiscalizador
                                 AND c.fis_cargo = 'FISCALIZADOR'
                                 AND u.usucodusu = c.fis_codigo_fiscalizador
                                 AND u.usu_num = 0
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_lstope = 'U'
                                 AND (t.ctl_cod_tipo = 'POSTERIOR'
                                      OR t.ctl_cod_tipo = 'DIFERIDO')
                                 AND n.ctl_control_id(+) = a.ctl_control_id
                                 AND n.not_num(+) = 0
                                 AND n.not_lstope(+) = 'U'
                                 AND e.ctl_control_id = a.ctl_control_id
                                 AND e.est_num = 0
                                 AND e.est_lstope = 'U'
                                 AND t.ctl_cod_gerencia = prm_gerencia) tbl
               WHERE   tbl.ctl_cod_tipo LIKE prm_tipo_tramite
                       AND tbl.est_estado LIKE prm_estado
            ORDER BY   1, 2, 3;

        RETURN cr;
    END;

    FUNCTION detalle_cantidad_sup (prm_supervisor   IN VARCHAR2,
                                   prm_fecini       IN VARCHAR2,
                                   prm_fecfin       IN VARCHAR2,
                                   prm_gerencia     IN VARCHAR2)
        RETURN cursortype
    IS
        cr   cursortype;
    BEGIN
        OPEN cr FOR
              SELECT   c1.fis_codigo_fiscalizador,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a, fis_acceso c, fis_control t
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'REGISTRADO'
                                 AND est_lstope = 'U'
                                 AND a.ctl_control_id = c.ctl_control_id
                                 AND c.fis_lstope = 'U'
                                 AND c.fis_num = 0
                                 AND c.fis_codigo_fiscalizador =
                                        c1.fis_codigo_fiscalizador
                                 AND c.fis_cargo = 'FISCALIZADOR'
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'POSTERIOR'
                                 AND t.ctl_cod_gerencia = prm_gerencia)
                           asig_fap,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a,
                                 fis_acceso c,
                                 fis_control t,
                                 fis_conclusion f
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'REGISTRADO'
                                 AND est_lstope = 'U'
                                 AND a.ctl_control_id = c.ctl_control_id
                                 AND c.fis_lstope = 'U'
                                 AND c.fis_num = 0
                                 AND c.fis_codigo_fiscalizador =
                                        c1.fis_codigo_fiscalizador
                                 AND c.fis_cargo = 'FISCALIZADOR'
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'POSTERIOR'
                                 AND f.ctl_control_id = a.ctl_control_id
                                 AND f.con_num = 0
                                 AND f.con_lstope = 'U'
                                 AND t.ctl_cod_gerencia = prm_gerencia)
                           con_fap,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a, fis_acceso c, fis_control t
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'REGISTRADO'
                                 AND est_lstope = 'U'
                                 AND a.ctl_control_id = c.ctl_control_id
                                 AND c.fis_lstope = 'U'
                                 AND c.fis_num = 0
                                 AND c.fis_codigo_fiscalizador =
                                        c1.fis_codigo_fiscalizador
                                 AND c.fis_cargo = 'FISCALIZADOR'
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'DIFERIDO'
                                 AND t.ctl_cod_gerencia = prm_gerencia)
                           asig_cd,
                       (SELECT   COUNT (1)
                          FROM   fis_estado a,
                                 fis_acceso c,
                                 fis_control t,
                                 fis_conclusion f
                         WHERE   est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                             'dd/mm/yyyy')
                                                AND  TO_DATE (prm_fecfin,
                                                              'dd/mm/yyyy')
                                 AND a.est_estado = 'REGISTRADO'
                                 AND est_lstope = 'U'
                                 AND a.ctl_control_id = c.ctl_control_id
                                 AND c.fis_lstope = 'U'
                                 AND c.fis_num = 0
                                 AND c.fis_codigo_fiscalizador =
                                        c1.fis_codigo_fiscalizador
                                 AND c.fis_cargo = 'FISCALIZADOR'
                                 AND t.ctl_control_id = a.ctl_control_id
                                 AND t.ctl_num = 0
                                 AND t.ctl_lstope = 'U'
                                 AND t.ctl_cod_tipo = 'DIFERIDO'
                                 AND f.ctl_control_id = a.ctl_control_id
                                 AND f.con_num = 0
                                 AND f.con_lstope = 'U'
                                 AND t.ctl_cod_gerencia = prm_gerencia)
                           con_cd
                FROM   fis_estado a1, fis_acceso c1
               WHERE   a1.est_fecsys BETWEEN TO_DATE (prm_fecini, 'dd/mm/yyyy')
                                         AND  TO_DATE (prm_fecfin,
                                                       'dd/mm/yyyy')
                       AND a1.est_estado = 'REGISTRADO'
                       AND a1.est_lstope = 'U'
                       AND a1.ctl_control_id = c1.ctl_control_id
                       AND c1.fis_lstope = 'U'
                       AND c1.fis_num = 0
                       AND c1.fis_codigo_fiscalizador LIKE prm_supervisor
                       AND c1.fis_cargo = 'FISCALIZADOR'
            GROUP BY   c1.fis_codigo_fiscalizador
            ORDER BY   1;

        RETURN cr;
    END;

    FUNCTION detalle_cantidad_sup_tot (prm_supervisor   IN VARCHAR2,
                                       prm_fecini       IN VARCHAR2,
                                       prm_fecfin       IN VARCHAR2,
                                       prm_gerencia     IN VARCHAR2)
        RETURN cursortype
    IS
        cr   cursortype;
    BEGIN
        OPEN cr FOR
            SELECT   SUM (asig_fap),
                     SUM (con_fap),
                     SUM (asig_cd),
                     SUM (con_cd)
              FROM   (  SELECT   c1.fis_codigo_fiscalizador,
                                 (SELECT   COUNT (1)
                                    FROM   fis_estado a,
                                           fis_acceso c,
                                           fis_control t
                                   WHERE   est_fecsys BETWEEN TO_DATE (
                                                                  prm_fecini,
                                                                  'dd/mm/yyyy')
                                                          AND  TO_DATE (
                                                                   prm_fecfin,
                                                                   'dd/mm/yyyy')
                                           AND a.est_estado = 'REGISTRADO'
                                           AND est_lstope = 'U'
                                           AND a.ctl_control_id =
                                                  c.ctl_control_id
                                           AND c.fis_lstope = 'U'
                                           AND c.fis_num = 0
                                           AND c.fis_codigo_fiscalizador =
                                                  c1.fis_codigo_fiscalizador
                                           AND c.fis_cargo = 'FISCALIZADOR'
                                           AND t.ctl_control_id =
                                                  a.ctl_control_id
                                           AND t.ctl_num = 0
                                           AND t.ctl_lstope = 'U'
                                           AND t.ctl_cod_tipo = 'POSTERIOR')
                                     asig_fap,
                                 (SELECT   COUNT (1)
                                    FROM   fis_estado a,
                                           fis_acceso c,
                                           fis_control t,
                                           fis_conclusion f
                                   WHERE   est_fecsys BETWEEN TO_DATE (
                                                                  prm_fecini,
                                                                  'dd/mm/yyyy')
                                                          AND  TO_DATE (
                                                                   prm_fecfin,
                                                                   'dd/mm/yyyy')
                                           AND a.est_estado = 'REGISTRADO'
                                           AND est_lstope = 'U'
                                           AND a.ctl_control_id =
                                                  c.ctl_control_id
                                           AND c.fis_lstope = 'U'
                                           AND c.fis_num = 0
                                           AND c.fis_codigo_fiscalizador =
                                                  c1.fis_codigo_fiscalizador
                                           AND c.fis_cargo = 'FISCALIZADOR'
                                           AND t.ctl_control_id =
                                                  a.ctl_control_id
                                           AND t.ctl_num = 0
                                           AND t.ctl_lstope = 'U'
                                           AND t.ctl_cod_tipo = 'POSTERIOR'
                                           AND f.ctl_control_id =
                                                  a.ctl_control_id
                                           AND f.con_num = 0
                                           AND f.con_lstope = 'U')
                                     con_fap,
                                 (SELECT   COUNT (1)
                                    FROM   fis_estado a,
                                           fis_acceso c,
                                           fis_control t
                                   WHERE   est_fecsys BETWEEN TO_DATE (
                                                                  prm_fecini,
                                                                  'dd/mm/yyyy')
                                                          AND  TO_DATE (
                                                                   prm_fecfin,
                                                                   'dd/mm/yyyy')
                                           AND a.est_estado = 'REGISTRADO'
                                           AND est_lstope = 'U'
                                           AND a.ctl_control_id =
                                                  c.ctl_control_id
                                           AND c.fis_lstope = 'U'
                                           AND c.fis_num = 0
                                           AND c.fis_codigo_fiscalizador =
                                                  c1.fis_codigo_fiscalizador
                                           AND c.fis_cargo = 'FISCALIZADOR'
                                           AND t.ctl_control_id =
                                                  a.ctl_control_id
                                           AND t.ctl_num = 0
                                           AND t.ctl_lstope = 'U'
                                           AND t.ctl_cod_tipo = 'DIFERIDO')
                                     asig_cd,
                                 (SELECT   COUNT (1)
                                    FROM   fis_estado a,
                                           fis_acceso c,
                                           fis_control t,
                                           fis_conclusion f
                                   WHERE   est_fecsys BETWEEN TO_DATE (
                                                                  prm_fecini,
                                                                  'dd/mm/yyyy')
                                                          AND  TO_DATE (
                                                                   prm_fecfin,
                                                                   'dd/mm/yyyy')
                                           AND a.est_estado = 'REGISTRADO'
                                           AND est_lstope = 'U'
                                           AND a.ctl_control_id =
                                                  c.ctl_control_id
                                           AND c.fis_lstope = 'U'
                                           AND c.fis_num = 0
                                           AND c.fis_codigo_fiscalizador =
                                                  c1.fis_codigo_fiscalizador
                                           AND c.fis_cargo = 'FISCALIZADOR'
                                           AND t.ctl_control_id =
                                                  a.ctl_control_id
                                           AND t.ctl_num = 0
                                           AND t.ctl_lstope = 'U'
                                           AND t.ctl_cod_tipo = 'DIFERIDO'
                                           AND f.ctl_control_id =
                                                  a.ctl_control_id
                                           AND f.con_num = 0
                                           AND f.con_lstope = 'U')
                                     con_cd
                          FROM   fis_estado a1, fis_acceso c1
                         WHERE   a1.est_fecsys BETWEEN TO_DATE (prm_fecini,
                                                                'dd/mm/yyyy')
                                                   AND  TO_DATE (prm_fecfin,
                                                                 'dd/mm/yyyy')
                                 AND a1.est_estado = 'REGISTRADO'
                                 AND a1.est_lstope = 'U'
                                 AND a1.ctl_control_id = c1.ctl_control_id
                                 AND c1.fis_lstope = 'U'
                                 AND c1.fis_num = 0
                                 AND c1.fis_codigo_fiscalizador LIKE
                                        prm_supervisor
                                 AND c1.fis_cargo = 'FISCALIZADOR'
                      GROUP BY   c1.fis_codigo_fiscalizador) tbl;

        RETURN cr;
    END;

    FUNCTION reporte_seguimiento_orden (prm_control    IN VARCHAR2,
                                        prm_gerencia   IN VARCHAR2,
                                        prm_fecini     IN VARCHAR2,
                                        prm_fecfin     IN VARCHAR2,
                                        prm_nit        IN VARCHAR2)
        RETURN cursortype
    IS
        cr           cursortype;
        v_gerencia   VARCHAR2 (5);
    BEGIN
        IF prm_gerencia = '%'
        THEN
            v_gerencia := '%';
        ELSE
            SELECT   a.ger_codigo
              INTO   v_gerencia
              FROM   fis_gerencia a
             WHERE   reg_cod = prm_gerencia AND reg_lstope = 'U';
        END IF;

        IF prm_nit IS NULL
        THEN
            OPEN cr FOR
                  SELECT   gestion,
                           tipo_control,
                           gerencia,
                           numero,
                           codigo_control,
                           fecha_orden,
                           origen_control,
                           identidad_doc,
                           identidad_nombre,
                           fiscalizador,
                           fiscalizador_nuevo,
                           supervisor,
                           supervisor_nuevo,
                           fecha_notificacion,
                           observacion_notificacion,
                           tipo_notificacion,
                           usuario_notificacion,
                           SUBSTR (tbl.info_con,
                                   1,
                                   INSTR (tbl.info_con, '&') - 1)
                               numero_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               fecha_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               gerencia_legal,
                           con_tipo_doc_con,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               numero_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               fecha_doc,
                           con_usuario usuario_resultados,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        6)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - 1)
                               fecha_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        7)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - 1)
                               tipo_notif,
                           con_usuario usuario_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        8)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - 1)
                               fecha_ci_remision,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        9)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               10)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - 1)
                               ci_remision,
                           con_usuario usuario_remision,
                           con_fecha_doc_con,
                           con_usuario usuario_finalizacion,
                           estado_control,
                           SUBSTR (tbl.ilicitos,
                                   1,
                                   INSTR (tbl.ilicitos, '&') - 1)
                               omision_pago,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               contrav_adu,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               contrab_contrav,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        3)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - 1)
                               contrab_delito,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               defraudacion,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               otros,
                           fecha_est_con
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     pkg_reporte.devuelve_info_conclusion (
                                         f1.ctl_control_id,
                                         con.con_tipo_doc_con)
                                         info_con,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con
                              FROM   fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1
                             WHERE   a1.est_fecsys BETWEEN TO_DATE (
                                                               prm_fecini,
                                                               'dd/mm/yyyy')
                                                       AND  TO_DATE (
                                                                prm_fecfin,
                                                                'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U') tbl
                ORDER BY   1,
                           2,
                           3,
                           4;
        ELSE
            OPEN cr FOR
                  SELECT   gestion,
                           tipo_control,
                           gerencia,
                           numero,
                           codigo_control,
                           fecha_orden,
                           origen_control,
                           identidad_doc,
                           identidad_nombre,
                           fiscalizador,
                           fiscalizador_nuevo,
                           supervisor,
                           supervisor_nuevo,
                           fecha_notificacion,
                           observacion_notificacion,
                           tipo_notificacion,
                           usuario_notificacion,
                           SUBSTR (tbl.info_con,
                                   1,
                                   INSTR (tbl.info_con, '&') - 1)
                               numero_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               fecha_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               gerencia_legal,
                           con_tipo_doc_con,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               numero_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               fecha_doc,
                           con_usuario usuario_resultados,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        6)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - 1)
                               fecha_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        7)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - 1)
                               tipo_notif,
                           con_usuario usuario_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        8)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - 1)
                               fecha_ci_remision,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        9)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               10)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - 1)
                               ci_remision,
                           con_usuario usuario_remision,
                           con_fecha_doc_con,
                           con_usuario usuario_finalizacion,
                           estado_control,
                           SUBSTR (tbl.ilicitos,
                                   1,
                                   INSTR (tbl.ilicitos, '&') - 1)
                               omision_pago,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               contrav_adu,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               contrab_contrav,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        3)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - 1)
                               contrab_delito,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               defraudacion,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               otros,
                           fecha_est_con
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     pkg_reporte.devuelve_info_conclusion (
                                         f1.ctl_control_id,
                                         con.con_tipo_doc_con)
                                         info_con,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con
                              FROM   fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1
                             WHERE   a1.est_fecsys BETWEEN TO_DATE (
                                                               prm_fecini,
                                                               'dd/mm/yyyy')
                                                       AND  TO_DATE (
                                                                prm_fecfin,
                                                                'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND (f1.ctl_nit = prm_nit
                                          OR f1.ctl_ci = prm_nit)
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U') tbl
                ORDER BY   1,
                           2,
                           3,
                           4;
        END IF;

        RETURN cr;
    END;

    FUNCTION reporte_seguimiento_dui (prm_control    IN VARCHAR2,
                                      prm_gerencia   IN VARCHAR2,
                                      prm_fecini     IN VARCHAR2,
                                      prm_fecfin     IN VARCHAR2,
                                      prm_nit        IN VARCHAR2)
        RETURN cursortype
    IS
        cr           cursortype;
        v_gerencia   VARCHAR2 (5);
    BEGIN
        IF prm_gerencia = '%'
        THEN
            v_gerencia := '%';
        ELSE
            SELECT   a.ger_codigo
              INTO   v_gerencia
              FROM   fis_gerencia a
             WHERE   reg_cod = prm_gerencia AND reg_lstope = 'U';
        END IF;

        IF prm_nit IS NULL
        THEN
            OPEN cr FOR
                  SELECT   gestion,
                           tipo_control,
                           gerencia,
                           numero,
                           codigo_control,
                           fecha_orden,
                           origen_control,
                           identidad_doc,
                           identidad_nombre,
                           fiscalizador,
                           fiscalizador_nuevo,
                           supervisor,
                           supervisor_nuevo,
                           SUBSTR (tbl.ampli, 1, INSTR (tbl.ampli, '&') - 1)
                               codigo_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     1)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            2)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            1)
                                                   - 1)
                               fecha_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     2)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            3)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            2)
                                                   - 1)
                               nit_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     3)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            4)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            3)
                                                   - 1)
                               nom_amp,
                           fecha_notificacion,
                           observacion_notificacion,
                           tipo_notificacion,
                           usuario_notificacion,
                           aduana,
                           declaracion,
                           fecha_registro,
                           patron,
                           canal,
                           fecha_pase,
                           nit_importador,
                           nombre_importador,
                           nit_declarante,
                           nombre_declarante,
                           direccion_proveedor,
                           proveedor,
                           localizacion,
                           pais_origen,
                           pais_uproced,
                           pto_pais_embarque,
                           SUM (total_peso_bruto) peso_bruto,
                           SUM (total_peso_neto) peso_neto,
                           total_valor_fob,
                           total_flete,
                           total_seguro,
                           total_otros,
                           cifusd,
                           cifbs,
                           SUM (dec_ga) dec_ga,
                           SUM (dec_iva) dec_iva,
                           SUM (dec_ice) dec_ice,
                           SUM (dec_iehd) dec_iehd,
                           SUM (dec_icd) dec_icd,
                           SUM (tot_trib) tot_trib,
                           SUBSTR (tbl.info_con,
                                   1,
                                   INSTR (tbl.info_con, '&') - 1)
                               numero_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               fecha_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               gerencia_legal,
                           con_tipo_doc_con,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               numero_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               fecha_doc,
                           con_usuario usuario_resultados,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        6)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - 1)
                               fecha_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        7)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - 1)
                               tipo_notif,
                           con_usuario usuario_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        8)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - 1)
                               fecha_ci_remision,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        9)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               10)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - 1)
                               ci_remision,
                           con_usuario usuario_remision,
                           con_fecha_doc_con,
                           con_usuario usuario_finalizacion,
                           estado_control,
                           SUBSTR (tbl.ilicitos,
                                   1,
                                   INSTR (tbl.ilicitos, '&') - 1)
                               omision_pago,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               contrav_adu,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               contrab_contrav,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        3)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - 1)
                               contrab_delito,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               defraudacion,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               otros,
                           fecha_est_con
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     pkg_reporte.devuelve_ampliatoria (
                                         f1.ctl_control_id,
                                            sad_gen.sad_reg_year
                                         || '/'
                                         || sad_gen.key_cuo
                                         || '/'
                                         || sad_gen.sad_reg_serial
                                         || '-'
                                         || sad_gen.sad_reg_nber)
                                         ampli,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     pkg_reporte.devuelve_info_conclusion (
                                         f1.ctl_control_id,
                                         con.con_tipo_doc_con)
                                         info_con,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con,
                                     sad_gen.key_cuo || ':' || unt.cuo_nam
                                         aduana,
                                        sad_gen.sad_reg_year
                                     || '/'
                                     || sad_gen.key_cuo
                                     || '/'
                                     || sad_gen.sad_reg_serial
                                     || '-'
                                     || sad_gen.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (sad_gen.sad_reg_date,
                                              'dd/mm/yyyy')
                                         fecha_registro,
                                        sad_gen.sad_typ_dec
                                     || '-'
                                     || sad_gen.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (sad_gen.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 sad_gen.sad_consignee),
                                         ' ')
                                         nit_importador            -- campo 8a
                                                       ,
                                     DECODE (sad_gen.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador   -- campo 8b (19)e
                                                          ,
                                     NVL (sad_gen.key_dec, ' ') nit_declarante -- campo 14a
                                                                              ,
                                     dec.dec_nam nombre_declarante -- campo 14b (30)
                                                                  ,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (sad_gen.sad_loc_goods, ' ')
                                         localizacion              -- campo 30
                                                     ,
                                     ' ' pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (sad_gen.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (sad_gen.sad_lop_cod, 1, 2)
                                         pto_pais_embarque         -- campo 27
                                                          ,
                                     NVL (itm.saditm_gross_mass, 0)
                                         total_peso_bruto     -- campo 6b (84)
                                                         ,
                                     NVL (itm.saditm_net_mass, 0)
                                         total_peso_neto      -- campo 6b (84)
                                                        ,
                                     sad_gen.sad_tot_invoiced total_valor_fob,
                                     -- campo 22b (48)
                                     NVL (vim.sad_itotefr_valc, 0) total_flete,
                                     NVL (vim.sad_itotins_valc, 0) total_seguro,
                                     NVL (vim.sad_itototc_valc, 0) total_otros,
                                     NVL (
                                         ROUND (
                                             vim.sad_icif_valn
                                             / vim.sad_itotinv_rat,
                                             2),
                                         0)
                                         cifusd,
                                     NVL (vim.sad_icif_valn, 0) cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         tot_trib
                              FROM   ops$asy.sad_gen,
                                     ops$asy.sad_gen_vim vim,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.undectab dec,
                                     ops$asy.sad_itm itm,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icda,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unloctab loc,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1,
                                     fis_alcance alc
                             WHERE       sad_gen.key_year = prov.key_year(+)
                                     AND sad_gen.key_cuo = prov.key_cuo(+)
                                     AND sad_gen.key_dec = prov.key_dec(+)
                                     AND sad_gen.key_nber = prov.key_nber(+)
                                     AND sad_gen.sad_num = prov.sad_num(+)
                                     AND sad_gen.key_year = vim.key_year(+)
                                     AND sad_gen.key_cuo = vim.key_cuo(+)
                                     AND sad_gen.key_dec = vim.key_dec(+)
                                     AND sad_gen.key_nber = vim.key_nber(+)
                                     AND sad_gen.sad_num = vim.sad_num(+)
                                     AND sad_gen.key_year = itm.key_year
                                     AND sad_gen.key_cuo = itm.key_cuo
                                     AND sad_gen.key_dec = itm.key_dec
                                     AND sad_gen.key_nber = itm.key_nber
                                     AND itm.sad_num = '0'
                                     AND sad_gen.key_year = cns.key_year(+)
                                     AND sad_gen.key_cuo = cns.key_cuo(+)
                                     AND sad_gen.key_dec = cns.key_dec(+)
                                     AND sad_gen.key_nber = cns.key_nber(+)
                                     AND sad_gen.sad_num = cns.sad_num(+)
                                     AND sad_gen.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND sad_gen.key_dec = dec.dec_cod
                                     AND dec.lst_ope = 'U'
                                     AND sad_gen.lst_ope = 'U'
                                     AND sad_gen.sad_num = 0
                                     AND sad_gen.sad_flw = 1
                                     AND sad_gen.sad_reg_nber IS NOT NULL
                                     AND itm.key_year = gaa.key_year
                                     AND itm.key_cuo = gaa.key_cuo
                                     AND itm.key_dec = gaa.key_dec
                                     AND itm.key_nber = gaa.key_nber
                                     AND itm.itm_nber = gaa.itm_nber
                                     AND itm.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND itm.key_year = ivaa.key_year
                                     AND itm.key_cuo = ivaa.key_cuo
                                     AND itm.key_dec = ivaa.key_dec
                                     AND itm.key_nber = ivaa.key_nber
                                     AND itm.itm_nber = ivaa.itm_nber
                                     AND itm.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND itm.key_year = icea.key_year(+)
                                     AND itm.key_cuo = icea.key_cuo(+)
                                     AND itm.key_dec = icea.key_dec(+)
                                     AND itm.key_nber = icea.key_nber(+)
                                     AND itm.itm_nber = icea.itm_nber(+)
                                     AND itm.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND itm.key_year = iehda.key_year(+)
                                     AND itm.key_cuo = iehda.key_cuo(+)
                                     AND itm.key_dec = iehda.key_dec(+)
                                     AND itm.key_nber = iehda.key_nber(+)
                                     AND itm.itm_nber = iehda.itm_nber(+)
                                     AND itm.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND itm.key_year = icda.key_year(+)
                                     AND itm.key_cuo = icda.key_cuo(+)
                                     AND itm.key_dec = icda.key_dec(+)
                                     AND itm.key_nber = icda.key_nber(+)
                                     AND itm.itm_nber = icda.itm_nber(+)
                                     AND itm.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     AND unt.cuo_cod = sad_gen.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = sad_gen.key_year
                                     AND spyc.key_cuo(+) = sad_gen.key_cuo
                                     AND spyc.key_dec(+) = sad_gen.key_dec
                                     AND spyc.key_nber(+) = sad_gen.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = sad_gen.key_year
                                     AND spyp.key_cuo(+) = sad_gen.key_cuo
                                     AND spyp.key_dec(+) = sad_gen.key_dec
                                     AND spyp.key_nber(+) = sad_gen.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) =
                                            sad_gen.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = sad_gen.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND sad_gen.sad_reg_year = alc.alc_gestion
                                     AND sad_gen.key_cuo = alc.alc_aduana
                                     AND sad_gen.sad_reg_serial = 'C'
                                     AND sad_gen.sad_reg_nber = alc.alc_numero
                                     AND alc.ctl_control_id = f1.ctl_control_id
                                     AND alc.alc_tipo_tramite = 'DUI'
                                     AND alc.alc_num = 0
                                     AND alc.alc_lstope = 'U'
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U'
                            UNION ALL
                            SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     pkg_reporte.devuelve_ampliatoria (
                                         f1.ctl_control_id,
                                            sad_gen.sad_reg_year
                                         || '/'
                                         || sad_gen.key_cuo
                                         || '/'
                                         || sad_gen.sad_reg_serial
                                         || '-'
                                         || sad_gen.sad_reg_nber)
                                         ampli,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     pkg_reporte.devuelve_info_conclusion (
                                         f1.ctl_control_id,
                                         con.con_tipo_doc_con)
                                         info_con,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con,
                                     sad_gen.key_cuo || ':' || unt.cuo_nam
                                         aduana,
                                        sad_gen.sad_reg_year
                                     || '/'
                                     || sad_gen.key_cuo
                                     || '/'
                                     || sad_gen.sad_reg_serial
                                     || '-'
                                     || sad_gen.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (sad_gen.sad_reg_date,
                                              'dd/mm/yyyy')
                                         fecha_registro,
                                        sad_gen.sad_typ_dec
                                     || '-'
                                     || sad_gen.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (sad_gen.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 sad_gen.sad_consignee),
                                         ' ')
                                         nombre_importador         -- campo 8a
                                                          ,
                                     DECODE (sad_gen.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         dir_importador      -- campo 8b (19)e
                                                       ,
                                     NVL (sad_gen.key_dec, ' ') nit_declarante -- campo 14a
                                                                              ,
                                     occ.sad_dec_nam nombre_declarante,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (sad_gen.sad_loc_goods, ' ')
                                         localizacion              -- campo 30
                                                     ,
                                     ' ' pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (sad_gen.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (sad_gen.sad_lop_cod, 1, 2)
                                         pto_pais_embarque         -- campo 27
                                                          ,
                                     NVL (itm.saditm_gross_mass, 0)
                                         total_peso_bruto     -- campo 6b (84)
                                                         ,
                                     NVL (itm.saditm_net_mass, 0)
                                         total_peso_neto      -- campo 6b (84)
                                                        ,
                                     sad_gen.sad_tot_invoiced total_valor_fob, -- campo 22b (48)
                                     NVL (vim.sad_itotefr_valc, 0) total_flete,
                                     NVL (vim.sad_itotins_valc, 0) total_seguro,
                                     NVL (vim.sad_itototc_valc, 0) total_otros,
                                     NVL (
                                         ROUND (
                                             vim.sad_icif_valn
                                             / vim.sad_itotinv_rat,
                                             2),
                                         0)
                                         cifusd,
                                     NVL (vim.sad_icif_valn, 0) cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         tot_trib
                              FROM   ops$asy.sad_gen,
                                     ops$asy.sad_gen_vim vim,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.sad_occ_dec occ,
                                     ops$asy.sad_itm itm,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icda,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unloctab loc,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1,
                                     fis_alcance alc
                             WHERE       sad_gen.key_year = prov.key_year(+)
                                     AND sad_gen.key_cuo = prov.key_cuo(+)
                                     AND sad_gen.key_dec IS NULL
                                     AND sad_gen.sad_num = 0
                                     AND sad_gen.key_year = itm.key_year
                                     AND sad_gen.key_cuo = itm.key_cuo
                                     AND itm.key_dec IS NULL
                                     AND sad_gen.key_nber = itm.key_nber
                                     AND itm.sad_num = '0'
                                     AND prov.key_dec(+) IS NULL
                                     AND sad_gen.key_nber = prov.key_nber(+)
                                     AND sad_gen.sad_num = prov.sad_num(+)
                                     AND sad_gen.key_year = cns.key_year(+)
                                     AND sad_gen.key_cuo = cns.key_cuo(+)
                                     AND sad_gen.key_dec IS NULL
                                     AND cns.key_dec(+) IS NULL
                                     AND sad_gen.key_nber = cns.key_nber(+)
                                     AND sad_gen.sad_num = cns.sad_num(+)
                                     AND sad_gen.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND sad_gen.key_year = occ.key_year
                                     AND sad_gen.key_cuo = occ.key_cuo
                                     AND sad_gen.key_dec IS NULL
                                     AND occ.key_dec IS NULL
                                     AND sad_gen.key_nber = occ.key_nber
                                     AND sad_gen.sad_num = occ.sad_num
                                     AND sad_gen.lst_ope = 'U'
                                     AND sad_gen.sad_flw = 1
                                     AND sad_gen.sad_reg_nber IS NOT NULL
                                     AND itm.key_year = gaa.key_year
                                     AND itm.key_cuo = gaa.key_cuo
                                     AND gaa.key_dec IS NULL
                                     AND itm.key_nber = gaa.key_nber
                                     AND itm.itm_nber = gaa.itm_nber
                                     AND itm.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND itm.key_year = ivaa.key_year
                                     AND itm.key_cuo = ivaa.key_cuo
                                     AND ivaa.key_dec IS NULL
                                     AND itm.key_nber = ivaa.key_nber
                                     AND itm.itm_nber = ivaa.itm_nber
                                     AND itm.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND itm.key_year = icea.key_year(+)
                                     AND itm.key_cuo = icea.key_cuo(+)
                                     AND icea.key_dec(+) IS NULL
                                     AND itm.key_nber = icea.key_nber(+)
                                     AND itm.itm_nber = icea.itm_nber(+)
                                     AND itm.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND itm.key_year = iehda.key_year(+)
                                     AND itm.key_cuo = iehda.key_cuo(+)
                                     AND iehda.key_dec(+) IS NULL
                                     AND itm.key_nber = iehda.key_nber(+)
                                     AND itm.itm_nber = iehda.itm_nber(+)
                                     AND itm.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND itm.key_year = icda.key_year(+)
                                     AND itm.key_cuo = icda.key_cuo(+)
                                     AND icda.key_dec(+) IS NULL
                                     AND itm.key_nber = icda.key_nber(+)
                                     AND itm.itm_nber = icda.itm_nber(+)
                                     AND itm.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     AND unt.cuo_cod = sad_gen.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = sad_gen.key_year
                                     AND spyc.key_cuo(+) = sad_gen.key_cuo
                                     AND spyc.key_dec(+) IS NULL
                                     AND spyc.key_nber(+) = sad_gen.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = sad_gen.key_year
                                     AND spyp.key_cuo(+) = sad_gen.key_cuo
                                     AND spyp.key_dec(+) IS NULL
                                     AND spyp.key_nber(+) = sad_gen.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) =
                                            sad_gen.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = sad_gen.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND sad_gen.sad_reg_year = alc.alc_gestion
                                     AND sad_gen.key_cuo = alc.alc_aduana
                                     AND sad_gen.sad_reg_serial = 'C'
                                     AND sad_gen.sad_reg_nber = alc.alc_numero
                                     AND alc.ctl_control_id = f1.ctl_control_id
                                     AND alc.alc_tipo_tramite = 'DUI'
                                     AND alc.alc_num = 0
                                     AND alc.alc_lstope = 'U'
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U') tbl
                GROUP BY   gestion,
                           tipo_control,
                           gerencia,
                           numero,
                           codigo_control,
                           fecha_orden,
                           origen_control,
                           con_tipo_doc_con,
                           identidad_doc,
                           identidad_nombre,
                           fiscalizador,
                           fiscalizador_nuevo,
                           supervisor,
                           supervisor_nuevo,
                           ampli,
                           fecha_notificacion,
                           observacion_notificacion,
                           tipo_notificacion,
                           usuario_notificacion,
                           info_con,
                           con_fecha_doc_con,
                           con_usuario,
                           estado_control,
                           ilicitos,
                           fecha_est_con,
                           aduana,
                           declaracion,
                           fecha_registro,
                           patron,
                           canal,
                           fecha_pase,
                           nit_importador,
                           nombre_importador,
                           nit_declarante,
                           nombre_declarante,
                           direccion_proveedor,
                           proveedor,
                           localizacion,
                           pais_origen,
                           pais_uproced,
                           pto_pais_embarque,
                           total_valor_fob,
                           total_flete,
                           total_seguro,
                           total_otros,
                           cifusd,
                           cifbs
                ORDER BY   1,
                           2,
                           3,
                           4;
        ELSE
            OPEN cr FOR
                  SELECT   gestion,
                           tipo_control,
                           gerencia,
                           numero,
                           codigo_control,
                           fecha_orden,
                           origen_control,
                           identidad_doc,
                           identidad_nombre,
                           fiscalizador,
                           fiscalizador_nuevo,
                           supervisor,
                           supervisor_nuevo,
                           SUBSTR (tbl.ampli, 1, INSTR (tbl.ampli, '&') - 1)
                               codigo_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     1)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            2)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            1)
                                                   - 1)
                               fecha_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     2)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            3)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            2)
                                                   - 1)
                               nit_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     3)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            4)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            3)
                                                   - 1)
                               nom_amp,
                           fecha_notificacion,
                           observacion_notificacion,
                           tipo_notificacion,
                           usuario_notificacion,
                           aduana,
                           declaracion,
                           fecha_registro,
                           patron,
                           canal,
                           fecha_pase,
                           nit_importador,
                           nombre_importador,
                           nit_declarante,
                           nombre_declarante,
                           direccion_proveedor,
                           proveedor,
                           localizacion,
                           pais_origen,
                           pais_uproced,
                           pto_pais_embarque,
                           SUM (total_peso_bruto) peso_bruto,
                           SUM (total_peso_neto) peso_neto,
                           total_valor_fob,
                           total_flete,
                           total_seguro,
                           total_otros,
                           cifusd,
                           cifbs,
                           SUM (dec_ga) dec_ga,
                           SUM (dec_iva) dec_iva,
                           SUM (dec_ice) dec_ice,
                           SUM (dec_iehd) dec_iehd,
                           SUM (dec_icd) dec_icd,
                           SUM (tot_trib) tot_trib,
                           SUBSTR (tbl.info_con,
                                   1,
                                   INSTR (tbl.info_con, '&') - 1)
                               numero_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               fecha_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               gerencia_legal,
                           con_tipo_doc_con,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               numero_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               fecha_doc,
                           con_usuario usuario_resultados,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        6)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - 1)
                               fecha_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        7)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - 1)
                               tipo_notif,
                           con_usuario usuario_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        8)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - 1)
                               fecha_ci_remision,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        9)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               10)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - 1)
                               ci_remision,
                           con_usuario usuario_remision,
                           con_fecha_doc_con,
                           con_usuario usuario_finalizacion,
                           estado_control,
                           SUBSTR (tbl.ilicitos,
                                   1,
                                   INSTR (tbl.ilicitos, '&') - 1)
                               omision_pago,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               contrav_adu,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               contrab_contrav,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        3)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - 1)
                               contrab_delito,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               defraudacion,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               otros,
                           fecha_est_con
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     pkg_reporte.devuelve_ampliatoria (
                                         f1.ctl_control_id,
                                            sad_gen.sad_reg_year
                                         || '/'
                                         || sad_gen.key_cuo
                                         || '/'
                                         || sad_gen.sad_reg_serial
                                         || '-'
                                         || sad_gen.sad_reg_nber)
                                         ampli,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     pkg_reporte.devuelve_info_conclusion (
                                         f1.ctl_control_id,
                                         con.con_tipo_doc_con)
                                         info_con,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con,
                                     sad_gen.key_cuo || ':' || unt.cuo_nam
                                         aduana,
                                        sad_gen.sad_reg_year
                                     || '/'
                                     || sad_gen.key_cuo
                                     || '/'
                                     || sad_gen.sad_reg_serial
                                     || '-'
                                     || sad_gen.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (sad_gen.sad_reg_date,
                                              'dd/mm/yyyy')
                                         fecha_registro,
                                        sad_gen.sad_typ_dec
                                     || '-'
                                     || sad_gen.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (sad_gen.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 sad_gen.sad_consignee),
                                         ' ')
                                         nit_importador            -- campo 8a
                                                       ,
                                     DECODE (sad_gen.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador   -- campo 8b (19)e
                                                          ,
                                     NVL (sad_gen.key_dec, ' ') nit_declarante -- campo 14a
                                                                              ,
                                     dec.dec_nam nombre_declarante -- campo 14b (30)
                                                                  ,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (sad_gen.sad_loc_goods, ' ')
                                         localizacion              -- campo 30
                                                     ,
                                     ' ' pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (sad_gen.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (sad_gen.sad_lop_cod, 1, 2)
                                         pto_pais_embarque         -- campo 27
                                                          ,
                                     NVL (itm.saditm_gross_mass, 0)
                                         total_peso_bruto     -- campo 6b (84)
                                                         ,
                                     NVL (itm.saditm_net_mass, 0)
                                         total_peso_neto      -- campo 6b (84)
                                                        ,
                                     sad_gen.sad_tot_invoiced total_valor_fob,
                                     -- campo 22b (48)
                                     NVL (vim.sad_itotefr_valc, 0) total_flete,
                                     NVL (vim.sad_itotins_valc, 0) total_seguro,
                                     NVL (vim.sad_itototc_valc, 0) total_otros,
                                     NVL (
                                         ROUND (
                                             vim.sad_icif_valn
                                             / vim.sad_itotinv_rat,
                                             2),
                                         0)
                                         cifusd,
                                     NVL (vim.sad_icif_valn, 0) cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         tot_trib
                              FROM   ops$asy.sad_gen,
                                     ops$asy.sad_gen_vim vim,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.undectab dec,
                                     ops$asy.sad_itm itm,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icda,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unloctab loc,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1,
                                     fis_alcance alc
                             WHERE       sad_gen.key_year = prov.key_year(+)
                                     AND sad_gen.key_cuo = prov.key_cuo(+)
                                     AND sad_gen.key_dec = prov.key_dec(+)
                                     AND sad_gen.key_nber = prov.key_nber(+)
                                     AND sad_gen.sad_num = prov.sad_num(+)
                                     AND sad_gen.key_year = vim.key_year(+)
                                     AND sad_gen.key_cuo = vim.key_cuo(+)
                                     AND sad_gen.key_dec = vim.key_dec(+)
                                     AND sad_gen.key_nber = vim.key_nber(+)
                                     AND sad_gen.sad_num = vim.sad_num(+)
                                     AND sad_gen.key_year = itm.key_year
                                     AND sad_gen.key_cuo = itm.key_cuo
                                     AND sad_gen.key_dec = itm.key_dec
                                     AND sad_gen.key_nber = itm.key_nber
                                     AND itm.sad_num = '0'
                                     AND sad_gen.key_year = cns.key_year(+)
                                     AND sad_gen.key_cuo = cns.key_cuo(+)
                                     AND sad_gen.key_dec = cns.key_dec(+)
                                     AND sad_gen.key_nber = cns.key_nber(+)
                                     AND sad_gen.sad_num = cns.sad_num(+)
                                     AND sad_gen.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND sad_gen.key_dec = dec.dec_cod
                                     AND dec.lst_ope = 'U'
                                     AND sad_gen.lst_ope = 'U'
                                     AND sad_gen.sad_num = 0
                                     AND sad_gen.sad_flw = 1
                                     AND sad_gen.sad_reg_nber IS NOT NULL
                                     AND itm.key_year = gaa.key_year
                                     AND itm.key_cuo = gaa.key_cuo
                                     AND itm.key_dec = gaa.key_dec
                                     AND itm.key_nber = gaa.key_nber
                                     AND itm.itm_nber = gaa.itm_nber
                                     AND itm.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND itm.key_year = ivaa.key_year
                                     AND itm.key_cuo = ivaa.key_cuo
                                     AND itm.key_dec = ivaa.key_dec
                                     AND itm.key_nber = ivaa.key_nber
                                     AND itm.itm_nber = ivaa.itm_nber
                                     AND itm.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND itm.key_year = icea.key_year(+)
                                     AND itm.key_cuo = icea.key_cuo(+)
                                     AND itm.key_dec = icea.key_dec(+)
                                     AND itm.key_nber = icea.key_nber(+)
                                     AND itm.itm_nber = icea.itm_nber(+)
                                     AND itm.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND itm.key_year = iehda.key_year(+)
                                     AND itm.key_cuo = iehda.key_cuo(+)
                                     AND itm.key_dec = iehda.key_dec(+)
                                     AND itm.key_nber = iehda.key_nber(+)
                                     AND itm.itm_nber = iehda.itm_nber(+)
                                     AND itm.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND itm.key_year = icda.key_year(+)
                                     AND itm.key_cuo = icda.key_cuo(+)
                                     AND itm.key_dec = icda.key_dec(+)
                                     AND itm.key_nber = icda.key_nber(+)
                                     AND itm.itm_nber = icda.itm_nber(+)
                                     AND itm.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     AND unt.cuo_cod = sad_gen.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = sad_gen.key_year
                                     AND spyc.key_cuo(+) = sad_gen.key_cuo
                                     AND spyc.key_dec(+) = sad_gen.key_dec
                                     AND spyc.key_nber(+) = sad_gen.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = sad_gen.key_year
                                     AND spyp.key_cuo(+) = sad_gen.key_cuo
                                     AND spyp.key_dec(+) = sad_gen.key_dec
                                     AND spyp.key_nber(+) = sad_gen.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) =
                                            sad_gen.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = sad_gen.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND sad_gen.sad_reg_year = alc.alc_gestion
                                     AND sad_gen.key_cuo = alc.alc_aduana
                                     AND sad_gen.sad_reg_serial = 'C'
                                     AND sad_gen.sad_reg_nber = alc.alc_numero
                                     AND alc.ctl_control_id = f1.ctl_control_id
                                     AND alc.alc_tipo_tramite = 'DUI'
                                     AND alc.alc_num = 0
                                     AND alc.alc_lstope = 'U'
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND (f1.ctl_nit = prm_nit
                                          OR f1.ctl_ci = prm_nit)
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U'
                            UNION ALL
                            SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     pkg_reporte.devuelve_ampliatoria (
                                         f1.ctl_control_id,
                                            sad_gen.sad_reg_year
                                         || '/'
                                         || sad_gen.key_cuo
                                         || '/'
                                         || sad_gen.sad_reg_serial
                                         || '-'
                                         || sad_gen.sad_reg_nber)
                                         ampli,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     pkg_reporte.devuelve_info_conclusion (
                                         f1.ctl_control_id,
                                         con.con_tipo_doc_con)
                                         info_con,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con,
                                     sad_gen.key_cuo || ':' || unt.cuo_nam
                                         aduana,
                                        sad_gen.sad_reg_year
                                     || '/'
                                     || sad_gen.key_cuo
                                     || '/'
                                     || sad_gen.sad_reg_serial
                                     || '-'
                                     || sad_gen.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (sad_gen.sad_reg_date,
                                              'dd/mm/yyyy')
                                         fecha_registro,
                                        sad_gen.sad_typ_dec
                                     || '-'
                                     || sad_gen.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (sad_gen.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 sad_gen.sad_consignee),
                                         ' ')
                                         nombre_importador         -- campo 8a
                                                          ,
                                     DECODE (sad_gen.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         dir_importador      -- campo 8b (19)e
                                                       ,
                                     NVL (sad_gen.key_dec, ' ') nit_declarante -- campo 14a
                                                                              ,
                                     occ.sad_dec_nam nombre_declarante,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (sad_gen.sad_loc_goods, ' ')
                                         localizacion              -- campo 30
                                                     ,
                                     ' ' pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (sad_gen.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (sad_gen.sad_lop_cod, 1, 2)
                                         pto_pais_embarque         -- campo 27
                                                          ,
                                     NVL (itm.saditm_gross_mass, 0)
                                         total_peso_bruto     -- campo 6b (84)
                                                         ,
                                     NVL (itm.saditm_net_mass, 0)
                                         total_peso_neto      -- campo 6b (84)
                                                        ,
                                     sad_gen.sad_tot_invoiced total_valor_fob, -- campo 22b (48)
                                     NVL (vim.sad_itotefr_valc, 0) total_flete,
                                     NVL (vim.sad_itotins_valc, 0) total_seguro,
                                     NVL (vim.sad_itototc_valc, 0) total_otros,
                                     NVL (
                                         ROUND (
                                             vim.sad_icif_valn
                                             / vim.sad_itotinv_rat,
                                             2),
                                         0)
                                         cifusd,
                                     NVL (vim.sad_icif_valn, 0) cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         tot_trib
                              FROM   ops$asy.sad_gen,
                                     ops$asy.sad_gen_vim vim,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.sad_occ_dec occ,
                                     ops$asy.sad_itm itm,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icda,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unloctab loc,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1,
                                     fis_alcance alc
                             WHERE       sad_gen.key_year = prov.key_year(+)
                                     AND sad_gen.key_cuo = prov.key_cuo(+)
                                     AND sad_gen.key_dec IS NULL
                                     AND sad_gen.sad_num = 0
                                     AND sad_gen.key_year = itm.key_year
                                     AND sad_gen.key_cuo = itm.key_cuo
                                     AND itm.key_dec IS NULL
                                     AND sad_gen.key_nber = itm.key_nber
                                     AND itm.sad_num = '0'
                                     AND prov.key_dec(+) IS NULL
                                     AND sad_gen.key_nber = prov.key_nber(+)
                                     AND sad_gen.sad_num = prov.sad_num(+)
                                     AND sad_gen.key_year = cns.key_year(+)
                                     AND sad_gen.key_cuo = cns.key_cuo(+)
                                     AND sad_gen.key_dec IS NULL
                                     AND cns.key_dec(+) IS NULL
                                     AND sad_gen.key_nber = cns.key_nber(+)
                                     AND sad_gen.sad_num = cns.sad_num(+)
                                     AND sad_gen.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND sad_gen.key_year = occ.key_year
                                     AND sad_gen.key_cuo = occ.key_cuo
                                     AND sad_gen.key_dec IS NULL
                                     AND occ.key_dec IS NULL
                                     AND sad_gen.key_nber = occ.key_nber
                                     AND sad_gen.sad_num = occ.sad_num
                                     AND sad_gen.lst_ope = 'U'
                                     AND sad_gen.sad_flw = 1
                                     AND sad_gen.sad_reg_nber IS NOT NULL
                                     AND itm.key_year = gaa.key_year
                                     AND itm.key_cuo = gaa.key_cuo
                                     AND gaa.key_dec IS NULL
                                     AND itm.key_nber = gaa.key_nber
                                     AND itm.itm_nber = gaa.itm_nber
                                     AND itm.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND itm.key_year = ivaa.key_year
                                     AND itm.key_cuo = ivaa.key_cuo
                                     AND ivaa.key_dec IS NULL
                                     AND itm.key_nber = ivaa.key_nber
                                     AND itm.itm_nber = ivaa.itm_nber
                                     AND itm.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND itm.key_year = icea.key_year(+)
                                     AND itm.key_cuo = icea.key_cuo(+)
                                     AND icea.key_dec(+) IS NULL
                                     AND itm.key_nber = icea.key_nber(+)
                                     AND itm.itm_nber = icea.itm_nber(+)
                                     AND itm.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND itm.key_year = iehda.key_year(+)
                                     AND itm.key_cuo = iehda.key_cuo(+)
                                     AND iehda.key_dec(+) IS NULL
                                     AND itm.key_nber = iehda.key_nber(+)
                                     AND itm.itm_nber = iehda.itm_nber(+)
                                     AND itm.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND itm.key_year = icda.key_year(+)
                                     AND itm.key_cuo = icda.key_cuo(+)
                                     AND icda.key_dec(+) IS NULL
                                     AND itm.key_nber = icda.key_nber(+)
                                     AND itm.itm_nber = icda.itm_nber(+)
                                     AND itm.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     AND unt.cuo_cod = sad_gen.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = sad_gen.key_year
                                     AND spyc.key_cuo(+) = sad_gen.key_cuo
                                     AND spyc.key_dec(+) IS NULL
                                     AND spyc.key_nber(+) = sad_gen.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = sad_gen.key_year
                                     AND spyp.key_cuo(+) = sad_gen.key_cuo
                                     AND spyp.key_dec(+) IS NULL
                                     AND spyp.key_nber(+) = sad_gen.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) =
                                            sad_gen.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = sad_gen.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND sad_gen.sad_reg_year = alc.alc_gestion
                                     AND sad_gen.key_cuo = alc.alc_aduana
                                     AND sad_gen.sad_reg_serial = 'C'
                                     AND sad_gen.sad_reg_nber = alc.alc_numero
                                     AND alc.ctl_control_id = f1.ctl_control_id
                                     AND alc.alc_tipo_tramite = 'DUI'
                                     AND alc.alc_num = 0
                                     AND alc.alc_lstope = 'U'
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND (f1.ctl_nit = prm_nit
                                          OR f1.ctl_ci = prm_nit)
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U') tbl
                GROUP BY   gestion,
                           tipo_control,
                           gerencia,
                           numero,
                           codigo_control,
                           fecha_orden,
                           origen_control,
                           con_tipo_doc_con,
                           identidad_doc,
                           identidad_nombre,
                           fiscalizador,
                           fiscalizador_nuevo,
                           supervisor,
                           supervisor_nuevo,
                           ampli,
                           fecha_notificacion,
                           observacion_notificacion,
                           tipo_notificacion,
                           usuario_notificacion,
                           info_con,
                           con_fecha_doc_con,
                           con_usuario,
                           estado_control,
                           ilicitos,
                           fecha_est_con,
                           aduana,
                           declaracion,
                           fecha_registro,
                           patron,
                           canal,
                           fecha_pase,
                           nit_importador,
                           nombre_importador,
                           nit_declarante,
                           nombre_declarante,
                           direccion_proveedor,
                           proveedor,
                           localizacion,
                           pais_origen,
                           pais_uproced,
                           pto_pais_embarque,
                           total_valor_fob,
                           total_flete,
                           total_seguro,
                           total_otros,
                           cifusd,
                           cifbs
                ORDER BY   1,
                           2,
                           3,
                           4;
        END IF;

        RETURN cr;
    END;

    FUNCTION reporte_seguimiento_item (prm_control    IN VARCHAR2,
                                       prm_gerencia   IN VARCHAR2,
                                       prm_fecini     IN VARCHAR2,
                                       prm_fecfin     IN VARCHAR2,
                                       prm_nit        IN VARCHAR2)
        RETURN cursortype
    IS
        cr           cursortype;
        v_gerencia   VARCHAR2 (5);
    BEGIN
        IF prm_gerencia = '%'
        THEN
            v_gerencia := '%';
        ELSE
            SELECT   a.ger_codigo
              INTO   v_gerencia
              FROM   fis_gerencia a
             WHERE   reg_cod = prm_gerencia AND reg_lstope = 'U';
        END IF;

        IF prm_nit IS NULL
        THEN
            OPEN cr FOR
                  SELECT   gestion,
                           tipo_control,
                           gerencia,
                           numero,
                           codigo_control,
                           fecha_orden,
                           origen_control,
                           identidad_doc,
                           identidad_nombre,
                           fiscalizador,
                           fiscalizador_nuevo,
                           supervisor,
                           supervisor_nuevo,
                           SUBSTR (tbl.ampli, 1, INSTR (tbl.ampli, '&') - 1)
                               codigo_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     1)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            2)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            1)
                                                   - 1)
                               fecha_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     2)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            3)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            2)
                                                   - 1)
                               nit_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     3)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            4)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            3)
                                                   - 1)
                               nom_amp,
                           fecha_notificacion,
                           observacion_notificacion,
                           tipo_notificacion,
                           usuario_notificacion,
                           aduana,
                           declaracion,
                           fecha_registro,
                           item,
                           nandina,
                           descripcion,
                           patron,
                           canal,
                           fecha_pase,
                           nit_importador,
                           nombre_importador,
                           nit_declarante,
                           nombre_declarante,
                           direccion_proveedor,
                           proveedor,
                           localizacion,
                           pais_origen,
                           pais_uproced,
                           pto_pais_embarque,
                           total_peso_bruto,
                           total_peso_neto,
                           total_valor_fob,
                           total_flete,
                           total_seguro,
                           total_otros,
                           cifusd,
                           cifbs,
                           dec_ga,
                           dec_iva,
                           dec_ice,
                           dec_iehd,
                           dec_icd,
                           tot_trib,
                           estado_control,
                           SUBSTR (tbl.ilicitos,
                                   1,
                                   INSTR (tbl.ilicitos, '&') - 1)
                               omision_pago,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               contrav_adu,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               contrab_contrav,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        3)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - 1)
                               contrab_delito,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               defraudacion,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               otros,
                           fecha_est_con
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     pkg_reporte.devuelve_ampliatoria (
                                         f1.ctl_control_id,
                                            sad_gen.sad_reg_year
                                         || '/'
                                         || sad_gen.key_cuo
                                         || '/'
                                         || sad_gen.sad_reg_serial
                                         || '-'
                                         || sad_gen.sad_reg_nber)
                                         ampli,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con,
                                     sad_gen.key_cuo || ':' || unt.cuo_nam
                                         aduana,
                                        sad_gen.sad_reg_year
                                     || '/'
                                     || sad_gen.key_cuo
                                     || '/'
                                     || sad_gen.sad_reg_serial
                                     || '-'
                                     || sad_gen.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (sad_gen.sad_reg_date,
                                              'dd/mm/yyyy')
                                         fecha_registro,
                                     itm.itm_nber item,
                                     itm.saditm_hs_cod || itm.saditm_hsprec_cod
                                         nandina,
                                        itm.saditm_goods_desc1
                                     || ' '
                                     || itm.saditm_goods_desc2
                                     || ' '
                                     || itm.saditm_goods_desc3
                                         descripcion,
                                        sad_gen.sad_typ_dec
                                     || '-'
                                     || sad_gen.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (sad_gen.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 sad_gen.sad_consignee),
                                         ' ')
                                         nit_importador            -- campo 8a
                                                       ,
                                     DECODE (sad_gen.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador   -- campo 8b (19)e
                                                          ,
                                     NVL (sad_gen.key_dec, ' ') nit_declarante -- campo 14a
                                                                              ,
                                     dec.dec_nam nombre_declarante -- campo 14b (30)
                                                                  ,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (sad_gen.sad_loc_goods, ' ')
                                         localizacion              -- campo 30
                                                     ,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (sad_gen.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (sad_gen.sad_lop_cod, 1, 2)
                                         pto_pais_embarque         -- campo 27
                                                          ,
                                     NVL (itm.saditm_gross_mass, 0)
                                         total_peso_bruto     -- campo 6b (84)
                                                         ,
                                     NVL (itm.saditm_net_mass, 0)
                                         total_peso_neto      -- campo 6b (84)
                                                        ,
                                     vim.sad_iitminv_valc total_valor_fob,
                                     -- campo 22b (48)
                                     NVL (vim.sad_iitmefr_valc, 0) total_flete,
                                     NVL (vim.sad_iitmins_valc, 0) total_seguro,
                                     NVL (vim.sad_iitmotc_valc, 0) total_otros,
                                     NVL (
                                         ROUND (
                                             vim.sad_iitmcif_valn
                                             / vim.sad_iitminv_rat,
                                             2),
                                         0)
                                         cifusd,
                                     NVL (vim.sad_iitmcif_valn, 0) cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         tot_trib
                              FROM   ops$asy.sad_gen,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.undectab dec,
                                     ops$asy.sad_itm itm,
                                     ops$asy.sad_itm_vim vim,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icda,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1,
                                     fis_alcance alc
                             WHERE       sad_gen.key_year = prov.key_year(+)
                                     AND sad_gen.key_cuo = prov.key_cuo(+)
                                     AND sad_gen.key_dec = prov.key_dec(+)
                                     AND sad_gen.key_nber = prov.key_nber(+)
                                     AND sad_gen.sad_num = prov.sad_num(+)
                                     AND sad_gen.key_year = itm.key_year
                                     AND sad_gen.key_cuo = itm.key_cuo
                                     AND sad_gen.key_dec = itm.key_dec
                                     AND sad_gen.key_nber = itm.key_nber
                                     AND itm.sad_num = '0'
                                     AND sad_gen.key_year = cns.key_year(+)
                                     AND sad_gen.key_cuo = cns.key_cuo(+)
                                     AND sad_gen.key_dec = cns.key_dec(+)
                                     AND sad_gen.key_nber = cns.key_nber(+)
                                     AND sad_gen.sad_num = cns.sad_num(+)
                                     AND sad_gen.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND sad_gen.key_dec = dec.dec_cod
                                     AND dec.lst_ope = 'U'
                                     AND sad_gen.lst_ope = 'U'
                                     AND sad_gen.sad_num = 0
                                     AND sad_gen.sad_flw = 1
                                     AND sad_gen.sad_reg_nber IS NOT NULL
                                     AND itm.key_year = vim.key_year
                                     AND itm.key_cuo = vim.key_cuo
                                     AND itm.key_dec = vim.key_dec
                                     AND itm.key_nber = vim.key_nber
                                     AND itm.itm_nber = vim.itm_nber
                                     AND itm.sad_num = vim.sad_num
                                     AND itm.key_year = gaa.key_year
                                     AND itm.key_cuo = gaa.key_cuo
                                     AND itm.key_dec = gaa.key_dec
                                     AND itm.key_nber = gaa.key_nber
                                     AND itm.itm_nber = gaa.itm_nber
                                     AND itm.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND itm.key_year = ivaa.key_year
                                     AND itm.key_cuo = ivaa.key_cuo
                                     AND itm.key_dec = ivaa.key_dec
                                     AND itm.key_nber = ivaa.key_nber
                                     AND itm.itm_nber = ivaa.itm_nber
                                     AND itm.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND itm.key_year = icea.key_year(+)
                                     AND itm.key_cuo = icea.key_cuo(+)
                                     AND itm.key_dec = icea.key_dec(+)
                                     AND itm.key_nber = icea.key_nber(+)
                                     AND itm.itm_nber = icea.itm_nber(+)
                                     AND itm.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND itm.key_year = iehda.key_year(+)
                                     AND itm.key_cuo = iehda.key_cuo(+)
                                     AND itm.key_dec = iehda.key_dec(+)
                                     AND itm.key_nber = iehda.key_nber(+)
                                     AND itm.itm_nber = iehda.itm_nber(+)
                                     AND itm.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND itm.key_year = icda.key_year(+)
                                     AND itm.key_cuo = icda.key_cuo(+)
                                     AND itm.key_dec = icda.key_dec(+)
                                     AND itm.key_nber = icda.key_nber(+)
                                     AND itm.itm_nber = icda.itm_nber(+)
                                     AND itm.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     AND unt.cuo_cod = sad_gen.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = sad_gen.key_year
                                     AND spyc.key_cuo(+) = sad_gen.key_cuo
                                     AND spyc.key_dec(+) = sad_gen.key_dec
                                     AND spyc.key_nber(+) = sad_gen.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = sad_gen.key_year
                                     AND spyp.key_cuo(+) = sad_gen.key_cuo
                                     AND spyp.key_dec(+) = sad_gen.key_dec
                                     AND spyp.key_nber(+) = sad_gen.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) =
                                            sad_gen.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND itm.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = sad_gen.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND sad_gen.sad_reg_year = alc.alc_gestion
                                     AND sad_gen.key_cuo = alc.alc_aduana
                                     AND sad_gen.sad_reg_serial = 'C'
                                     AND sad_gen.sad_reg_nber = alc.alc_numero
                                     AND alc.ctl_control_id = f1.ctl_control_id
                                     AND alc.alc_tipo_tramite = 'DUI'
                                     AND alc.alc_num = 0
                                     AND alc.alc_lstope = 'U'
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U'
                            UNION ALL
                            SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     pkg_reporte.devuelve_ampliatoria (
                                         f1.ctl_control_id,
                                            sad_gen.sad_reg_year
                                         || '/'
                                         || sad_gen.key_cuo
                                         || '/'
                                         || sad_gen.sad_reg_serial
                                         || '-'
                                         || sad_gen.sad_reg_nber)
                                         ampli,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con,
                                     sad_gen.key_cuo || ':' || unt.cuo_nam
                                         aduana,
                                        sad_gen.sad_reg_year
                                     || '/'
                                     || sad_gen.key_cuo
                                     || '/'
                                     || sad_gen.sad_reg_serial
                                     || '-'
                                     || sad_gen.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (sad_gen.sad_reg_date,
                                              'dd/mm/yyyy')
                                         fecha_registro,
                                     itm.itm_nber item,
                                     itm.saditm_hs_cod || itm.saditm_hsprec_cod
                                         nandina,
                                        itm.saditm_goods_desc1
                                     || ' '
                                     || itm.saditm_goods_desc2
                                     || ' '
                                     || itm.saditm_goods_desc3
                                         descripcion,
                                        sad_gen.sad_typ_dec
                                     || '-'
                                     || sad_gen.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (sad_gen.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 sad_gen.sad_consignee),
                                         ' ')
                                         nombre_importador         -- campo 8a
                                                          ,
                                     DECODE (sad_gen.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         dir_importador      -- campo 8b (19)e
                                                       ,
                                     NVL (sad_gen.key_dec, ' ') nit_declarante -- campo 14a
                                                                              ,
                                     occ.sad_dec_nam nombre_declarante,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (sad_gen.sad_loc_goods, ' ')
                                         localizacion              -- campo 30
                                                     ,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (sad_gen.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (sad_gen.sad_lop_cod, 1, 2)
                                         pto_pais_embarque         -- campo 27
                                                          ,
                                     NVL (itm.saditm_gross_mass, 0)
                                         total_peso_bruto     -- campo 6b (84)
                                                         ,
                                     NVL (itm.saditm_net_mass, 0)
                                         total_peso_neto      -- campo 6b (84)
                                                        ,
                                     vim.sad_iitminv_valc total_valor_fob, -- campo 22b (48)
                                     NVL (vim.sad_iitmefr_valc, 0) total_flete,
                                     NVL (vim.sad_iitmins_valc, 0) total_seguro,
                                     NVL (vim.sad_iitmotc_valc, 0) total_otros,
                                     NVL (
                                         ROUND (
                                             vim.sad_iitmcif_valn
                                             / vim.sad_iitminv_rat,
                                             2),
                                         0)
                                         cifusd,
                                     NVL (vim.sad_iitmcif_valn, 0) cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         tot_trib
                              FROM   ops$asy.sad_gen,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.sad_occ_dec occ,
                                     ops$asy.sad_itm itm,
                                     ops$asy.sad_itm_vim vim,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icda,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1,
                                     fis_alcance alc
                             WHERE       sad_gen.key_year = prov.key_year(+)
                                     AND sad_gen.key_cuo = prov.key_cuo(+)
                                     AND sad_gen.key_dec IS NULL
                                     AND sad_gen.sad_num = 0
                                     AND sad_gen.key_year = itm.key_year
                                     AND sad_gen.key_cuo = itm.key_cuo
                                     AND itm.key_dec IS NULL
                                     AND sad_gen.key_nber = itm.key_nber
                                     AND itm.sad_num = '0'
                                     AND prov.key_dec(+) IS NULL
                                     AND sad_gen.key_nber = prov.key_nber(+)
                                     AND sad_gen.sad_num = prov.sad_num(+)
                                     AND sad_gen.key_year = cns.key_year(+)
                                     AND sad_gen.key_cuo = cns.key_cuo(+)
                                     AND sad_gen.key_dec IS NULL
                                     AND cns.key_dec(+) IS NULL
                                     AND sad_gen.key_nber = cns.key_nber(+)
                                     AND sad_gen.sad_num = cns.sad_num(+)
                                     AND sad_gen.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND sad_gen.key_year = occ.key_year
                                     AND sad_gen.key_cuo = occ.key_cuo
                                     AND sad_gen.key_dec IS NULL
                                     AND occ.key_dec IS NULL
                                     AND sad_gen.key_nber = occ.key_nber
                                     AND sad_gen.sad_num = occ.sad_num
                                     AND sad_gen.lst_ope = 'U'
                                     AND sad_gen.sad_flw = 1
                                     AND sad_gen.sad_reg_nber IS NOT NULL
                                     AND itm.key_year = vim.key_year
                                     AND itm.key_cuo = vim.key_cuo
                                     AND vim.key_dec IS NULL
                                     AND itm.key_nber = vim.key_nber
                                     AND itm.itm_nber = vim.itm_nber
                                     AND itm.sad_num = vim.sad_num
                                     AND itm.key_year = gaa.key_year
                                     AND itm.key_cuo = gaa.key_cuo
                                     AND gaa.key_dec IS NULL
                                     AND itm.key_nber = gaa.key_nber
                                     AND itm.itm_nber = gaa.itm_nber
                                     AND itm.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND itm.key_year = ivaa.key_year
                                     AND itm.key_cuo = ivaa.key_cuo
                                     AND ivaa.key_dec IS NULL
                                     AND itm.key_nber = ivaa.key_nber
                                     AND itm.itm_nber = ivaa.itm_nber
                                     AND itm.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND itm.key_year = icea.key_year(+)
                                     AND itm.key_cuo = icea.key_cuo(+)
                                     AND icea.key_dec(+) IS NULL
                                     AND itm.key_nber = icea.key_nber(+)
                                     AND itm.itm_nber = icea.itm_nber(+)
                                     AND itm.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND itm.key_year = iehda.key_year(+)
                                     AND itm.key_cuo = iehda.key_cuo(+)
                                     AND iehda.key_dec(+) IS NULL
                                     AND itm.key_nber = iehda.key_nber(+)
                                     AND itm.itm_nber = iehda.itm_nber(+)
                                     AND itm.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND itm.key_year = icda.key_year(+)
                                     AND itm.key_cuo = icda.key_cuo(+)
                                     AND icda.key_dec(+) IS NULL
                                     AND itm.key_nber = icda.key_nber(+)
                                     AND itm.itm_nber = icda.itm_nber(+)
                                     AND itm.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     AND unt.cuo_cod = sad_gen.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = sad_gen.key_year
                                     AND spyc.key_cuo(+) = sad_gen.key_cuo
                                     AND spyc.key_dec(+) IS NULL
                                     AND spyc.key_nber(+) = sad_gen.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = sad_gen.key_year
                                     AND spyp.key_cuo(+) = sad_gen.key_cuo
                                     AND spyp.key_dec(+) IS NULL
                                     AND spyp.key_nber(+) = sad_gen.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) =
                                            sad_gen.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND itm.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = sad_gen.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND sad_gen.sad_reg_year = alc.alc_gestion
                                     AND sad_gen.key_cuo = alc.alc_aduana
                                     AND sad_gen.sad_reg_serial = 'C'
                                     AND sad_gen.sad_reg_nber = alc.alc_numero
                                     AND alc.ctl_control_id = f1.ctl_control_id
                                     AND alc.alc_tipo_tramite = 'DUI'
                                     AND alc.alc_num = 0
                                     AND alc.alc_lstope = 'U'
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U') tbl
                ORDER BY   1,
                           2,
                           3,
                           4;
        ELSE
            OPEN cr FOR
                  SELECT   gestion,
                           tipo_control,
                           gerencia,
                           numero,
                           codigo_control,
                           fecha_orden,
                           origen_control,
                           identidad_doc,
                           identidad_nombre,
                           fiscalizador,
                           fiscalizador_nuevo,
                           supervisor,
                           supervisor_nuevo,
                           SUBSTR (tbl.ampli, 1, INSTR (tbl.ampli, '&') - 1)
                               codigo_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     1)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            2)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            1)
                                                   - 1)
                               fecha_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     2)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            3)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            2)
                                                   - 1)
                               nit_amp,
                           SUBSTR (tbl.ampli, INSTR (tbl.ampli,
                                                     '&',
                                                     1,
                                                     3)
                                              + 1,   INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            4)
                                                   - INSTR (tbl.ampli,
                                                            '&',
                                                            1,
                                                            3)
                                                   - 1)
                               nom_amp,
                           fecha_notificacion,
                           observacion_notificacion,
                           tipo_notificacion,
                           usuario_notificacion,
                           aduana,
                           declaracion,
                           fecha_registro,
                           item,
                           nandina,
                           descripcion,
                           patron,
                           canal,
                           fecha_pase,
                           nit_importador,
                           nombre_importador,
                           nit_declarante,
                           nombre_declarante,
                           direccion_proveedor,
                           proveedor,
                           localizacion,
                           pais_origen,
                           pais_uproced,
                           pto_pais_embarque,
                           total_peso_bruto,
                           total_peso_neto,
                           total_valor_fob,
                           total_flete,
                           total_seguro,
                           total_otros,
                           cifusd,
                           cifbs,
                           dec_ga,
                           dec_iva,
                           dec_ice,
                           dec_iehd,
                           dec_icd,
                           tot_trib,
                           estado_control,
                           SUBSTR (tbl.ilicitos,
                                   1,
                                   INSTR (tbl.ilicitos, '&') - 1)
                               omision_pago,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               contrav_adu,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               contrab_contrav,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        3)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - 1)
                               contrab_delito,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               defraudacion,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               otros,
                           fecha_est_con
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     pkg_reporte.devuelve_ampliatoria (
                                         f1.ctl_control_id,
                                            sad_gen.sad_reg_year
                                         || '/'
                                         || sad_gen.key_cuo
                                         || '/'
                                         || sad_gen.sad_reg_serial
                                         || '-'
                                         || sad_gen.sad_reg_nber)
                                         ampli,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con,
                                     sad_gen.key_cuo || ':' || unt.cuo_nam
                                         aduana,
                                        sad_gen.sad_reg_year
                                     || '/'
                                     || sad_gen.key_cuo
                                     || '/'
                                     || sad_gen.sad_reg_serial
                                     || '-'
                                     || sad_gen.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (sad_gen.sad_reg_date,
                                              'dd/mm/yyyy')
                                         fecha_registro,
                                     itm.itm_nber item,
                                     itm.saditm_hs_cod || itm.saditm_hsprec_cod
                                         nandina,
                                        itm.saditm_goods_desc1
                                     || ' '
                                     || itm.saditm_goods_desc2
                                     || ' '
                                     || itm.saditm_goods_desc3
                                         descripcion,
                                        sad_gen.sad_typ_dec
                                     || '-'
                                     || sad_gen.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (sad_gen.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 sad_gen.sad_consignee),
                                         ' ')
                                         nit_importador            -- campo 8a
                                                       ,
                                     DECODE (sad_gen.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador   -- campo 8b (19)e
                                                          ,
                                     NVL (sad_gen.key_dec, ' ') nit_declarante -- campo 14a
                                                                              ,
                                     dec.dec_nam nombre_declarante -- campo 14b (30)
                                                                  ,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (sad_gen.sad_loc_goods, ' ')
                                         localizacion              -- campo 30
                                                     ,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (sad_gen.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (sad_gen.sad_lop_cod, 1, 2)
                                         pto_pais_embarque         -- campo 27
                                                          ,
                                     NVL (itm.saditm_gross_mass, 0)
                                         total_peso_bruto     -- campo 6b (84)
                                                         ,
                                     NVL (itm.saditm_net_mass, 0)
                                         total_peso_neto      -- campo 6b (84)
                                                        ,
                                     vim.sad_iitminv_valc total_valor_fob,
                                     -- campo 22b (48)
                                     NVL (vim.sad_iitmefr_valc, 0) total_flete,
                                     NVL (vim.sad_iitmins_valc, 0) total_seguro,
                                     NVL (vim.sad_iitmotc_valc, 0) total_otros,
                                     NVL (
                                         ROUND (
                                             vim.sad_iitmcif_valn
                                             / vim.sad_iitminv_rat,
                                             2),
                                         0)
                                         cifusd,
                                     NVL (vim.sad_iitmcif_valn, 0) cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         tot_trib
                              FROM   ops$asy.sad_gen,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.undectab dec,
                                     ops$asy.sad_itm itm,
                                     ops$asy.sad_itm_vim vim,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icda,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1,
                                     fis_alcance alc
                             WHERE       sad_gen.key_year = prov.key_year(+)
                                     AND sad_gen.key_cuo = prov.key_cuo(+)
                                     AND sad_gen.key_dec = prov.key_dec(+)
                                     AND sad_gen.key_nber = prov.key_nber(+)
                                     AND sad_gen.sad_num = prov.sad_num(+)
                                     AND sad_gen.key_year = itm.key_year
                                     AND sad_gen.key_cuo = itm.key_cuo
                                     AND sad_gen.key_dec = itm.key_dec
                                     AND sad_gen.key_nber = itm.key_nber
                                     AND itm.sad_num = '0'
                                     AND sad_gen.key_year = cns.key_year(+)
                                     AND sad_gen.key_cuo = cns.key_cuo(+)
                                     AND sad_gen.key_dec = cns.key_dec(+)
                                     AND sad_gen.key_nber = cns.key_nber(+)
                                     AND sad_gen.sad_num = cns.sad_num(+)
                                     AND sad_gen.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND sad_gen.key_dec = dec.dec_cod
                                     AND dec.lst_ope = 'U'
                                     AND sad_gen.lst_ope = 'U'
                                     AND sad_gen.sad_num = 0
                                     AND sad_gen.sad_flw = 1
                                     AND sad_gen.sad_reg_nber IS NOT NULL
                                     AND itm.key_year = vim.key_year
                                     AND itm.key_cuo = vim.key_cuo
                                     AND itm.key_dec = vim.key_dec
                                     AND itm.key_nber = vim.key_nber
                                     AND itm.itm_nber = vim.itm_nber
                                     AND itm.sad_num = vim.sad_num
                                     AND itm.key_year = gaa.key_year
                                     AND itm.key_cuo = gaa.key_cuo
                                     AND itm.key_dec = gaa.key_dec
                                     AND itm.key_nber = gaa.key_nber
                                     AND itm.itm_nber = gaa.itm_nber
                                     AND itm.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND itm.key_year = ivaa.key_year
                                     AND itm.key_cuo = ivaa.key_cuo
                                     AND itm.key_dec = ivaa.key_dec
                                     AND itm.key_nber = ivaa.key_nber
                                     AND itm.itm_nber = ivaa.itm_nber
                                     AND itm.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND itm.key_year = icea.key_year(+)
                                     AND itm.key_cuo = icea.key_cuo(+)
                                     AND itm.key_dec = icea.key_dec(+)
                                     AND itm.key_nber = icea.key_nber(+)
                                     AND itm.itm_nber = icea.itm_nber(+)
                                     AND itm.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND itm.key_year = iehda.key_year(+)
                                     AND itm.key_cuo = iehda.key_cuo(+)
                                     AND itm.key_dec = iehda.key_dec(+)
                                     AND itm.key_nber = iehda.key_nber(+)
                                     AND itm.itm_nber = iehda.itm_nber(+)
                                     AND itm.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND itm.key_year = icda.key_year(+)
                                     AND itm.key_cuo = icda.key_cuo(+)
                                     AND itm.key_dec = icda.key_dec(+)
                                     AND itm.key_nber = icda.key_nber(+)
                                     AND itm.itm_nber = icda.itm_nber(+)
                                     AND itm.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     AND unt.cuo_cod = sad_gen.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = sad_gen.key_year
                                     AND spyc.key_cuo(+) = sad_gen.key_cuo
                                     AND spyc.key_dec(+) = sad_gen.key_dec
                                     AND spyc.key_nber(+) = sad_gen.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = sad_gen.key_year
                                     AND spyp.key_cuo(+) = sad_gen.key_cuo
                                     AND spyp.key_dec(+) = sad_gen.key_dec
                                     AND spyp.key_nber(+) = sad_gen.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) =
                                            sad_gen.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND itm.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = sad_gen.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND sad_gen.sad_reg_year = alc.alc_gestion
                                     AND sad_gen.key_cuo = alc.alc_aduana
                                     AND sad_gen.sad_reg_serial = 'C'
                                     AND sad_gen.sad_reg_nber = alc.alc_numero
                                     AND alc.ctl_control_id = f1.ctl_control_id
                                     AND alc.alc_tipo_tramite = 'DUI'
                                     AND alc.alc_num = 0
                                     AND alc.alc_lstope = 'U'
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND (f1.ctl_nit = prm_nit
                                          OR f1.ctl_ci = prm_nit)
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U'
                            UNION ALL
                            SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     pkg_reporte.devuelve_ampliatoria (
                                         f1.ctl_control_id,
                                            sad_gen.sad_reg_year
                                         || '/'
                                         || sad_gen.key_cuo
                                         || '/'
                                         || sad_gen.sad_reg_serial
                                         || '-'
                                         || sad_gen.sad_reg_nber)
                                         ampli,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con,
                                     sad_gen.key_cuo || ':' || unt.cuo_nam
                                         aduana,
                                        sad_gen.sad_reg_year
                                     || '/'
                                     || sad_gen.key_cuo
                                     || '/'
                                     || sad_gen.sad_reg_serial
                                     || '-'
                                     || sad_gen.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (sad_gen.sad_reg_date,
                                              'dd/mm/yyyy')
                                         fecha_registro,
                                     itm.itm_nber item,
                                     itm.saditm_hs_cod || itm.saditm_hsprec_cod
                                         nandina,
                                        itm.saditm_goods_desc1
                                     || ' '
                                     || itm.saditm_goods_desc2
                                     || ' '
                                     || itm.saditm_goods_desc3
                                         descripcion,
                                        sad_gen.sad_typ_dec
                                     || '-'
                                     || sad_gen.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (sad_gen.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 sad_gen.sad_consignee),
                                         ' ')
                                         nombre_importador         -- campo 8a
                                                          ,
                                     DECODE (sad_gen.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         dir_importador      -- campo 8b (19)e
                                                       ,
                                     NVL (sad_gen.key_dec, ' ') nit_declarante -- campo 14a
                                                                              ,
                                     occ.sad_dec_nam nombre_declarante,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (sad_gen.sad_loc_goods, ' ')
                                         localizacion              -- campo 30
                                                     ,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (sad_gen.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (sad_gen.sad_lop_cod, 1, 2)
                                         pto_pais_embarque         -- campo 27
                                                          ,
                                     NVL (itm.saditm_gross_mass, 0)
                                         total_peso_bruto     -- campo 6b (84)
                                                         ,
                                     NVL (itm.saditm_net_mass, 0)
                                         total_peso_neto      -- campo 6b (84)
                                                        ,
                                     vim.sad_iitminv_valc total_valor_fob, -- campo 22b (48)
                                     NVL (vim.sad_iitmefr_valc, 0) total_flete,
                                     NVL (vim.sad_iitmins_valc, 0) total_seguro,
                                     NVL (vim.sad_iitmotc_valc, 0) total_otros,
                                     NVL (
                                         ROUND (
                                             vim.sad_iitmcif_valn
                                             / vim.sad_iitminv_rat,
                                             2),
                                         0)
                                         cifusd,
                                     NVL (vim.sad_iitmcif_valn, 0) cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         tot_trib
                              FROM   ops$asy.sad_gen,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.sad_occ_dec occ,
                                     ops$asy.sad_itm itm,
                                     ops$asy.sad_itm_vim vim,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icda,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1,
                                     fis_alcance alc
                             WHERE       sad_gen.key_year = prov.key_year(+)
                                     AND sad_gen.key_cuo = prov.key_cuo(+)
                                     AND sad_gen.key_dec IS NULL
                                     AND sad_gen.sad_num = 0
                                     AND sad_gen.key_year = itm.key_year
                                     AND sad_gen.key_cuo = itm.key_cuo
                                     AND itm.key_dec IS NULL
                                     AND sad_gen.key_nber = itm.key_nber
                                     AND itm.sad_num = '0'
                                     AND prov.key_dec(+) IS NULL
                                     AND sad_gen.key_nber = prov.key_nber(+)
                                     AND sad_gen.sad_num = prov.sad_num(+)
                                     AND sad_gen.key_year = cns.key_year(+)
                                     AND sad_gen.key_cuo = cns.key_cuo(+)
                                     AND sad_gen.key_dec IS NULL
                                     AND cns.key_dec(+) IS NULL
                                     AND sad_gen.key_nber = cns.key_nber(+)
                                     AND sad_gen.sad_num = cns.sad_num(+)
                                     AND sad_gen.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND sad_gen.key_year = occ.key_year
                                     AND sad_gen.key_cuo = occ.key_cuo
                                     AND sad_gen.key_dec IS NULL
                                     AND occ.key_dec IS NULL
                                     AND sad_gen.key_nber = occ.key_nber
                                     AND sad_gen.sad_num = occ.sad_num
                                     AND sad_gen.lst_ope = 'U'
                                     AND sad_gen.sad_flw = 1
                                     AND sad_gen.sad_reg_nber IS NOT NULL
                                     AND itm.key_year = vim.key_year
                                     AND itm.key_cuo = vim.key_cuo
                                     AND vim.key_dec IS NULL
                                     AND itm.key_nber = vim.key_nber
                                     AND itm.itm_nber = vim.itm_nber
                                     AND itm.sad_num = vim.sad_num
                                     AND itm.key_year = gaa.key_year
                                     AND itm.key_cuo = gaa.key_cuo
                                     AND gaa.key_dec IS NULL
                                     AND itm.key_nber = gaa.key_nber
                                     AND itm.itm_nber = gaa.itm_nber
                                     AND itm.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND itm.key_year = ivaa.key_year
                                     AND itm.key_cuo = ivaa.key_cuo
                                     AND ivaa.key_dec IS NULL
                                     AND itm.key_nber = ivaa.key_nber
                                     AND itm.itm_nber = ivaa.itm_nber
                                     AND itm.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND itm.key_year = icea.key_year(+)
                                     AND itm.key_cuo = icea.key_cuo(+)
                                     AND icea.key_dec(+) IS NULL
                                     AND itm.key_nber = icea.key_nber(+)
                                     AND itm.itm_nber = icea.itm_nber(+)
                                     AND itm.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND itm.key_year = iehda.key_year(+)
                                     AND itm.key_cuo = iehda.key_cuo(+)
                                     AND iehda.key_dec(+) IS NULL
                                     AND itm.key_nber = iehda.key_nber(+)
                                     AND itm.itm_nber = iehda.itm_nber(+)
                                     AND itm.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND itm.key_year = icda.key_year(+)
                                     AND itm.key_cuo = icda.key_cuo(+)
                                     AND icda.key_dec(+) IS NULL
                                     AND itm.key_nber = icda.key_nber(+)
                                     AND itm.itm_nber = icda.itm_nber(+)
                                     AND itm.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     AND unt.cuo_cod = sad_gen.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = sad_gen.key_year
                                     AND spyc.key_cuo(+) = sad_gen.key_cuo
                                     AND spyc.key_dec(+) IS NULL
                                     AND spyc.key_nber(+) = sad_gen.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = sad_gen.key_year
                                     AND spyp.key_cuo(+) = sad_gen.key_cuo
                                     AND spyp.key_dec(+) IS NULL
                                     AND spyp.key_nber(+) = sad_gen.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) =
                                            sad_gen.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND itm.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = sad_gen.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND sad_gen.sad_reg_year = alc.alc_gestion
                                     AND sad_gen.key_cuo = alc.alc_aduana
                                     AND sad_gen.sad_reg_serial = 'C'
                                     AND sad_gen.sad_reg_nber = alc.alc_numero
                                     AND alc.ctl_control_id = f1.ctl_control_id
                                     AND alc.alc_tipo_tramite = 'DUI'
                                     AND alc.alc_num = 0
                                     AND alc.alc_lstope = 'U'
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND (f1.ctl_nit = prm_nit
                                          OR f1.ctl_ci = prm_nit)
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U') tbl
                ORDER BY   1,
                           2,
                           3,
                           4;
        END IF;

        RETURN cr;
    END;

    FUNCTION reporte_liquidacion_dui (prm_control    IN VARCHAR2,
                                      prm_gerencia   IN VARCHAR2,
                                      prm_fecini     IN VARCHAR2,
                                      prm_fecfin     IN VARCHAR2,
                                      prm_nit        IN VARCHAR2)
        RETURN cursortype
    IS
        cr           cursortype;
        v_gerencia   VARCHAR2 (5);
    BEGIN
        IF prm_gerencia = '%'
        THEN
            v_gerencia := '%';
        ELSE
            SELECT   a.ger_codigo
              INTO   v_gerencia
              FROM   fis_gerencia a
             WHERE   reg_cod = prm_gerencia AND reg_lstope = 'U';
        END IF;

        IF prm_nit IS NULL
        THEN
            OPEN cr FOR
                  SELECT   t.gestion,
                           t.tipo_control,
                           t.gerencia,
                           t.numero,
                           t.codigo_control,
                           t.fecha_orden,
                           t.aduana,
                           t.declaracion,
                           t.fecha_registro,
                           t.patron,
                           t.canal,
                           t.fecha_pase,
                           t.nit_importador,
                           t.nombre_importador,
                           t.nit_declarante,
                           t.nombre_declarante,
                           t.direccion_proveedor,
                           t.proveedor,
                           t.localizacion,
                           t.pais_origen,
                           t.pais_uproced,
                           t.pto_pais_embarque,
                           SUM (t.total_peso_bruto),
                           SUM (t.total_peso_neto),
                           SUM (t.dec_fob),
                           SUM (t.dec_flete),
                           SUM (t.dec_seguro),
                           SUM (t.dec_otros),
                           SUM (t.dec_cifusd),
                           SUM (t.dec_cifbs),
                           SUM (t.dec_ga),
                           SUM (t.dec_iva),
                           SUM (t.dec_ice),
                           SUM (t.dec_iehd),
                           SUM (t.dec_icd),
                           SUM (t.dec_total),
                           SUM (t.enc_fob),
                           SUM (t.enc_flete),
                           SUM (t.enc_seguro),
                           SUM (t.enc_otros),
                           SUM (t.enc_cifusd),
                           SUM (t.enc_cifbs),
                           SUM (t.to_ga),
                           SUM (t.to_iva),
                           SUM (t.to_ice),
                           SUM (t.to_iehd),
                           SUM (t.to_icd),
                             SUM (t.to_ga)
                           + SUM (t.to_iva)
                           + SUM (t.to_ice)
                           + SUM (t.to_iehd)
                           + SUM (t.to_icd)
                               to_total,
                           ROUND (
                                 SUM (t.to_ga)
                               + SUM (t.to_iva)
                               + SUM (t.to_ice)
                               + SUM (t.to_iehd)
                               + SUM (t.to_icd)
                               + SUM (t.ga_dt)
                               + SUM (t.iva_dt)
                               + SUM (t.ice_dt)
                               + SUM (t.iehd_dt)
                               + SUM (t.icd_dt),
                               2)
                               adeudo_totalbs,
                           ROUND (
                               ( (  SUM (t.to_ga)
                                  + SUM (t.to_iva)
                                  + SUM (t.to_ice)
                                  + SUM (t.to_iehd)
                                  + SUM (t.to_icd))
                                / t.tc_ufvhoy)
                               * t.tc_ufvfecvenc,
                               2)
                               sancion,
                           --SUBSTR(tbl.multas,1,INSTR(tbl.ampli,'&')-1) sancion,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    1)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           2)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           1)
                                                  - 1)
                               multacadui,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    2)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           3)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           2)
                                                  - 1)
                               multacaorden,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    3)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           4)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           3)
                                                  - 1)
                               multacc,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    4)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           5)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           4)
                                                  - 1)
                               multadef,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    5)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           6)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           5)
                                                  - 1)
                               multacd,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    6)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           7)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           6)
                                                  - 1)
                               total_det,
                           t.fec_liq,
                           t.ufv_liq,
                           t.estado_control
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     u.key_cuo || ':' || unt.cuo_nam aduana,
                                        u.sad_reg_year
                                     || '/'
                                     || u.key_cuo
                                     || '/'
                                     || u.sad_reg_serial
                                     || '-'
                                     || u.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy')
                                         fecha_registro,
                                     ia.itm_nber item,
                                     ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                         nandina,
                                        ia.saditm_goods_desc1
                                     || ' '
                                     || ia.saditm_goods_desc2
                                     || ' '
                                     || ia.saditm_goods_desc3
                                         descripcion,
                                     u.sad_typ_dec || '-' || u.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (u.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 u.sad_consignee),
                                         ' ')
                                         nit_importador            -- campo 8a
                                                       ,
                                     DECODE (u.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador   -- campo 8b (19)e
                                                          ,
                                     NVL (u.key_dec, ' ') nit_declarante -- campo 14a
                                                                        ,
                                     dec.dec_nam nombre_declarante -- campo 14b (30)
                                                                  ,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (u.sad_loc_goods, ' ') localizacion -- campo 30
                                                                            ,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (u.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (u.sad_lop_cod, 1, 2)
                                         pto_pais_embarque,
                                     NVL (ia.saditm_gross_mass, 0)
                                         total_peso_bruto,
                                     NVL (ia.saditm_net_mass, 0)
                                         total_peso_neto,
                                     va.sad_iitminv_valc dec_fob,
                                     va.sad_iitmefr_valc dec_flete,
                                     va.sad_iitmins_valc dec_seguro,
                                     va.sad_iitmotc_valc dec_otros,
                                     ROUND (
                                         va.sad_iitmcif_valn
                                         / va.sad_iitminv_rat,
                                         2)
                                         dec_cifusd,
                                     va.sad_iitmcif_valn dec_cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         dec_total,
                                     vu.sad_iitminv_valc enc_fob,
                                     vu.sad_iitmefr_valc enc_flete,
                                     vu.sad_iitmins_valc enc_seguro,
                                     vu.sad_iitmotc_valc enc_otros,
                                     ROUND (
                                         vu.sad_iitmcif_valn
                                         / vu.sad_iitminv_rat,
                                         2)
                                         enc_cifusd,
                                     vu.sad_iitmcif_valn enc_cifbs,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'UFV')
                                         tc_ufvfecvenc,
                                     pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                             'UFV')
                                         tc_ufvhoy,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount
                                         to_ga,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount
                                         to_iva,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0)
                                         to_ice,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0)
                                         to_iehd,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0)
                                         to_icd,
                                     TRUNC (SYSDATE)
                                     - pkg_reporte.fecha_vencimiento (
                                           u.key_cuo,
                                           TO_CHAR (a.sad_reg_date,
                                                    'dd/mm/yyyy'))
                                         dias,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'TPR')
                                         tc_tprfecvenc,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             gau.saditm_tax_amount
                                             - gaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         ga_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             ivau.saditm_tax_amount
                                             - ivaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         iva_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iceu.saditm_tax_amount, 0)
                                             - NVL (icea.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         ice_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iehdu.saditm_tax_amount, 0)
                                             - NVL (iehda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         iehd_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (icdu.saditm_tax_amount, 0)
                                             - NVL (icda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         icd_dt,
                                     NVL (
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         '-')
                                         fec_liq,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         pkg_reporte.tipocambio (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'UFV'))
                                         ufv_liq,
                                     e1.est_estado estado_control,
                                     pkg_reporte.dev_totales_multas_dui (
                                         f1.ctl_control_id,
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         u.key_year,
                                         u.key_cuo,
                                         u.key_dec,
                                         u.key_nber)
                                         multas
                              FROM   ops$asy.sad_gen u,
                                     ops$asy.sad_gen a,
                                     ops$asy.sad_itm iu,
                                     ops$asy.sad_itm ia,
                                     ops$asy.sad_tax gau,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivau,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax iceu,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehdu,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icdu,
                                     ops$asy.sad_tax icda,
                                     ops$asy.sad_itm_vim vu,
                                     ops$asy.sad_itm_vim va,
                                     fis_alcance f,
                                     fis_notificacion n,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.undectab dec,
                                     fis_estado e1,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_conclusion con
                             WHERE       u.key_year = a.key_year
                                     AND u.key_cuo = a.key_cuo
                                     AND u.key_dec IS NOT NULL
                                     AND u.key_dec = a.key_dec
                                     AND u.key_nber = a.key_nber
                                     AND a.sad_num =
                                            NVL (
                                                (SELECT   MIN (x.sad_pst_num)
                                                   FROM   ops$asy.sad_gen x
                                                  WHERE   x.key_cuo = u.key_cuo
                                                          AND x.sad_reg_year =
                                                                 u.sad_reg_year
                                                          AND x.sad_reg_serial =
                                                                 u.sad_reg_serial
                                                          AND x.sad_reg_nber =
                                                                 u.sad_reg_nber
                                                          AND x.sad_pst_dat >=
                                                                 n.not_fecha_notificacion),
                                                0)
                                     AND u.sad_flw = 1
                                     AND u.sad_num = 0
                                     AND u.lst_ope = 'U'
                                     AND u.key_year = iu.key_year
                                     AND u.key_cuo = iu.key_cuo
                                     AND u.key_dec = iu.key_dec
                                     AND u.key_nber = iu.key_nber
                                     AND u.sad_num = iu.sad_num
                                     AND a.key_year = ia.key_year
                                     AND a.key_cuo = ia.key_cuo
                                     AND a.key_dec = ia.key_dec
                                     AND a.key_nber = ia.key_nber
                                     AND a.sad_num = ia.sad_num
                                     AND iu.key_year = ia.key_year
                                     AND iu.key_cuo = ia.key_cuo
                                     AND iu.key_dec = ia.key_dec
                                     AND iu.key_nber = ia.key_nber
                                     AND iu.itm_nber = ia.itm_nber
                                     --tributo GA
                                     AND iu.key_year = gau.key_year
                                     AND iu.key_cuo = gau.key_cuo
                                     AND iu.key_dec = gau.key_dec
                                     AND iu.key_nber = gau.key_nber
                                     AND iu.itm_nber = gau.itm_nber
                                     AND iu.sad_num = gau.sad_num
                                     AND gau.saditm_tax_code = 'GA'
                                     AND ia.key_year = gaa.key_year
                                     AND ia.key_cuo = gaa.key_cuo
                                     AND ia.key_dec = gaa.key_dec
                                     AND ia.key_nber = gaa.key_nber
                                     AND ia.itm_nber = gaa.itm_nber
                                     AND ia.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND iu.key_year = ivau.key_year
                                     AND iu.key_cuo = ivau.key_cuo
                                     AND iu.key_dec = ivau.key_dec
                                     AND iu.key_nber = ivau.key_nber
                                     AND iu.itm_nber = ivau.itm_nber
                                     AND iu.sad_num = ivau.sad_num
                                     AND ivau.saditm_tax_code = 'IVA'
                                     AND ia.key_year = ivaa.key_year
                                     AND ia.key_cuo = ivaa.key_cuo
                                     AND ia.key_dec = ivaa.key_dec
                                     AND ia.key_nber = ivaa.key_nber
                                     AND ia.itm_nber = ivaa.itm_nber
                                     AND ia.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND iu.key_year = iceu.key_year(+)
                                     AND iu.key_cuo = iceu.key_cuo(+)
                                     AND iu.key_dec = iceu.key_dec(+)
                                     AND iu.key_nber = iceu.key_nber(+)
                                     AND iu.itm_nber = iceu.itm_nber(+)
                                     AND iu.sad_num = iceu.sad_num(+)
                                     AND iceu.saditm_tax_code(+) = 'ICE'
                                     AND ia.key_year = icea.key_year(+)
                                     AND ia.key_cuo = icea.key_cuo(+)
                                     AND ia.key_dec = icea.key_dec(+)
                                     AND ia.key_nber = icea.key_nber(+)
                                     AND ia.itm_nber = icea.itm_nber(+)
                                     AND ia.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND iu.key_year = iehdu.key_year(+)
                                     AND iu.key_cuo = iehdu.key_cuo(+)
                                     AND iu.key_dec = iehdu.key_dec(+)
                                     AND iu.key_nber = iehdu.key_nber(+)
                                     AND iu.itm_nber = iehdu.itm_nber(+)
                                     AND iu.sad_num = iehdu.sad_num(+)
                                     AND iehdu.saditm_tax_code(+) = 'IEHD'
                                     AND ia.key_year = iehda.key_year(+)
                                     AND ia.key_cuo = iehda.key_cuo(+)
                                     AND ia.key_dec = iehda.key_dec(+)
                                     AND ia.key_nber = iehda.key_nber(+)
                                     AND ia.itm_nber = iehda.itm_nber(+)
                                     AND ia.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND iu.key_year = icdu.key_year(+)
                                     AND iu.key_cuo = icdu.key_cuo(+)
                                     AND iu.key_dec = icdu.key_dec(+)
                                     AND iu.key_nber = icdu.key_nber(+)
                                     AND iu.itm_nber = icdu.itm_nber(+)
                                     AND iu.sad_num = icdu.sad_num(+)
                                     AND icdu.saditm_tax_code(+) = 'ICD'
                                     AND ia.key_year = icda.key_year(+)
                                     AND ia.key_cuo = icda.key_cuo(+)
                                     AND ia.key_dec = icda.key_dec(+)
                                     AND ia.key_nber = icda.key_nber(+)
                                     AND ia.itm_nber = icda.itm_nber(+)
                                     AND ia.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     --para los valores FOB FLETE SEGURO OTROS CIF
                                     AND iu.key_year = vu.key_year
                                     AND iu.key_cuo = vu.key_cuo
                                     AND iu.key_dec = vu.key_dec
                                     AND iu.key_nber = vu.key_nber
                                     AND iu.itm_nber = vu.itm_nber
                                     AND iu.sad_num = vu.sad_num
                                     AND ia.key_year = va.key_year
                                     AND ia.key_cuo = va.key_cuo
                                     AND ia.key_dec = va.key_dec
                                     AND ia.key_nber = va.key_nber
                                     AND ia.itm_nber = va.itm_nber
                                     AND ia.sad_num = va.sad_num
                                     AND unt.cuo_cod = u.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = u.key_year
                                     AND spyc.key_cuo(+) = u.key_cuo
                                     AND spyc.key_dec(+) = u.key_dec
                                     AND spyc.key_nber(+) = u.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = u.key_year
                                     AND spyp.key_cuo(+) = u.key_cuo
                                     AND spyp.key_dec(+) = u.key_dec
                                     AND spyp.key_nber(+) = u.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) = u.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND iu.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = u.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND u.key_dec = dec.dec_cod
                                     AND dec.lst_ope = 'U'
                                     AND u.key_year = cns.key_year(+)
                                     AND u.key_cuo = cns.key_cuo(+)
                                     AND u.key_dec = cns.key_dec(+)
                                     AND u.key_nber = cns.key_nber(+)
                                     AND u.sad_num = cns.sad_num(+)
                                     AND u.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND u.key_year = prov.key_year(+)
                                     AND u.key_cuo = prov.key_cuo(+)
                                     AND u.key_dec = prov.key_dec(+)
                                     AND u.key_nber = prov.key_nber(+)
                                     AND u.sad_num = prov.sad_num(+)
                                     --para recuperar informacion del control
                                     AND f.alc_tipo_tramite = 'DUI'
                                     AND f.alc_gestion = u.sad_reg_year
                                     AND f.alc_aduana = u.key_cuo
                                     AND u.sad_reg_serial = 'C'
                                     AND f.alc_numero = u.sad_reg_nber
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND f.alc_num = 0
                                     AND f.alc_lstope = 'U'
                                     AND f.ctl_control_id = n.ctl_control_id
                                     AND n.not_num = 0
                                     AND n.not_lstope = 'U'
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_control_id = f.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U'
                            UNION ALL
                            SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     u.key_cuo || ':' || unt.cuo_nam aduana,
                                        u.sad_reg_year
                                     || '/'
                                     || u.key_cuo
                                     || '/'
                                     || u.sad_reg_serial
                                     || '-'
                                     || u.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy')
                                         fecha_registro,
                                     ia.itm_nber item,
                                     ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                         nandina,
                                        ia.saditm_goods_desc1
                                     || ' '
                                     || ia.saditm_goods_desc2
                                     || ' '
                                     || ia.saditm_goods_desc3
                                         descripcion,
                                     u.sad_typ_dec || '-' || u.sad_typ_proc
                                         patron,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (u.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 u.sad_consignee),
                                         ' ')
                                         nit_importador,
                                     DECODE (u.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador,
                                     NVL (u.key_dec, ' ') nit_declarante,
                                     occ.sad_dec_nam nombre_declarante,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor,
                                     prov.sad_exp_nam proveedor,
                                     NVL (u.sad_loc_goods, ' ') localizacion,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (u.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (u.sad_lop_cod, 1, 2)
                                         pto_pais_embarque,
                                     NVL (ia.saditm_gross_mass, 0)
                                         total_peso_bruto,
                                     NVL (ia.saditm_net_mass, 0)
                                         total_peso_neto,
                                     va.sad_iitminv_valc dec_fob,
                                     va.sad_iitmefr_valc dec_flete,
                                     va.sad_iitmins_valc dec_seguro,
                                     va.sad_iitmotc_valc dec_otros,
                                     ROUND (
                                         va.sad_iitmcif_valn
                                         / va.sad_iitminv_rat,
                                         2)
                                         dec_cifusd,
                                     va.sad_iitmcif_valn dec_cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         dec_total,
                                     vu.sad_iitminv_valc enc_fob,
                                     vu.sad_iitmefr_valc enc_flete,
                                     vu.sad_iitmins_valc enc_seguro,
                                     vu.sad_iitmotc_valc enc_otros,
                                     ROUND (
                                         vu.sad_iitmcif_valn
                                         / vu.sad_iitminv_rat,
                                         2)
                                         enc_cifusd,
                                     vu.sad_iitmcif_valn enc_cifbs,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'UFV')
                                         tc_ufvfecvenc,
                                     pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                             'UFV')
                                         tc_ufvhoy,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount
                                         to_ga,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount
                                         to_iva,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0)
                                         to_ice,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0)
                                         to_iehd,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0)
                                         to_icd,
                                     TRUNC (SYSDATE)
                                     - pkg_reporte.fecha_vencimiento (
                                           u.key_cuo,
                                           TO_CHAR (a.sad_reg_date,
                                                    'dd/mm/yyyy'))
                                         dias,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'TPR')
                                         tc_tprfecvenc,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             gau.saditm_tax_amount
                                             - gaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         ga_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             ivau.saditm_tax_amount
                                             - ivaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         iva_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iceu.saditm_tax_amount, 0)
                                             - NVL (icea.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         ice_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iehdu.saditm_tax_amount, 0)
                                             - NVL (iehda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         iehd_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (icdu.saditm_tax_amount, 0)
                                             - NVL (icda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         icd_dt,
                                     NVL (
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 NULL,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         '-')
                                         fec_liq,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         pkg_reporte.tipocambio (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 NULL,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'UFV'))
                                         ufv_liq,
                                     e1.est_estado estado_control,
                                     pkg_reporte.dev_totales_multas_dui (
                                         f1.ctl_control_id,
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 NULL,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         u.key_year,
                                         u.key_cuo,
                                         NULL,
                                         u.key_nber)
                                         multas
                              FROM   ops$asy.sad_gen u,
                                     ops$asy.sad_gen a,
                                     ops$asy.sad_itm iu,
                                     ops$asy.sad_itm ia,
                                     ops$asy.sad_tax gau,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivau,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax iceu,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehdu,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icdu,
                                     ops$asy.sad_tax icda,
                                     ops$asy.sad_itm_vim vu,
                                     ops$asy.sad_itm_vim va,
                                     fis_alcance f,
                                     fis_notificacion n,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.sad_occ_dec occ,
                                     fis_estado e1,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_conclusion con
                             WHERE       u.key_year = a.key_year
                                     AND u.key_cuo = a.key_cuo
                                     AND u.key_dec IS NULL
                                     AND a.key_dec IS NULL
                                     AND u.key_nber = a.key_nber
                                     AND a.sad_num =
                                            NVL (
                                                (SELECT   MIN (x.sad_pst_num)
                                                   FROM   ops$asy.sad_gen x
                                                  WHERE   x.key_cuo = u.key_cuo
                                                          AND x.sad_reg_year =
                                                                 u.sad_reg_year
                                                          AND x.sad_reg_serial =
                                                                 u.sad_reg_serial
                                                          AND x.sad_reg_nber =
                                                                 u.sad_reg_nber
                                                          AND x.sad_pst_dat >=
                                                                 n.not_fecha_notificacion),
                                                0)
                                     AND u.sad_flw = 1
                                     AND u.sad_num = 0
                                     AND u.lst_ope = 'U'
                                     AND u.key_year = iu.key_year
                                     AND u.key_cuo = iu.key_cuo
                                     AND iu.key_dec IS NULL
                                     AND u.key_nber = iu.key_nber
                                     AND u.sad_num = iu.sad_num
                                     AND a.key_year = ia.key_year
                                     AND a.key_cuo = ia.key_cuo
                                     AND ia.key_dec IS NULL
                                     AND a.key_nber = ia.key_nber
                                     AND a.sad_num = ia.sad_num
                                     AND iu.key_year = ia.key_year
                                     AND iu.key_cuo = ia.key_cuo
                                     AND iu.key_nber = ia.key_nber
                                     AND iu.itm_nber = ia.itm_nber
                                     --tributo GA
                                     AND iu.key_year = gau.key_year
                                     AND iu.key_cuo = gau.key_cuo
                                     AND gau.key_dec IS NULL
                                     AND iu.key_nber = gau.key_nber
                                     AND iu.itm_nber = gau.itm_nber
                                     AND iu.sad_num = gau.sad_num
                                     AND gau.saditm_tax_code = 'GA'
                                     AND ia.key_year = gaa.key_year
                                     AND ia.key_cuo = gaa.key_cuo
                                     AND gaa.key_dec IS NULL
                                     AND ia.key_nber = gaa.key_nber
                                     AND ia.itm_nber = gaa.itm_nber
                                     AND ia.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND iu.key_year = ivau.key_year
                                     AND iu.key_cuo = ivau.key_cuo
                                     AND ivau.key_dec IS NULL
                                     AND iu.key_nber = ivau.key_nber
                                     AND iu.itm_nber = ivau.itm_nber
                                     AND iu.sad_num = ivau.sad_num
                                     AND ivau.saditm_tax_code = 'IVA'
                                     AND ia.key_year = ivaa.key_year
                                     AND ia.key_cuo = ivaa.key_cuo
                                     AND ivaa.key_dec IS NULL
                                     AND ia.key_nber = ivaa.key_nber
                                     AND ia.itm_nber = ivaa.itm_nber
                                     AND ia.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND iu.key_year = iceu.key_year(+)
                                     AND iu.key_cuo = iceu.key_cuo(+)
                                     AND iceu.key_dec(+) IS NULL
                                     AND iu.key_nber = iceu.key_nber(+)
                                     AND iu.itm_nber = iceu.itm_nber(+)
                                     AND iu.sad_num = iceu.sad_num(+)
                                     AND iceu.saditm_tax_code(+) = 'ICE'
                                     AND ia.key_year = icea.key_year(+)
                                     AND ia.key_cuo = icea.key_cuo(+)
                                     AND icea.key_dec(+) IS NULL
                                     AND ia.key_nber = icea.key_nber(+)
                                     AND ia.itm_nber = icea.itm_nber(+)
                                     AND ia.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND iu.key_year = iehdu.key_year(+)
                                     AND iu.key_cuo = iehdu.key_cuo(+)
                                     AND iehdu.key_dec(+) IS NULL
                                     AND iu.key_nber = iehdu.key_nber(+)
                                     AND iu.itm_nber = iehdu.itm_nber(+)
                                     AND iu.sad_num = iehdu.sad_num(+)
                                     AND iehdu.saditm_tax_code(+) = 'IEHD'
                                     AND ia.key_year = iehda.key_year(+)
                                     AND ia.key_cuo = iehda.key_cuo(+)
                                     AND iehda.key_dec(+) IS NULL
                                     AND ia.key_nber = iehda.key_nber(+)
                                     AND ia.itm_nber = iehda.itm_nber(+)
                                     AND ia.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND iu.key_year = icdu.key_year(+)
                                     AND iu.key_cuo = icdu.key_cuo(+)
                                     AND icdu.key_dec(+) IS NULL
                                     AND iu.key_nber = icdu.key_nber(+)
                                     AND iu.itm_nber = icdu.itm_nber(+)
                                     AND iu.sad_num = icdu.sad_num(+)
                                     AND icdu.saditm_tax_code(+) = 'ICD'
                                     AND ia.key_year = icda.key_year(+)
                                     AND ia.key_cuo = icda.key_cuo(+)
                                     AND icda.key_dec(+) IS NULL
                                     AND ia.key_nber = icda.key_nber(+)
                                     AND ia.itm_nber = icda.itm_nber(+)
                                     AND ia.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     --para los valores FOB FLETE SEGURO OTROS CIF
                                     AND iu.key_year = vu.key_year
                                     AND iu.key_cuo = vu.key_cuo
                                     AND vu.key_dec IS NULL
                                     AND iu.key_nber = vu.key_nber
                                     AND iu.itm_nber = vu.itm_nber
                                     AND iu.sad_num = vu.sad_num
                                     AND ia.key_year = va.key_year
                                     AND ia.key_cuo = va.key_cuo
                                     AND va.key_dec IS NULL
                                     AND ia.key_nber = va.key_nber
                                     AND ia.itm_nber = va.itm_nber
                                     AND ia.sad_num = va.sad_num
                                     AND unt.cuo_cod = u.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = u.key_year
                                     AND spyc.key_cuo(+) = u.key_cuo
                                     AND spyc.key_dec(+) IS NULL
                                     AND spyc.key_nber(+) = u.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = u.key_year
                                     AND spyp.key_cuo(+) = u.key_cuo
                                     AND spyp.key_dec(+) IS NULL
                                     AND spyp.key_nber(+) = u.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) = u.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND iu.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = u.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND occ.key_dec IS NULL
                                     AND u.key_nber = occ.key_nber
                                     AND u.sad_num = occ.sad_num
                                     AND u.key_year = cns.key_year(+)
                                     AND u.key_cuo = cns.key_cuo(+)
                                     AND cns.key_dec(+) IS NULL
                                     AND u.key_nber = cns.key_nber(+)
                                     AND u.sad_num = cns.sad_num(+)
                                     AND u.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND u.key_year = prov.key_year(+)
                                     AND u.key_cuo = prov.key_cuo(+)
                                     AND prov.key_dec(+) IS NULL
                                     AND u.key_nber = prov.key_nber(+)
                                     AND u.sad_num = prov.sad_num(+)
                                     --para recuperar informacion del control
                                     AND f.alc_tipo_tramite = 'DUI'
                                     AND f.alc_gestion = u.sad_reg_year
                                     AND f.alc_aduana = u.key_cuo
                                     AND u.sad_reg_serial = 'C'
                                     AND f.alc_numero = u.sad_reg_nber
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND f.alc_num = 0
                                     AND f.alc_lstope = 'U'
                                     AND f.ctl_control_id = n.ctl_control_id
                                     AND n.not_num = 0
                                     AND n.not_lstope = 'U'
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_control_id = f.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U') t
                GROUP BY   t.gestion,
                           t.tipo_control,
                           t.gerencia,
                           t.numero,
                           t.codigo_control,
                           t.fecha_orden,
                           t.aduana,
                           t.declaracion,
                           t.fecha_registro,
                           t.patron,
                           t.canal,
                           t.fecha_pase,
                           t.nit_importador,
                           t.nombre_importador,
                           t.nit_declarante,
                           t.nombre_declarante,
                           t.direccion_proveedor,
                           t.proveedor,
                           t.localizacion,
                           t.pais_origen,
                           t.pais_uproced,
                           t.pto_pais_embarque,
                           t.tc_ufvhoy,
                           t.tc_ufvfecvenc,
                           t.fec_liq,
                           t.ufv_liq,
                           t.estado_control,
                           t.multas
                ORDER BY   1,
                           2,
                           3,
                           4;
        ELSE
            OPEN cr FOR
                  SELECT   t.gestion,
                           t.tipo_control,
                           t.gerencia,
                           t.numero,
                           t.codigo_control,
                           t.fecha_orden,
                           t.aduana,
                           t.declaracion,
                           t.fecha_registro,
                           t.patron,
                           t.canal,
                           t.fecha_pase,
                           t.nit_importador,
                           t.nombre_importador,
                           t.nit_declarante,
                           t.nombre_declarante,
                           t.direccion_proveedor,
                           t.proveedor,
                           t.localizacion,
                           t.pais_origen,
                           t.pais_uproced,
                           t.pto_pais_embarque,
                           SUM (t.total_peso_bruto),
                           SUM (t.total_peso_neto),
                           SUM (t.dec_fob),
                           SUM (t.dec_flete),
                           SUM (t.dec_seguro),
                           SUM (t.dec_otros),
                           SUM (t.dec_cifusd),
                           SUM (t.dec_cifbs),
                           SUM (t.dec_ga),
                           SUM (t.dec_iva),
                           SUM (t.dec_ice),
                           SUM (t.dec_iehd),
                           SUM (t.dec_icd),
                           SUM (t.dec_total),
                           SUM (t.enc_fob),
                           SUM (t.enc_flete),
                           SUM (t.enc_seguro),
                           SUM (t.enc_otros),
                           SUM (t.enc_cifusd),
                           SUM (t.enc_cifbs),
                           SUM (t.to_ga),
                           SUM (t.to_iva),
                           SUM (t.to_ice),
                           SUM (t.to_iehd),
                           SUM (t.to_icd),
                             SUM (t.to_ga)
                           + SUM (t.to_iva)
                           + SUM (t.to_ice)
                           + SUM (t.to_iehd)
                           + SUM (t.to_icd)
                               to_total,
                           ROUND (
                                 SUM (t.to_ga)
                               + SUM (t.to_iva)
                               + SUM (t.to_ice)
                               + SUM (t.to_iehd)
                               + SUM (t.to_icd)
                               + SUM (t.ga_dt)
                               + SUM (t.iva_dt)
                               + SUM (t.ice_dt)
                               + SUM (t.iehd_dt)
                               + SUM (t.icd_dt),
                               2)
                               adeudo_totalbs,
                           ROUND (
                               ( (  SUM (t.to_ga)
                                  + SUM (t.to_iva)
                                  + SUM (t.to_ice)
                                  + SUM (t.to_iehd)
                                  + SUM (t.to_icd))
                                / t.tc_ufvhoy)
                               * t.tc_ufvfecvenc,
                               2)
                               sancion,
                           --SUBSTR(tbl.multas,1,INSTR(tbl.ampli,'&')-1) sancion,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    1)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           2)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           1)
                                                  - 1)
                               multacadui,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    2)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           3)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           2)
                                                  - 1)
                               multacaorden,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    3)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           4)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           3)
                                                  - 1)
                               multacc,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    4)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           5)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           4)
                                                  - 1)
                               multadef,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    5)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           6)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           5)
                                                  - 1)
                               multacd,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    6)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           7)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           6)
                                                  - 1)
                               total_det,
                           t.fec_liq,
                           t.ufv_liq,
                           t.estado_control
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     u.key_cuo || ':' || unt.cuo_nam aduana,
                                        u.sad_reg_year
                                     || '/'
                                     || u.key_cuo
                                     || '/'
                                     || u.sad_reg_serial
                                     || '-'
                                     || u.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy')
                                         fecha_registro,
                                     ia.itm_nber item,
                                     ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                         nandina,
                                        ia.saditm_goods_desc1
                                     || ' '
                                     || ia.saditm_goods_desc2
                                     || ' '
                                     || ia.saditm_goods_desc3
                                         descripcion,
                                     u.sad_typ_dec || '-' || u.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (u.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 u.sad_consignee),
                                         ' ')
                                         nit_importador            -- campo 8a
                                                       ,
                                     DECODE (u.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador   -- campo 8b (19)e
                                                          ,
                                     NVL (u.key_dec, ' ') nit_declarante -- campo 14a
                                                                        ,
                                     dec.dec_nam nombre_declarante -- campo 14b (30)
                                                                  ,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (u.sad_loc_goods, ' ') localizacion -- campo 30
                                                                            ,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (u.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (u.sad_lop_cod, 1, 2)
                                         pto_pais_embarque,
                                     NVL (ia.saditm_gross_mass, 0)
                                         total_peso_bruto,
                                     NVL (ia.saditm_net_mass, 0)
                                         total_peso_neto,
                                     va.sad_iitminv_valc dec_fob,
                                     va.sad_iitmefr_valc dec_flete,
                                     va.sad_iitmins_valc dec_seguro,
                                     va.sad_iitmotc_valc dec_otros,
                                     ROUND (
                                         va.sad_iitmcif_valn
                                         / va.sad_iitminv_rat,
                                         2)
                                         dec_cifusd,
                                     va.sad_iitmcif_valn dec_cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         dec_total,
                                     vu.sad_iitminv_valc enc_fob,
                                     vu.sad_iitmefr_valc enc_flete,
                                     vu.sad_iitmins_valc enc_seguro,
                                     vu.sad_iitmotc_valc enc_otros,
                                     ROUND (
                                         vu.sad_iitmcif_valn
                                         / vu.sad_iitminv_rat,
                                         2)
                                         enc_cifusd,
                                     vu.sad_iitmcif_valn enc_cifbs,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'UFV')
                                         tc_ufvfecvenc,
                                     pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                             'UFV')
                                         tc_ufvhoy,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount
                                         to_ga,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount
                                         to_iva,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0)
                                         to_ice,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0)
                                         to_iehd,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0)
                                         to_icd,
                                     TRUNC (SYSDATE)
                                     - pkg_reporte.fecha_vencimiento (
                                           u.key_cuo,
                                           TO_CHAR (a.sad_reg_date,
                                                    'dd/mm/yyyy'))
                                         dias,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'TPR')
                                         tc_tprfecvenc,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             gau.saditm_tax_amount
                                             - gaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         ga_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             ivau.saditm_tax_amount
                                             - ivaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         iva_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iceu.saditm_tax_amount, 0)
                                             - NVL (icea.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         ice_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iehdu.saditm_tax_amount, 0)
                                             - NVL (iehda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         iehd_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (icdu.saditm_tax_amount, 0)
                                             - NVL (icda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         icd_dt,
                                     NVL (
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         '-')
                                         fec_liq,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         pkg_reporte.tipocambio (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'UFV'))
                                         ufv_liq,
                                     e1.est_estado estado_control,
                                     pkg_reporte.dev_totales_multas_dui (
                                         f1.ctl_control_id,
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         u.key_year,
                                         u.key_cuo,
                                         u.key_dec,
                                         u.key_nber)
                                         multas
                              FROM   ops$asy.sad_gen u,
                                     ops$asy.sad_gen a,
                                     ops$asy.sad_itm iu,
                                     ops$asy.sad_itm ia,
                                     ops$asy.sad_tax gau,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivau,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax iceu,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehdu,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icdu,
                                     ops$asy.sad_tax icda,
                                     ops$asy.sad_itm_vim vu,
                                     ops$asy.sad_itm_vim va,
                                     fis_alcance f,
                                     fis_notificacion n,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.undectab dec,
                                     fis_estado e1,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_conclusion con
                             WHERE       u.key_year = a.key_year
                                     AND u.key_cuo = a.key_cuo
                                     AND u.key_dec IS NOT NULL
                                     AND u.key_dec = a.key_dec
                                     AND u.key_nber = a.key_nber
                                     AND a.sad_num =
                                            NVL (
                                                (SELECT   MIN (x.sad_pst_num)
                                                   FROM   ops$asy.sad_gen x
                                                  WHERE   x.key_cuo = u.key_cuo
                                                          AND x.sad_reg_year =
                                                                 u.sad_reg_year
                                                          AND x.sad_reg_serial =
                                                                 u.sad_reg_serial
                                                          AND x.sad_reg_nber =
                                                                 u.sad_reg_nber
                                                          AND x.sad_pst_dat >=
                                                                 n.not_fecha_notificacion),
                                                0)
                                     AND u.sad_flw = 1
                                     AND u.sad_num = 0
                                     AND u.lst_ope = 'U'
                                     AND u.key_year = iu.key_year
                                     AND u.key_cuo = iu.key_cuo
                                     AND u.key_dec = iu.key_dec
                                     AND u.key_nber = iu.key_nber
                                     AND u.sad_num = iu.sad_num
                                     AND a.key_year = ia.key_year
                                     AND a.key_cuo = ia.key_cuo
                                     AND a.key_dec = ia.key_dec
                                     AND a.key_nber = ia.key_nber
                                     AND a.sad_num = ia.sad_num
                                     AND iu.key_year = ia.key_year
                                     AND iu.key_cuo = ia.key_cuo
                                     AND iu.key_dec = ia.key_dec
                                     AND iu.key_nber = ia.key_nber
                                     AND iu.itm_nber = ia.itm_nber
                                     --tributo GA
                                     AND iu.key_year = gau.key_year
                                     AND iu.key_cuo = gau.key_cuo
                                     AND iu.key_dec = gau.key_dec
                                     AND iu.key_nber = gau.key_nber
                                     AND iu.itm_nber = gau.itm_nber
                                     AND iu.sad_num = gau.sad_num
                                     AND gau.saditm_tax_code = 'GA'
                                     AND ia.key_year = gaa.key_year
                                     AND ia.key_cuo = gaa.key_cuo
                                     AND ia.key_dec = gaa.key_dec
                                     AND ia.key_nber = gaa.key_nber
                                     AND ia.itm_nber = gaa.itm_nber
                                     AND ia.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND iu.key_year = ivau.key_year
                                     AND iu.key_cuo = ivau.key_cuo
                                     AND iu.key_dec = ivau.key_dec
                                     AND iu.key_nber = ivau.key_nber
                                     AND iu.itm_nber = ivau.itm_nber
                                     AND iu.sad_num = ivau.sad_num
                                     AND ivau.saditm_tax_code = 'IVA'
                                     AND ia.key_year = ivaa.key_year
                                     AND ia.key_cuo = ivaa.key_cuo
                                     AND ia.key_dec = ivaa.key_dec
                                     AND ia.key_nber = ivaa.key_nber
                                     AND ia.itm_nber = ivaa.itm_nber
                                     AND ia.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND iu.key_year = iceu.key_year(+)
                                     AND iu.key_cuo = iceu.key_cuo(+)
                                     AND iu.key_dec = iceu.key_dec(+)
                                     AND iu.key_nber = iceu.key_nber(+)
                                     AND iu.itm_nber = iceu.itm_nber(+)
                                     AND iu.sad_num = iceu.sad_num(+)
                                     AND iceu.saditm_tax_code(+) = 'ICE'
                                     AND ia.key_year = icea.key_year(+)
                                     AND ia.key_cuo = icea.key_cuo(+)
                                     AND ia.key_dec = icea.key_dec(+)
                                     AND ia.key_nber = icea.key_nber(+)
                                     AND ia.itm_nber = icea.itm_nber(+)
                                     AND ia.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND iu.key_year = iehdu.key_year(+)
                                     AND iu.key_cuo = iehdu.key_cuo(+)
                                     AND iu.key_dec = iehdu.key_dec(+)
                                     AND iu.key_nber = iehdu.key_nber(+)
                                     AND iu.itm_nber = iehdu.itm_nber(+)
                                     AND iu.sad_num = iehdu.sad_num(+)
                                     AND iehdu.saditm_tax_code(+) = 'IEHD'
                                     AND ia.key_year = iehda.key_year(+)
                                     AND ia.key_cuo = iehda.key_cuo(+)
                                     AND ia.key_dec = iehda.key_dec(+)
                                     AND ia.key_nber = iehda.key_nber(+)
                                     AND ia.itm_nber = iehda.itm_nber(+)
                                     AND ia.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND iu.key_year = icdu.key_year(+)
                                     AND iu.key_cuo = icdu.key_cuo(+)
                                     AND iu.key_dec = icdu.key_dec(+)
                                     AND iu.key_nber = icdu.key_nber(+)
                                     AND iu.itm_nber = icdu.itm_nber(+)
                                     AND iu.sad_num = icdu.sad_num(+)
                                     AND icdu.saditm_tax_code(+) = 'ICD'
                                     AND ia.key_year = icda.key_year(+)
                                     AND ia.key_cuo = icda.key_cuo(+)
                                     AND ia.key_dec = icda.key_dec(+)
                                     AND ia.key_nber = icda.key_nber(+)
                                     AND ia.itm_nber = icda.itm_nber(+)
                                     AND ia.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     --para los valores FOB FLETE SEGURO OTROS CIF
                                     AND iu.key_year = vu.key_year
                                     AND iu.key_cuo = vu.key_cuo
                                     AND iu.key_dec = vu.key_dec
                                     AND iu.key_nber = vu.key_nber
                                     AND iu.itm_nber = vu.itm_nber
                                     AND iu.sad_num = vu.sad_num
                                     AND ia.key_year = va.key_year
                                     AND ia.key_cuo = va.key_cuo
                                     AND ia.key_dec = va.key_dec
                                     AND ia.key_nber = va.key_nber
                                     AND ia.itm_nber = va.itm_nber
                                     AND ia.sad_num = va.sad_num
                                     AND unt.cuo_cod = u.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = u.key_year
                                     AND spyc.key_cuo(+) = u.key_cuo
                                     AND spyc.key_dec(+) = u.key_dec
                                     AND spyc.key_nber(+) = u.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = u.key_year
                                     AND spyp.key_cuo(+) = u.key_cuo
                                     AND spyp.key_dec(+) = u.key_dec
                                     AND spyp.key_nber(+) = u.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) = u.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND iu.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = u.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND u.key_dec = dec.dec_cod
                                     AND dec.lst_ope = 'U'
                                     AND u.key_year = cns.key_year(+)
                                     AND u.key_cuo = cns.key_cuo(+)
                                     AND u.key_dec = cns.key_dec(+)
                                     AND u.key_nber = cns.key_nber(+)
                                     AND u.sad_num = cns.sad_num(+)
                                     AND u.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND u.key_year = prov.key_year(+)
                                     AND u.key_cuo = prov.key_cuo(+)
                                     AND u.key_dec = prov.key_dec(+)
                                     AND u.key_nber = prov.key_nber(+)
                                     AND u.sad_num = prov.sad_num(+)
                                     --para recuperar informacion del control
                                     AND f.alc_tipo_tramite = 'DUI'
                                     AND f.alc_gestion = u.sad_reg_year
                                     AND f.alc_aduana = u.key_cuo
                                     AND u.sad_reg_serial = 'C'
                                     AND f.alc_numero = u.sad_reg_nber
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND (f1.ctl_nit = prm_nit
                                          OR f1.ctl_ci = prm_nit)
                                     AND f.alc_num = 0
                                     AND f.alc_lstope = 'U'
                                     AND f.ctl_control_id = n.ctl_control_id
                                     AND n.not_num = 0
                                     AND n.not_lstope = 'U'
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_control_id = f.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U'
                            UNION ALL
                            SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     u.key_cuo || ':' || unt.cuo_nam aduana,
                                        u.sad_reg_year
                                     || '/'
                                     || u.key_cuo
                                     || '/'
                                     || u.sad_reg_serial
                                     || '-'
                                     || u.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy')
                                         fecha_registro,
                                     ia.itm_nber item,
                                     ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                         nandina,
                                        ia.saditm_goods_desc1
                                     || ' '
                                     || ia.saditm_goods_desc2
                                     || ' '
                                     || ia.saditm_goods_desc3
                                         descripcion,
                                     u.sad_typ_dec || '-' || u.sad_typ_proc
                                         patron,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (u.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 u.sad_consignee),
                                         ' ')
                                         nit_importador,
                                     DECODE (u.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador,
                                     NVL (u.key_dec, ' ') nit_declarante,
                                     occ.sad_dec_nam nombre_declarante,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor,
                                     prov.sad_exp_nam proveedor,
                                     NVL (u.sad_loc_goods, ' ') localizacion,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (u.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (u.sad_lop_cod, 1, 2)
                                         pto_pais_embarque,
                                     NVL (ia.saditm_gross_mass, 0)
                                         total_peso_bruto,
                                     NVL (ia.saditm_net_mass, 0)
                                         total_peso_neto,
                                     va.sad_iitminv_valc dec_fob,
                                     va.sad_iitmefr_valc dec_flete,
                                     va.sad_iitmins_valc dec_seguro,
                                     va.sad_iitmotc_valc dec_otros,
                                     ROUND (
                                         va.sad_iitmcif_valn
                                         / va.sad_iitminv_rat,
                                         2)
                                         dec_cifusd,
                                     va.sad_iitmcif_valn dec_cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         dec_total,
                                     vu.sad_iitminv_valc enc_fob,
                                     vu.sad_iitmefr_valc enc_flete,
                                     vu.sad_iitmins_valc enc_seguro,
                                     vu.sad_iitmotc_valc enc_otros,
                                     ROUND (
                                         vu.sad_iitmcif_valn
                                         / vu.sad_iitminv_rat,
                                         2)
                                         enc_cifusd,
                                     vu.sad_iitmcif_valn enc_cifbs,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'UFV')
                                         tc_ufvfecvenc,
                                     pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                             'UFV')
                                         tc_ufvhoy,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount
                                         to_ga,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount
                                         to_iva,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0)
                                         to_ice,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0)
                                         to_iehd,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0)
                                         to_icd,
                                     TRUNC (SYSDATE)
                                     - pkg_reporte.fecha_vencimiento (
                                           u.key_cuo,
                                           TO_CHAR (a.sad_reg_date,
                                                    'dd/mm/yyyy'))
                                         dias,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'TPR')
                                         tc_tprfecvenc,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             gau.saditm_tax_amount
                                             - gaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         ga_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             ivau.saditm_tax_amount
                                             - ivaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         iva_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iceu.saditm_tax_amount, 0)
                                             - NVL (icea.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         ice_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iehdu.saditm_tax_amount, 0)
                                             - NVL (iehda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         iehd_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (icdu.saditm_tax_amount, 0)
                                             - NVL (icda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         icd_dt,
                                     NVL (
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 NULL,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         '-')
                                         fec_liq,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         pkg_reporte.tipocambio (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 NULL,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'UFV'))
                                         ufv_liq,
                                     e1.est_estado estado_control,
                                     pkg_reporte.dev_totales_multas_dui (
                                         f1.ctl_control_id,
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 NULL,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         u.key_year,
                                         u.key_cuo,
                                         NULL,
                                         u.key_nber)
                                         multas
                              FROM   ops$asy.sad_gen u,
                                     ops$asy.sad_gen a,
                                     ops$asy.sad_itm iu,
                                     ops$asy.sad_itm ia,
                                     ops$asy.sad_tax gau,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivau,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax iceu,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehdu,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icdu,
                                     ops$asy.sad_tax icda,
                                     ops$asy.sad_itm_vim vu,
                                     ops$asy.sad_itm_vim va,
                                     fis_alcance f,
                                     fis_notificacion n,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.sad_occ_dec occ,
                                     fis_estado e1,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_conclusion con
                             WHERE       u.key_year = a.key_year
                                     AND u.key_cuo = a.key_cuo
                                     AND u.key_dec IS NULL
                                     AND a.key_dec IS NULL
                                     AND u.key_nber = a.key_nber
                                     AND a.sad_num =
                                            NVL (
                                                (SELECT   MIN (x.sad_pst_num)
                                                   FROM   ops$asy.sad_gen x
                                                  WHERE   x.key_cuo = u.key_cuo
                                                          AND x.sad_reg_year =
                                                                 u.sad_reg_year
                                                          AND x.sad_reg_serial =
                                                                 u.sad_reg_serial
                                                          AND x.sad_reg_nber =
                                                                 u.sad_reg_nber
                                                          AND x.sad_pst_dat >=
                                                                 n.not_fecha_notificacion),
                                                0)
                                     AND u.sad_flw = 1
                                     AND u.sad_num = 0
                                     AND u.lst_ope = 'U'
                                     AND u.key_year = iu.key_year
                                     AND u.key_cuo = iu.key_cuo
                                     AND iu.key_dec IS NULL
                                     AND u.key_nber = iu.key_nber
                                     AND u.sad_num = iu.sad_num
                                     AND a.key_year = ia.key_year
                                     AND a.key_cuo = ia.key_cuo
                                     AND ia.key_dec IS NULL
                                     AND a.key_nber = ia.key_nber
                                     AND a.sad_num = ia.sad_num
                                     AND iu.key_year = ia.key_year
                                     AND iu.key_cuo = ia.key_cuo
                                     AND iu.key_nber = ia.key_nber
                                     AND iu.itm_nber = ia.itm_nber
                                     --tributo GA
                                     AND iu.key_year = gau.key_year
                                     AND iu.key_cuo = gau.key_cuo
                                     AND gau.key_dec IS NULL
                                     AND iu.key_nber = gau.key_nber
                                     AND iu.itm_nber = gau.itm_nber
                                     AND iu.sad_num = gau.sad_num
                                     AND gau.saditm_tax_code = 'GA'
                                     AND ia.key_year = gaa.key_year
                                     AND ia.key_cuo = gaa.key_cuo
                                     AND gaa.key_dec IS NULL
                                     AND ia.key_nber = gaa.key_nber
                                     AND ia.itm_nber = gaa.itm_nber
                                     AND ia.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND iu.key_year = ivau.key_year
                                     AND iu.key_cuo = ivau.key_cuo
                                     AND ivau.key_dec IS NULL
                                     AND iu.key_nber = ivau.key_nber
                                     AND iu.itm_nber = ivau.itm_nber
                                     AND iu.sad_num = ivau.sad_num
                                     AND ivau.saditm_tax_code = 'IVA'
                                     AND ia.key_year = ivaa.key_year
                                     AND ia.key_cuo = ivaa.key_cuo
                                     AND ivaa.key_dec IS NULL
                                     AND ia.key_nber = ivaa.key_nber
                                     AND ia.itm_nber = ivaa.itm_nber
                                     AND ia.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND iu.key_year = iceu.key_year(+)
                                     AND iu.key_cuo = iceu.key_cuo(+)
                                     AND iceu.key_dec(+) IS NULL
                                     AND iu.key_nber = iceu.key_nber(+)
                                     AND iu.itm_nber = iceu.itm_nber(+)
                                     AND iu.sad_num = iceu.sad_num(+)
                                     AND iceu.saditm_tax_code(+) = 'ICE'
                                     AND ia.key_year = icea.key_year(+)
                                     AND ia.key_cuo = icea.key_cuo(+)
                                     AND icea.key_dec(+) IS NULL
                                     AND ia.key_nber = icea.key_nber(+)
                                     AND ia.itm_nber = icea.itm_nber(+)
                                     AND ia.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND iu.key_year = iehdu.key_year(+)
                                     AND iu.key_cuo = iehdu.key_cuo(+)
                                     AND iehdu.key_dec(+) IS NULL
                                     AND iu.key_nber = iehdu.key_nber(+)
                                     AND iu.itm_nber = iehdu.itm_nber(+)
                                     AND iu.sad_num = iehdu.sad_num(+)
                                     AND iehdu.saditm_tax_code(+) = 'IEHD'
                                     AND ia.key_year = iehda.key_year(+)
                                     AND ia.key_cuo = iehda.key_cuo(+)
                                     AND iehda.key_dec(+) IS NULL
                                     AND ia.key_nber = iehda.key_nber(+)
                                     AND ia.itm_nber = iehda.itm_nber(+)
                                     AND ia.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND iu.key_year = icdu.key_year(+)
                                     AND iu.key_cuo = icdu.key_cuo(+)
                                     AND icdu.key_dec(+) IS NULL
                                     AND iu.key_nber = icdu.key_nber(+)
                                     AND iu.itm_nber = icdu.itm_nber(+)
                                     AND iu.sad_num = icdu.sad_num(+)
                                     AND icdu.saditm_tax_code(+) = 'ICD'
                                     AND ia.key_year = icda.key_year(+)
                                     AND ia.key_cuo = icda.key_cuo(+)
                                     AND icda.key_dec(+) IS NULL
                                     AND ia.key_nber = icda.key_nber(+)
                                     AND ia.itm_nber = icda.itm_nber(+)
                                     AND ia.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     --para los valores FOB FLETE SEGURO OTROS CIF
                                     AND iu.key_year = vu.key_year
                                     AND iu.key_cuo = vu.key_cuo
                                     AND vu.key_dec IS NULL
                                     AND iu.key_nber = vu.key_nber
                                     AND iu.itm_nber = vu.itm_nber
                                     AND iu.sad_num = vu.sad_num
                                     AND ia.key_year = va.key_year
                                     AND ia.key_cuo = va.key_cuo
                                     AND va.key_dec IS NULL
                                     AND ia.key_nber = va.key_nber
                                     AND ia.itm_nber = va.itm_nber
                                     AND ia.sad_num = va.sad_num
                                     AND unt.cuo_cod = u.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = u.key_year
                                     AND spyc.key_cuo(+) = u.key_cuo
                                     AND spyc.key_dec(+) IS NULL
                                     AND spyc.key_nber(+) = u.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = u.key_year
                                     AND spyp.key_cuo(+) = u.key_cuo
                                     AND spyp.key_dec(+) IS NULL
                                     AND spyp.key_nber(+) = u.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) = u.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND iu.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = u.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND occ.key_dec IS NULL
                                     AND u.key_nber = occ.key_nber
                                     AND u.sad_num = occ.sad_num
                                     AND u.key_year = cns.key_year(+)
                                     AND u.key_cuo = cns.key_cuo(+)
                                     AND cns.key_dec(+) IS NULL
                                     AND u.key_nber = cns.key_nber(+)
                                     AND u.sad_num = cns.sad_num(+)
                                     AND u.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND u.key_year = prov.key_year(+)
                                     AND u.key_cuo = prov.key_cuo(+)
                                     AND prov.key_dec(+) IS NULL
                                     AND u.key_nber = prov.key_nber(+)
                                     AND u.sad_num = prov.sad_num(+)
                                     --para recuperar informacion del control
                                     AND f.alc_tipo_tramite = 'DUI'
                                     AND f.alc_gestion = u.sad_reg_year
                                     AND f.alc_aduana = u.key_cuo
                                     AND u.sad_reg_serial = 'C'
                                     AND f.alc_numero = u.sad_reg_nber
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND (f1.ctl_nit = prm_nit
                                          OR f1.ctl_ci = prm_nit)
                                     AND f.alc_num = 0
                                     AND f.alc_lstope = 'U'
                                     AND f.ctl_control_id = n.ctl_control_id
                                     AND n.not_num = 0
                                     AND n.not_lstope = 'U'
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_control_id = f.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U') t
                GROUP BY   t.gestion,
                           t.tipo_control,
                           t.gerencia,
                           t.numero,
                           t.codigo_control,
                           t.fecha_orden,
                           t.aduana,
                           t.declaracion,
                           t.fecha_registro,
                           t.patron,
                           t.canal,
                           t.fecha_pase,
                           t.nit_importador,
                           t.nombre_importador,
                           t.nit_declarante,
                           t.nombre_declarante,
                           t.direccion_proveedor,
                           t.proveedor,
                           t.localizacion,
                           t.pais_origen,
                           t.pais_uproced,
                           t.pto_pais_embarque,
                           t.tc_ufvhoy,
                           t.tc_ufvfecvenc,
                           t.fec_liq,
                           t.ufv_liq,
                           t.estado_control,
                           t.multas
                ORDER BY   1,
                           2,
                           3,
                           4;
        END IF;

        RETURN cr;
    END;

    FUNCTION reporte_liquidacion_item (prm_control    IN VARCHAR2,
                                       prm_gerencia   IN VARCHAR2,
                                       prm_fecini     IN VARCHAR2,
                                       prm_fecfin     IN VARCHAR2,
                                       prm_nit        IN VARCHAR2)
        RETURN cursortype
    IS
        cr           cursortype;
        v_gerencia   VARCHAR2 (5);
    BEGIN
        IF prm_gerencia = '%'
        THEN
            v_gerencia := '%';
        ELSE
            SELECT   a.ger_codigo
              INTO   v_gerencia
              FROM   fis_gerencia a
             WHERE   reg_cod = prm_gerencia AND reg_lstope = 'U';
        END IF;

        IF prm_nit IS NULL
        THEN
            OPEN cr FOR
                  SELECT   t.gestion,
                           t.tipo_control,
                           t.gerencia,
                           t.numero,
                           t.codigo_control,
                           t.fecha_orden,
                           t.aduana,
                           t.declaracion,
                           t.fecha_registro,
                           t.item,
                           t.nandina,
                           t.descripcion,
                           t.patron,
                           t.canal,
                           t.fecha_pase,
                           t.nit_importador,
                           t.nombre_importador,
                           t.nit_declarante,
                           t.nombre_declarante,
                           t.direccion_proveedor,
                           t.proveedor,
                           t.localizacion,
                           t.pais_origen,
                           t.pais_uproced,
                           t.pto_pais_embarque,
                           t.total_peso_bruto,
                           t.total_peso_neto,
                           t.dec_fob,
                           t.dec_flete,
                           t.dec_seguro,
                           t.dec_otros,
                           t.dec_cifusd,
                           t.dec_cifbs,
                           t.dec_ga,
                           t.dec_iva,
                           t.dec_ice,
                           t.dec_iehd,
                           t.dec_icd,
                           t.dec_total,
                           t.enc_fob,
                           t.enc_flete,
                           t.enc_seguro,
                           t.enc_otros,
                           t.enc_cifusd,
                           t.enc_cifbs,
                           t.to_ga,
                           t.to_iva,
                           t.to_ice,
                           t.to_iehd,
                           t.to_icd,
                           t.to_ga + t.to_iva + t.to_ice + t.to_iehd + t.to_icd
                               to_total,
                           ROUND (
                                 t.to_ga
                               + t.to_iva
                               + t.to_ice
                               + t.to_iehd
                               + t.to_icd
                               + t.ga_dt
                               + t.iva_dt
                               + t.ice_dt
                               + t.iehd_dt
                               + t.icd_dt,
                               2)
                               adeudo_totalbs,
                           ROUND (
                               ( (  t.to_ga
                                  + t.to_iva
                                  + t.to_ice
                                  + t.to_iehd
                                  + t.to_icd)
                                / t.tc_ufvhoy)
                               * t.tc_ufvfecvenc,
                               2)
                               sancion,
                           --SUBSTR(tbl.multas,1,INSTR(tbl.ampli,'&')-1) sancion,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    1)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           2)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           1)
                                                  - 1)
                               multacadui,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    2)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           3)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           2)
                                                  - 1)
                               multacaorden,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    3)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           4)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           3)
                                                  - 1)
                               multacc,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    4)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           5)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           4)
                                                  - 1)
                               multadef,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    5)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           6)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           5)
                                                  - 1)
                               multacd,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    6)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           7)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           6)
                                                  - 1)
                               total_det,
                           t.fec_liq,
                           t.ufv_liq,
                           t.estado_control
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     u.key_cuo || ':' || unt.cuo_nam aduana,
                                        u.sad_reg_year
                                     || '/'
                                     || u.key_cuo
                                     || '/'
                                     || u.sad_reg_serial
                                     || '-'
                                     || u.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy')
                                         fecha_registro,
                                     ia.itm_nber item,
                                     ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                         nandina,
                                        ia.saditm_goods_desc1
                                     || ' '
                                     || ia.saditm_goods_desc2
                                     || ' '
                                     || ia.saditm_goods_desc3
                                         descripcion,
                                     u.sad_typ_dec || '-' || u.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (u.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 u.sad_consignee),
                                         ' ')
                                         nit_importador            -- campo 8a
                                                       ,
                                     DECODE (u.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador   -- campo 8b (19)e
                                                          ,
                                     NVL (u.key_dec, ' ') nit_declarante -- campo 14a
                                                                        ,
                                     dec.dec_nam nombre_declarante -- campo 14b (30)
                                                                  ,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (u.sad_loc_goods, ' ') localizacion -- campo 30
                                                                            ,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (u.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (u.sad_lop_cod, 1, 2)
                                         pto_pais_embarque,
                                     NVL (ia.saditm_gross_mass, 0)
                                         total_peso_bruto,
                                     NVL (ia.saditm_net_mass, 0)
                                         total_peso_neto,
                                     va.sad_iitminv_valc dec_fob,
                                     va.sad_iitmefr_valc dec_flete,
                                     va.sad_iitmins_valc dec_seguro,
                                     va.sad_iitmotc_valc dec_otros,
                                     ROUND (
                                         va.sad_iitmcif_valn
                                         / va.sad_iitminv_rat,
                                         2)
                                         dec_cifusd,
                                     va.sad_iitmcif_valn dec_cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         dec_total,
                                     vu.sad_iitminv_valc enc_fob,
                                     vu.sad_iitmefr_valc enc_flete,
                                     vu.sad_iitmins_valc enc_seguro,
                                     vu.sad_iitmotc_valc enc_otros,
                                     ROUND (
                                         vu.sad_iitmcif_valn
                                         / vu.sad_iitminv_rat,
                                         2)
                                         enc_cifusd,
                                     vu.sad_iitmcif_valn enc_cifbs,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'UFV')
                                         tc_ufvfecvenc,
                                     pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                             'UFV')
                                         tc_ufvhoy,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount
                                         to_ga,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount
                                         to_iva,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0)
                                         to_ice,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0)
                                         to_iehd,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0)
                                         to_icd,
                                     TRUNC (SYSDATE)
                                     - pkg_reporte.fecha_vencimiento (
                                           u.key_cuo,
                                           TO_CHAR (a.sad_reg_date,
                                                    'dd/mm/yyyy'))
                                         dias,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'TPR')
                                         tc_tprfecvenc,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             gau.saditm_tax_amount
                                             - gaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         ga_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             ivau.saditm_tax_amount
                                             - ivaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         iva_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iceu.saditm_tax_amount, 0)
                                             - NVL (icea.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         ice_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iehdu.saditm_tax_amount, 0)
                                             - NVL (iehda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         iehd_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_cuo,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (icdu.saditm_tax_amount, 0)
                                             - NVL (icda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         icd_dt,
                                     NVL (
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         '-')
                                         fec_liq,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         pkg_reporte.tipocambio (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'UFV'))
                                         ufv_liq,
                                     e1.est_estado estado_control,
                                     pkg_reporte.dev_totales_multas_item (
                                         f1.ctl_control_id,
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         u.key_year,
                                         u.key_cuo,
                                         u.key_dec,
                                         u.key_nber,
                                         iu.itm_nber)
                                         multas
                              FROM   ops$asy.sad_gen u,
                                     ops$asy.sad_gen a,
                                     ops$asy.sad_itm iu,
                                     ops$asy.sad_itm ia,
                                     ops$asy.sad_tax gau,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivau,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax iceu,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehdu,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icdu,
                                     ops$asy.sad_tax icda,
                                     ops$asy.sad_itm_vim vu,
                                     ops$asy.sad_itm_vim va,
                                     fis_alcance f,
                                     fis_notificacion n,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.undectab dec,
                                     fis_estado e1,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_conclusion con
                             WHERE       u.key_year = a.key_year
                                     AND u.key_cuo = a.key_cuo
                                     AND u.key_dec IS NOT NULL
                                     AND u.key_dec = a.key_dec
                                     AND u.key_nber = a.key_nber
                                     AND a.sad_num =
                                            NVL (
                                                (SELECT   MIN (x.sad_pst_num)
                                                   FROM   ops$asy.sad_gen x
                                                  WHERE   x.key_cuo = u.key_cuo
                                                          AND x.sad_reg_year =
                                                                 u.sad_reg_year
                                                          AND x.sad_reg_serial =
                                                                 u.sad_reg_serial
                                                          AND x.sad_reg_nber =
                                                                 u.sad_reg_nber
                                                          AND x.sad_pst_dat >=
                                                                 n.not_fecha_notificacion),
                                                0)
                                     AND u.sad_flw = 1
                                     AND u.sad_num = 0
                                     AND u.lst_ope = 'U'
                                     AND u.key_year = iu.key_year
                                     AND u.key_cuo = iu.key_cuo
                                     AND u.key_dec = iu.key_dec
                                     AND u.key_nber = iu.key_nber
                                     AND u.sad_num = iu.sad_num
                                     AND a.key_year = ia.key_year
                                     AND a.key_cuo = ia.key_cuo
                                     AND a.key_dec = ia.key_dec
                                     AND a.key_nber = ia.key_nber
                                     AND a.sad_num = ia.sad_num
                                     AND iu.key_year = ia.key_year
                                     AND iu.key_cuo = ia.key_cuo
                                     AND iu.key_dec = ia.key_dec
                                     AND iu.key_nber = ia.key_nber
                                     AND iu.itm_nber = ia.itm_nber
                                     --tributo GA
                                     AND iu.key_year = gau.key_year
                                     AND iu.key_cuo = gau.key_cuo
                                     AND iu.key_dec = gau.key_dec
                                     AND iu.key_nber = gau.key_nber
                                     AND iu.itm_nber = gau.itm_nber
                                     AND iu.sad_num = gau.sad_num
                                     AND gau.saditm_tax_code = 'GA'
                                     AND ia.key_year = gaa.key_year
                                     AND ia.key_cuo = gaa.key_cuo
                                     AND ia.key_dec = gaa.key_dec
                                     AND ia.key_nber = gaa.key_nber
                                     AND ia.itm_nber = gaa.itm_nber
                                     AND ia.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND iu.key_year = ivau.key_year
                                     AND iu.key_cuo = ivau.key_cuo
                                     AND iu.key_dec = ivau.key_dec
                                     AND iu.key_nber = ivau.key_nber
                                     AND iu.itm_nber = ivau.itm_nber
                                     AND iu.sad_num = ivau.sad_num
                                     AND ivau.saditm_tax_code = 'IVA'
                                     AND ia.key_year = ivaa.key_year
                                     AND ia.key_cuo = ivaa.key_cuo
                                     AND ia.key_dec = ivaa.key_dec
                                     AND ia.key_nber = ivaa.key_nber
                                     AND ia.itm_nber = ivaa.itm_nber
                                     AND ia.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND iu.key_year = iceu.key_year(+)
                                     AND iu.key_cuo = iceu.key_cuo(+)
                                     AND iu.key_dec = iceu.key_dec(+)
                                     AND iu.key_nber = iceu.key_nber(+)
                                     AND iu.itm_nber = iceu.itm_nber(+)
                                     AND iu.sad_num = iceu.sad_num(+)
                                     AND iceu.saditm_tax_code(+) = 'ICE'
                                     AND ia.key_year = icea.key_year(+)
                                     AND ia.key_cuo = icea.key_cuo(+)
                                     AND ia.key_dec = icea.key_dec(+)
                                     AND ia.key_nber = icea.key_nber(+)
                                     AND ia.itm_nber = icea.itm_nber(+)
                                     AND ia.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND iu.key_year = iehdu.key_year(+)
                                     AND iu.key_cuo = iehdu.key_cuo(+)
                                     AND iu.key_dec = iehdu.key_dec(+)
                                     AND iu.key_nber = iehdu.key_nber(+)
                                     AND iu.itm_nber = iehdu.itm_nber(+)
                                     AND iu.sad_num = iehdu.sad_num(+)
                                     AND iehdu.saditm_tax_code(+) = 'IEHD'
                                     AND ia.key_year = iehda.key_year(+)
                                     AND ia.key_cuo = iehda.key_cuo(+)
                                     AND ia.key_dec = iehda.key_dec(+)
                                     AND ia.key_nber = iehda.key_nber(+)
                                     AND ia.itm_nber = iehda.itm_nber(+)
                                     AND ia.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND iu.key_year = icdu.key_year(+)
                                     AND iu.key_cuo = icdu.key_cuo(+)
                                     AND iu.key_dec = icdu.key_dec(+)
                                     AND iu.key_nber = icdu.key_nber(+)
                                     AND iu.itm_nber = icdu.itm_nber(+)
                                     AND iu.sad_num = icdu.sad_num(+)
                                     AND icdu.saditm_tax_code(+) = 'ICD'
                                     AND ia.key_year = icda.key_year(+)
                                     AND ia.key_cuo = icda.key_cuo(+)
                                     AND ia.key_dec = icda.key_dec(+)
                                     AND ia.key_nber = icda.key_nber(+)
                                     AND ia.itm_nber = icda.itm_nber(+)
                                     AND ia.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     --para los valores FOB FLETE SEGURO OTROS CIF
                                     AND iu.key_year = vu.key_year
                                     AND iu.key_cuo = vu.key_cuo
                                     AND iu.key_dec = vu.key_dec
                                     AND iu.key_nber = vu.key_nber
                                     AND iu.itm_nber = vu.itm_nber
                                     AND iu.sad_num = vu.sad_num
                                     AND ia.key_year = va.key_year
                                     AND ia.key_cuo = va.key_cuo
                                     AND ia.key_dec = va.key_dec
                                     AND ia.key_nber = va.key_nber
                                     AND ia.itm_nber = va.itm_nber
                                     AND ia.sad_num = va.sad_num
                                     AND unt.cuo_cod = u.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = u.key_year
                                     AND spyc.key_cuo(+) = u.key_cuo
                                     AND spyc.key_dec(+) = u.key_dec
                                     AND spyc.key_nber(+) = u.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = u.key_year
                                     AND spyp.key_cuo(+) = u.key_cuo
                                     AND spyp.key_dec(+) = u.key_dec
                                     AND spyp.key_nber(+) = u.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) = u.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND iu.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = u.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND u.key_dec = dec.dec_cod
                                     AND dec.lst_ope = 'U'
                                     AND u.key_year = cns.key_year(+)
                                     AND u.key_cuo = cns.key_cuo(+)
                                     AND u.key_dec = cns.key_dec(+)
                                     AND u.key_nber = cns.key_nber(+)
                                     AND u.sad_num = cns.sad_num(+)
                                     AND u.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND u.key_year = prov.key_year(+)
                                     AND u.key_cuo = prov.key_cuo(+)
                                     AND u.key_dec = prov.key_dec(+)
                                     AND u.key_nber = prov.key_nber(+)
                                     AND u.sad_num = prov.sad_num(+)
                                     --para recuperar informacion del control
                                     AND f.alc_tipo_tramite = 'DUI'
                                     AND f.alc_gestion = u.sad_reg_year
                                     AND f.alc_aduana = u.key_cuo
                                     AND u.sad_reg_serial = 'C'
                                     AND f.alc_numero = u.sad_reg_nber
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND f.alc_num = 0
                                     AND f.alc_lstope = 'U'
                                     AND f.ctl_control_id = n.ctl_control_id
                                     AND n.not_num = 0
                                     AND n.not_lstope = 'U'
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_control_id = f.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U'
                            UNION ALL
                            SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     u.key_cuo || ':' || unt.cuo_nam aduana,
                                        u.sad_reg_year
                                     || '/'
                                     || u.key_cuo
                                     || '/'
                                     || u.sad_reg_serial
                                     || '-'
                                     || u.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy')
                                         fecha_registro,
                                     ia.itm_nber item,
                                     ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                         nandina,
                                        ia.saditm_goods_desc1
                                     || ' '
                                     || ia.saditm_goods_desc2
                                     || ' '
                                     || ia.saditm_goods_desc3
                                         descripcion,
                                     u.sad_typ_dec || '-' || u.sad_typ_proc
                                         patron,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (u.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 u.sad_consignee),
                                         ' ')
                                         nit_importador,
                                     DECODE (u.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador,
                                     NVL (u.key_dec, ' ') nit_declarante,
                                     occ.sad_dec_nam nombre_declarante,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor,
                                     prov.sad_exp_nam proveedor,
                                     NVL (u.sad_loc_goods, ' ') localizacion,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (u.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (u.sad_lop_cod, 1, 2)
                                         pto_pais_embarque,
                                     NVL (ia.saditm_gross_mass, 0)
                                         total_peso_bruto,
                                     NVL (ia.saditm_net_mass, 0)
                                         total_peso_neto,
                                     va.sad_iitminv_valc dec_fob,
                                     va.sad_iitmefr_valc dec_flete,
                                     va.sad_iitmins_valc dec_seguro,
                                     va.sad_iitmotc_valc dec_otros,
                                     ROUND (
                                         va.sad_iitmcif_valn
                                         / va.sad_iitminv_rat,
                                         2)
                                         dec_cifusd,
                                     va.sad_iitmcif_valn dec_cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         dec_total,
                                     vu.sad_iitminv_valc enc_fob,
                                     vu.sad_iitmefr_valc enc_flete,
                                     vu.sad_iitmins_valc enc_seguro,
                                     vu.sad_iitmotc_valc enc_otros,
                                     ROUND (
                                         vu.sad_iitmcif_valn
                                         / vu.sad_iitminv_rat,
                                         2)
                                         enc_cifusd,
                                     vu.sad_iitmcif_valn enc_cifbs,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'UFV')
                                         tc_ufvfecvenc,
                                     pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                             'UFV')
                                         tc_ufvhoy,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount
                                         to_ga,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount
                                         to_iva,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0)
                                         to_ice,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0)
                                         to_iehd,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0)
                                         to_icd,
                                     TRUNC (SYSDATE)
                                     - pkg_reporte.fecha_vencimiento (
                                           u.key_cuo,
                                           TO_CHAR (a.sad_reg_date,
                                                    'dd/mm/yyyy'))
                                         dias,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'TPR')
                                         tc_tprfecvenc,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             gau.saditm_tax_amount
                                             - gaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         ga_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             ivau.saditm_tax_amount
                                             - ivaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         iva_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iceu.saditm_tax_amount, 0)
                                             - NVL (icea.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         ice_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iehdu.saditm_tax_amount, 0)
                                             - NVL (iehda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         iehd_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (icdu.saditm_tax_amount, 0)
                                             - NVL (icda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         icd_dt,
                                     NVL (
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 NULL,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         '-')
                                         fec_liq,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         pkg_reporte.tipocambio (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 NULL,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'UFV'))
                                         ufv_liq,
                                     e1.est_estado estado_control,
                                     pkg_reporte.dev_totales_multas_item (
                                         f1.ctl_control_id,
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 NULL,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         u.key_year,
                                         u.key_cuo,
                                         NULL,
                                         u.key_nber,
                                         iu.itm_nber)
                                         multas
                              FROM   ops$asy.sad_gen u,
                                     ops$asy.sad_gen a,
                                     ops$asy.sad_itm iu,
                                     ops$asy.sad_itm ia,
                                     ops$asy.sad_tax gau,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivau,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax iceu,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehdu,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icdu,
                                     ops$asy.sad_tax icda,
                                     ops$asy.sad_itm_vim vu,
                                     ops$asy.sad_itm_vim va,
                                     fis_alcance f,
                                     fis_notificacion n,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.sad_occ_dec occ,
                                     fis_estado e1,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_conclusion con
                             WHERE       u.key_year = a.key_year
                                     AND u.key_cuo = a.key_cuo
                                     AND u.key_dec IS NULL
                                     AND a.key_dec IS NULL
                                     AND u.key_nber = a.key_nber
                                     AND a.sad_num =
                                            NVL (
                                                (SELECT   MIN (x.sad_pst_num)
                                                   FROM   ops$asy.sad_gen x
                                                  WHERE   x.key_cuo = u.key_cuo
                                                          AND x.sad_reg_year =
                                                                 u.sad_reg_year
                                                          AND x.sad_reg_serial =
                                                                 u.sad_reg_serial
                                                          AND x.sad_reg_nber =
                                                                 u.sad_reg_nber
                                                          AND x.sad_pst_dat >=
                                                                 n.not_fecha_notificacion),
                                                0)
                                     AND u.sad_flw = 1
                                     AND u.sad_num = 0
                                     AND u.lst_ope = 'U'
                                     AND u.key_year = iu.key_year
                                     AND u.key_cuo = iu.key_cuo
                                     AND iu.key_dec IS NULL
                                     AND u.key_nber = iu.key_nber
                                     AND u.sad_num = iu.sad_num
                                     AND a.key_year = ia.key_year
                                     AND a.key_cuo = ia.key_cuo
                                     AND ia.key_dec IS NULL
                                     AND a.key_nber = ia.key_nber
                                     AND a.sad_num = ia.sad_num
                                     AND iu.key_year = ia.key_year
                                     AND iu.key_cuo = ia.key_cuo
                                     AND iu.key_nber = ia.key_nber
                                     AND iu.itm_nber = ia.itm_nber
                                     --tributo GA
                                     AND iu.key_year = gau.key_year
                                     AND iu.key_cuo = gau.key_cuo
                                     AND gau.key_dec IS NULL
                                     AND iu.key_nber = gau.key_nber
                                     AND iu.itm_nber = gau.itm_nber
                                     AND iu.sad_num = gau.sad_num
                                     AND gau.saditm_tax_code = 'GA'
                                     AND ia.key_year = gaa.key_year
                                     AND ia.key_cuo = gaa.key_cuo
                                     AND gaa.key_dec IS NULL
                                     AND ia.key_nber = gaa.key_nber
                                     AND ia.itm_nber = gaa.itm_nber
                                     AND ia.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND iu.key_year = ivau.key_year
                                     AND iu.key_cuo = ivau.key_cuo
                                     AND ivau.key_dec IS NULL
                                     AND iu.key_nber = ivau.key_nber
                                     AND iu.itm_nber = ivau.itm_nber
                                     AND iu.sad_num = ivau.sad_num
                                     AND ivau.saditm_tax_code = 'IVA'
                                     AND ia.key_year = ivaa.key_year
                                     AND ia.key_cuo = ivaa.key_cuo
                                     AND ivaa.key_dec IS NULL
                                     AND ia.key_nber = ivaa.key_nber
                                     AND ia.itm_nber = ivaa.itm_nber
                                     AND ia.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND iu.key_year = iceu.key_year(+)
                                     AND iu.key_cuo = iceu.key_cuo(+)
                                     AND iceu.key_dec(+) IS NULL
                                     AND iu.key_nber = iceu.key_nber(+)
                                     AND iu.itm_nber = iceu.itm_nber(+)
                                     AND iu.sad_num = iceu.sad_num(+)
                                     AND iceu.saditm_tax_code(+) = 'ICE'
                                     AND ia.key_year = icea.key_year(+)
                                     AND ia.key_cuo = icea.key_cuo(+)
                                     AND icea.key_dec(+) IS NULL
                                     AND ia.key_nber = icea.key_nber(+)
                                     AND ia.itm_nber = icea.itm_nber(+)
                                     AND ia.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND iu.key_year = iehdu.key_year(+)
                                     AND iu.key_cuo = iehdu.key_cuo(+)
                                     AND iehdu.key_dec(+) IS NULL
                                     AND iu.key_nber = iehdu.key_nber(+)
                                     AND iu.itm_nber = iehdu.itm_nber(+)
                                     AND iu.sad_num = iehdu.sad_num(+)
                                     AND iehdu.saditm_tax_code(+) = 'IEHD'
                                     AND ia.key_year = iehda.key_year(+)
                                     AND ia.key_cuo = iehda.key_cuo(+)
                                     AND iehda.key_dec(+) IS NULL
                                     AND ia.key_nber = iehda.key_nber(+)
                                     AND ia.itm_nber = iehda.itm_nber(+)
                                     AND ia.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND iu.key_year = icdu.key_year(+)
                                     AND iu.key_cuo = icdu.key_cuo(+)
                                     AND icdu.key_dec(+) IS NULL
                                     AND iu.key_nber = icdu.key_nber(+)
                                     AND iu.itm_nber = icdu.itm_nber(+)
                                     AND iu.sad_num = icdu.sad_num(+)
                                     AND icdu.saditm_tax_code(+) = 'ICD'
                                     AND ia.key_year = icda.key_year(+)
                                     AND ia.key_cuo = icda.key_cuo(+)
                                     AND icda.key_dec(+) IS NULL
                                     AND ia.key_nber = icda.key_nber(+)
                                     AND ia.itm_nber = icda.itm_nber(+)
                                     AND ia.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     --para los valores FOB FLETE SEGURO OTROS CIF
                                     AND iu.key_year = vu.key_year
                                     AND iu.key_cuo = vu.key_cuo
                                     AND vu.key_dec IS NULL
                                     AND iu.key_nber = vu.key_nber
                                     AND iu.itm_nber = vu.itm_nber
                                     AND iu.sad_num = vu.sad_num
                                     AND ia.key_year = va.key_year
                                     AND ia.key_cuo = va.key_cuo
                                     AND va.key_dec IS NULL
                                     AND ia.key_nber = va.key_nber
                                     AND ia.itm_nber = va.itm_nber
                                     AND ia.sad_num = va.sad_num
                                     AND unt.cuo_cod = u.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = u.key_year
                                     AND spyc.key_cuo(+) = u.key_cuo
                                     AND spyc.key_dec(+) IS NULL
                                     AND spyc.key_nber(+) = u.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = u.key_year
                                     AND spyp.key_cuo(+) = u.key_cuo
                                     AND spyp.key_dec(+) IS NULL
                                     AND spyp.key_nber(+) = u.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) = u.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND iu.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = u.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND occ.key_dec IS NULL
                                     AND u.key_nber = occ.key_nber
                                     AND u.sad_num = occ.sad_num
                                     AND u.key_year = cns.key_year(+)
                                     AND u.key_cuo = cns.key_cuo(+)
                                     AND cns.key_dec(+) IS NULL
                                     AND u.key_nber = cns.key_nber(+)
                                     AND u.sad_num = cns.sad_num(+)
                                     AND u.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND u.key_year = prov.key_year(+)
                                     AND u.key_cuo = prov.key_cuo(+)
                                     AND prov.key_dec(+) IS NULL
                                     AND u.key_nber = prov.key_nber(+)
                                     AND u.sad_num = prov.sad_num(+)
                                     --para recuperar informacion del control
                                     AND f.alc_tipo_tramite = 'DUI'
                                     AND f.alc_gestion = u.sad_reg_year
                                     AND f.alc_aduana = u.key_cuo
                                     AND u.sad_reg_serial = 'C'
                                     AND f.alc_numero = u.sad_reg_nber
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND f.alc_num = 0
                                     AND f.alc_lstope = 'U'
                                     AND f.ctl_control_id = n.ctl_control_id
                                     AND n.not_num = 0
                                     AND n.not_lstope = 'U'
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_control_id = f.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U') t
                ORDER BY   1,
                           2,
                           3,
                           4,
                           10;
        ELSE
            OPEN cr FOR
                  SELECT   t.gestion,
                           t.tipo_control,
                           t.gerencia,
                           t.numero,
                           t.codigo_control,
                           t.fecha_orden,
                           t.aduana,
                           t.declaracion,
                           t.fecha_registro,
                           t.item,
                           t.nandina,
                           t.descripcion,
                           t.patron,
                           t.canal,
                           t.fecha_pase,
                           t.nit_importador,
                           t.nombre_importador,
                           t.nit_declarante,
                           t.nombre_declarante,
                           t.direccion_proveedor,
                           t.proveedor,
                           t.localizacion,
                           t.pais_origen,
                           t.pais_uproced,
                           t.pto_pais_embarque,
                           t.total_peso_bruto,
                           t.total_peso_neto,
                           t.dec_fob,
                           t.dec_flete,
                           t.dec_seguro,
                           t.dec_otros,
                           t.dec_cifusd,
                           t.dec_cifbs,
                           t.dec_ga,
                           t.dec_iva,
                           t.dec_ice,
                           t.dec_iehd,
                           t.dec_icd,
                           t.dec_total,
                           t.enc_fob,
                           t.enc_flete,
                           t.enc_seguro,
                           t.enc_otros,
                           t.enc_cifusd,
                           t.enc_cifbs,
                           t.to_ga,
                           t.to_iva,
                           t.to_ice,
                           t.to_iehd,
                           t.to_icd,
                           t.to_ga + t.to_iva + t.to_ice + t.to_iehd + t.to_icd
                               to_total,
                           ROUND (
                                 t.to_ga
                               + t.to_iva
                               + t.to_ice
                               + t.to_iehd
                               + t.to_icd
                               + t.ga_dt
                               + t.iva_dt
                               + t.ice_dt
                               + t.iehd_dt
                               + t.icd_dt,
                               2)
                               adeudo_totalbs,
                           ROUND (
                               ( (  t.to_ga
                                  + t.to_iva
                                  + t.to_ice
                                  + t.to_iehd
                                  + t.to_icd)
                                / t.tc_ufvhoy)
                               * t.tc_ufvfecvenc,
                               2)
                               sancion,
                           --SUBSTR(tbl.multas,1,INSTR(tbl.ampli,'&')-1) sancion,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    1)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           2)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           1)
                                                  - 1)
                               multacadui,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    2)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           3)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           2)
                                                  - 1)
                               multacaorden,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    3)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           4)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           3)
                                                  - 1)
                               multacc,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    4)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           5)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           4)
                                                  - 1)
                               multadef,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    5)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           6)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           5)
                                                  - 1)
                               multacd,
                           SUBSTR (t.multas, INSTR (t.multas,
                                                    '&',
                                                    1,
                                                    6)
                                             + 1,   INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           7)
                                                  - INSTR (t.multas,
                                                           '&',
                                                           1,
                                                           6)
                                                  - 1)
                               total_det,
                           t.fec_liq,
                           t.ufv_liq,
                           t.estado_control
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     u.key_cuo || ':' || unt.cuo_nam aduana,
                                        u.sad_reg_year
                                     || '/'
                                     || u.key_cuo
                                     || '/'
                                     || u.sad_reg_serial
                                     || '-'
                                     || u.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy')
                                         fecha_registro,
                                     ia.itm_nber item,
                                     ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                         nandina,
                                        ia.saditm_goods_desc1
                                     || ' '
                                     || ia.saditm_goods_desc2
                                     || ' '
                                     || ia.saditm_goods_desc3
                                         descripcion,
                                     u.sad_typ_dec || '-' || u.sad_typ_proc
                                         patron               -- campo 1   (7)
                                               ,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (u.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 u.sad_consignee),
                                         ' ')
                                         nit_importador            -- campo 8a
                                                       ,
                                     DECODE (u.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador   -- campo 8b (19)e
                                                          ,
                                     NVL (u.key_dec, ' ') nit_declarante -- campo 14a
                                                                        ,
                                     dec.dec_nam nombre_declarante -- campo 14b (30)
                                                                  ,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor       -- campo 2c
                                                            ,
                                     prov.sad_exp_nam proveedor    -- campo 2b
                                                               ,
                                     NVL (u.sad_loc_goods, ' ') localizacion -- campo 30
                                                                            ,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (u.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (u.sad_lop_cod, 1, 2)
                                         pto_pais_embarque,
                                     NVL (ia.saditm_gross_mass, 0)
                                         total_peso_bruto,
                                     NVL (ia.saditm_net_mass, 0)
                                         total_peso_neto,
                                     va.sad_iitminv_valc dec_fob,
                                     va.sad_iitmefr_valc dec_flete,
                                     va.sad_iitmins_valc dec_seguro,
                                     va.sad_iitmotc_valc dec_otros,
                                     ROUND (
                                         va.sad_iitmcif_valn
                                         / va.sad_iitminv_rat,
                                         2)
                                         dec_cifusd,
                                     va.sad_iitmcif_valn dec_cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         dec_total,
                                     vu.sad_iitminv_valc enc_fob,
                                     vu.sad_iitmefr_valc enc_flete,
                                     vu.sad_iitmins_valc enc_seguro,
                                     vu.sad_iitmotc_valc enc_otros,
                                     ROUND (
                                         vu.sad_iitmcif_valn
                                         / vu.sad_iitminv_rat,
                                         2)
                                         enc_cifusd,
                                     vu.sad_iitmcif_valn enc_cifbs,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'UFV')
                                         tc_ufvfecvenc,
                                     pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                             'UFV')
                                         tc_ufvhoy,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount
                                         to_ga,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount
                                         to_iva,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0)
                                         to_ice,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0)
                                         to_iehd,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0)
                                         to_icd,
                                     TRUNC (SYSDATE)
                                     - pkg_reporte.fecha_vencimiento (
                                           u.key_cuo,
                                           TO_CHAR (a.sad_reg_date,
                                                    'dd/mm/yyyy'))
                                         dias,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'TPR')
                                         tc_tprfecvenc,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_dec,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_dec,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             gau.saditm_tax_amount
                                             - gaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         ga_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_dec,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_dec,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             ivau.saditm_tax_amount
                                             - ivaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         iva_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_dec,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_dec,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iceu.saditm_tax_amount, 0)
                                             - NVL (icea.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         ice_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_dec,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_dec,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iehdu.saditm_tax_amount, 0)
                                             - NVL (iehda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         iehd_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_dec,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       u.key_dec,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (icdu.saditm_tax_amount, 0)
                                             - NVL (icda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         icd_dt,
                                     NVL (
                                         TO_CHAR (con.con_fecha_doc_con,
                                                  'dd/mm/yyyy'),
                                         '-')
                                         fec_liq,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             u.key_dec,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         pkg_reporte.tipocambio (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_dec,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'UFV'))
                                         ufv_liq,
                                     e1.est_estado estado_control,
                                     pkg_reporte.dev_totales_multas_item (
                                         f1.ctl_control_id,
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         u.key_year,
                                         u.key_cuo,
                                         u.key_dec,
                                         u.key_nber,
                                         iu.itm_nber)
                                         multas
                              FROM   ops$asy.sad_gen u,
                                     ops$asy.sad_gen a,
                                     ops$asy.sad_itm iu,
                                     ops$asy.sad_itm ia,
                                     ops$asy.sad_tax gau,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivau,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax iceu,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehdu,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icdu,
                                     ops$asy.sad_tax icda,
                                     ops$asy.sad_itm_vim vu,
                                     ops$asy.sad_itm_vim va,
                                     fis_alcance f,
                                     fis_notificacion n,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.undectab dec,
                                     fis_estado e1,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_conclusion con
                             WHERE       u.key_year = a.key_year
                                     AND u.key_cuo = a.key_cuo
                                     AND u.key_dec IS NOT NULL
                                     AND u.key_dec = a.key_dec
                                     AND u.key_nber = a.key_nber
                                     AND a.sad_num =
                                            NVL (
                                                (SELECT   MIN (x.sad_pst_num)
                                                   FROM   ops$asy.sad_gen x
                                                  WHERE   x.key_cuo = u.key_cuo
                                                          AND x.sad_reg_year =
                                                                 u.sad_reg_year
                                                          AND x.sad_reg_serial =
                                                                 u.sad_reg_serial
                                                          AND x.sad_reg_nber =
                                                                 u.sad_reg_nber
                                                          AND x.sad_pst_dat >=
                                                                 n.not_fecha_notificacion),
                                                0)
                                     AND u.sad_flw = 1
                                     AND u.sad_num = 0
                                     AND u.lst_ope = 'U'
                                     AND u.key_year = iu.key_year
                                     AND u.key_cuo = iu.key_cuo
                                     AND u.key_dec = iu.key_dec
                                     AND u.key_nber = iu.key_nber
                                     AND u.sad_num = iu.sad_num
                                     AND a.key_year = ia.key_year
                                     AND a.key_cuo = ia.key_cuo
                                     AND a.key_dec = ia.key_dec
                                     AND a.key_nber = ia.key_nber
                                     AND a.sad_num = ia.sad_num
                                     AND iu.key_year = ia.key_year
                                     AND iu.key_cuo = ia.key_cuo
                                     AND iu.key_dec = ia.key_dec
                                     AND iu.key_nber = ia.key_nber
                                     AND iu.itm_nber = ia.itm_nber
                                     --tributo GA
                                     AND iu.key_year = gau.key_year
                                     AND iu.key_cuo = gau.key_cuo
                                     AND iu.key_dec = gau.key_dec
                                     AND iu.key_nber = gau.key_nber
                                     AND iu.itm_nber = gau.itm_nber
                                     AND iu.sad_num = gau.sad_num
                                     AND gau.saditm_tax_code = 'GA'
                                     AND ia.key_year = gaa.key_year
                                     AND ia.key_cuo = gaa.key_cuo
                                     AND ia.key_dec = gaa.key_dec
                                     AND ia.key_nber = gaa.key_nber
                                     AND ia.itm_nber = gaa.itm_nber
                                     AND ia.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND iu.key_year = ivau.key_year
                                     AND iu.key_cuo = ivau.key_cuo
                                     AND iu.key_dec = ivau.key_dec
                                     AND iu.key_nber = ivau.key_nber
                                     AND iu.itm_nber = ivau.itm_nber
                                     AND iu.sad_num = ivau.sad_num
                                     AND ivau.saditm_tax_code = 'IVA'
                                     AND ia.key_year = ivaa.key_year
                                     AND ia.key_cuo = ivaa.key_cuo
                                     AND ia.key_dec = ivaa.key_dec
                                     AND ia.key_nber = ivaa.key_nber
                                     AND ia.itm_nber = ivaa.itm_nber
                                     AND ia.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND iu.key_year = iceu.key_year(+)
                                     AND iu.key_cuo = iceu.key_cuo(+)
                                     AND iu.key_dec = iceu.key_dec(+)
                                     AND iu.key_nber = iceu.key_nber(+)
                                     AND iu.itm_nber = iceu.itm_nber(+)
                                     AND iu.sad_num = iceu.sad_num(+)
                                     AND iceu.saditm_tax_code(+) = 'ICE'
                                     AND ia.key_year = icea.key_year(+)
                                     AND ia.key_cuo = icea.key_cuo(+)
                                     AND ia.key_dec = icea.key_dec(+)
                                     AND ia.key_nber = icea.key_nber(+)
                                     AND ia.itm_nber = icea.itm_nber(+)
                                     AND ia.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND iu.key_year = iehdu.key_year(+)
                                     AND iu.key_cuo = iehdu.key_cuo(+)
                                     AND iu.key_dec = iehdu.key_dec(+)
                                     AND iu.key_nber = iehdu.key_nber(+)
                                     AND iu.itm_nber = iehdu.itm_nber(+)
                                     AND iu.sad_num = iehdu.sad_num(+)
                                     AND iehdu.saditm_tax_code(+) = 'IEHD'
                                     AND ia.key_year = iehda.key_year(+)
                                     AND ia.key_cuo = iehda.key_cuo(+)
                                     AND ia.key_dec = iehda.key_dec(+)
                                     AND ia.key_nber = iehda.key_nber(+)
                                     AND ia.itm_nber = iehda.itm_nber(+)
                                     AND ia.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND iu.key_year = icdu.key_year(+)
                                     AND iu.key_cuo = icdu.key_cuo(+)
                                     AND iu.key_dec = icdu.key_dec(+)
                                     AND iu.key_nber = icdu.key_nber(+)
                                     AND iu.itm_nber = icdu.itm_nber(+)
                                     AND iu.sad_num = icdu.sad_num(+)
                                     AND icdu.saditm_tax_code(+) = 'ICD'
                                     AND ia.key_year = icda.key_year(+)
                                     AND ia.key_cuo = icda.key_cuo(+)
                                     AND ia.key_dec = icda.key_dec(+)
                                     AND ia.key_nber = icda.key_nber(+)
                                     AND ia.itm_nber = icda.itm_nber(+)
                                     AND ia.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     --para los valores FOB FLETE SEGURO OTROS CIF
                                     AND iu.key_year = vu.key_year
                                     AND iu.key_cuo = vu.key_cuo
                                     AND iu.key_dec = vu.key_dec
                                     AND iu.key_nber = vu.key_nber
                                     AND iu.itm_nber = vu.itm_nber
                                     AND iu.sad_num = vu.sad_num
                                     AND ia.key_year = va.key_year
                                     AND ia.key_cuo = va.key_cuo
                                     AND ia.key_dec = va.key_dec
                                     AND ia.key_nber = va.key_nber
                                     AND ia.itm_nber = va.itm_nber
                                     AND ia.sad_num = va.sad_num
                                     AND unt.cuo_cod = u.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = u.key_year
                                     AND spyc.key_cuo(+) = u.key_cuo
                                     AND spyc.key_dec(+) = u.key_dec
                                     AND spyc.key_nber(+) = u.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = u.key_year
                                     AND spyp.key_cuo(+) = u.key_cuo
                                     AND spyp.key_dec(+) = u.key_dec
                                     AND spyp.key_nber(+) = u.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) = u.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND iu.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = u.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND u.key_dec = dec.dec_cod
                                     AND dec.lst_ope = 'U'
                                     AND u.key_year = cns.key_year(+)
                                     AND u.key_cuo = cns.key_cuo(+)
                                     AND u.key_dec = cns.key_dec(+)
                                     AND u.key_nber = cns.key_nber(+)
                                     AND u.sad_num = cns.sad_num(+)
                                     AND u.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND u.key_year = prov.key_year(+)
                                     AND u.key_cuo = prov.key_cuo(+)
                                     AND u.key_dec = prov.key_dec(+)
                                     AND u.key_nber = prov.key_nber(+)
                                     AND u.sad_num = prov.sad_num(+)
                                     --para recuperar informacion del control
                                     AND f.alc_tipo_tramite = 'DUI'
                                     AND f.alc_gestion = u.sad_reg_year
                                     AND f.alc_aduana = u.key_cuo
                                     AND u.sad_reg_serial = 'C'
                                     AND f.alc_numero = u.sad_reg_nber
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND (f1.ctl_nit = prm_nit
                                          OR f1.ctl_ci = prm_nit)
                                     AND f.alc_num = 0
                                     AND f.alc_lstope = 'U'
                                     AND f.ctl_control_id = n.ctl_control_id
                                     AND n.not_num = 0
                                     AND n.not_lstope = 'U'
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_control_id = f.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U'
                            UNION ALL
                            SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     u.key_cuo || ':' || unt.cuo_nam aduana,
                                        u.sad_reg_year
                                     || '/'
                                     || u.key_cuo
                                     || '/'
                                     || u.sad_reg_serial
                                     || '-'
                                     || u.sad_reg_nber
                                         declaracion,
                                     TO_CHAR (u.sad_reg_date, 'dd/mm/yyyy')
                                         fecha_registro,
                                     ia.itm_nber item,
                                     ia.saditm_hs_cod || ia.saditm_hsprec_cod
                                         nandina,
                                        ia.saditm_goods_desc1
                                     || ' '
                                     || ia.saditm_goods_desc2
                                     || ' '
                                     || ia.saditm_goods_desc3
                                         descripcion,
                                     u.sad_typ_dec || '-' || u.sad_typ_proc
                                         patron,
                                     NVL (
                                         DECODE (spyc.sad_clr,
                                                 0, 'CANAL VERDE',
                                                 2, 'CANAL AMARILLO',
                                                 3, 'CANAL ROJO',
                                                 spyc.sad_clr),
                                         ' ')
                                         canal,
                                     NVL (
                                         DECODE (
                                             spyp.upd_dat,
                                             NULL,
                                             ' ',
                                             TO_CHAR (spyp.upd_dat,
                                                      'DD/MM/YYYY'))
                                         || ' '
                                         || DECODE (spyp.upd_hor,
                                                    NULL, ' ',
                                                    spyp.upd_hor),
                                         ' ')
                                         fecha_pase,
                                     NVL (
                                         DECODE (u.sad_consignee,
                                                 NULL,
                                                 NVL (cns.sad_con_zip, ' '),
                                                 u.sad_consignee),
                                         ' ')
                                         nit_importador,
                                     DECODE (u.sad_consignee,
                                             NULL, cns.sad_con_nam,
                                             unc.cmp_nam)
                                         nombre_importador,
                                     NVL (u.key_dec, ' ') nit_declarante,
                                     occ.sad_dec_nam nombre_declarante,
                                     NVL (prov.sad_exp_add1, ' ')
                                         direccion_proveedor,
                                     prov.sad_exp_nam proveedor,
                                     NVL (u.sad_loc_goods, ' ') localizacion,
                                     ctyo.cty_dsc pais_origen,
                                     NVL (UPPER (ctyproc.cty_dsc), ' ')
                                         pais_uproced,
                                        SUBSTR (u.sad_lop_cod, 3, 3)
                                     || '  '
                                     || loc.loc_dsc
                                     || ' | '
                                     || SUBSTR (u.sad_lop_cod, 1, 2)
                                         pto_pais_embarque,
                                     NVL (ia.saditm_gross_mass, 0)
                                         total_peso_bruto,
                                     NVL (ia.saditm_net_mass, 0)
                                         total_peso_neto,
                                     va.sad_iitminv_valc dec_fob,
                                     va.sad_iitmefr_valc dec_flete,
                                     va.sad_iitmins_valc dec_seguro,
                                     va.sad_iitmotc_valc dec_otros,
                                     ROUND (
                                         va.sad_iitmcif_valn
                                         / va.sad_iitminv_rat,
                                         2)
                                         dec_cifusd,
                                     va.sad_iitmcif_valn dec_cifbs,
                                     gaa.saditm_tax_amount dec_ga,
                                     ivaa.saditm_tax_amount dec_iva,
                                     NVL (icea.saditm_tax_amount, 0) dec_ice,
                                     NVL (iehda.saditm_tax_amount, 0) dec_iehd,
                                     NVL (icda.saditm_tax_amount, 0) dec_icd,
                                       gaa.saditm_tax_amount
                                     + ivaa.saditm_tax_amount
                                     + NVL (icea.saditm_tax_amount, 0)
                                     + NVL (iehda.saditm_tax_amount, 0)
                                     + NVL (icda.saditm_tax_amount, 0)
                                         dec_total,
                                     vu.sad_iitminv_valc enc_fob,
                                     vu.sad_iitmefr_valc enc_flete,
                                     vu.sad_iitmins_valc enc_seguro,
                                     vu.sad_iitmotc_valc enc_otros,
                                     ROUND (
                                         vu.sad_iitmcif_valn
                                         / vu.sad_iitminv_rat,
                                         2)
                                         enc_cifusd,
                                     vu.sad_iitmcif_valn enc_cifbs,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'UFV')
                                         tc_ufvfecvenc,
                                     pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                             'UFV')
                                         tc_ufvhoy,
                                     gau.saditm_tax_amount
                                     - gaa.saditm_tax_amount
                                         to_ga,
                                     ivau.saditm_tax_amount
                                     - ivaa.saditm_tax_amount
                                         to_iva,
                                     NVL (iceu.saditm_tax_amount, 0)
                                     - NVL (icea.saditm_tax_amount, 0)
                                         to_ice,
                                     NVL (iehdu.saditm_tax_amount, 0)
                                     - NVL (iehda.saditm_tax_amount, 0)
                                         to_iehd,
                                     NVL (icdu.saditm_tax_amount, 0)
                                     - NVL (icda.saditm_tax_amount, 0)
                                         to_icd,
                                     TRUNC (SYSDATE)
                                     - pkg_reporte.fecha_vencimiento (
                                           u.key_cuo,
                                           TO_CHAR (a.sad_reg_date,
                                                    'dd/mm/yyyy'))
                                         dias,
                                     pkg_reporte.tipocambio (
                                         pkg_reporte.fecha_vencimiento (
                                             u.key_cuo,
                                             TO_CHAR (a.sad_reg_date,
                                                      'dd/mm/yyyy')),
                                         'TPR')
                                         tc_tprfecvenc,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             gau.saditm_tax_amount
                                             - gaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         ga_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             ivau.saditm_tax_amount
                                             - ivaa.saditm_tax_amount,
                                             u.sad_top_cod))
                                         iva_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iceu.saditm_tax_amount, 0)
                                             - NVL (icea.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         ice_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (iehdu.saditm_tax_amount, 0)
                                             - NVL (iehda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         iehd_dt,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         ops$asy.fcalculadeudatributaria (
                                             u.sad_reg_date,
                                             TRUNC(pkg_reporte.fecha_liquidacion (
                                                       f1.ctl_control_id,
                                                       u.key_year,
                                                       NULL,
                                                       u.key_dec,
                                                       u.key_nber)),
                                             u.key_year,
                                             u.key_cuo,
                                             u.key_dec,
                                             u.key_nber,
                                             NVL (icdu.saditm_tax_amount, 0)
                                             - NVL (icda.saditm_tax_amount, 0),
                                             u.sad_top_cod))
                                         icd_dt,
                                     NVL (
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 NULL,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         '-')
                                         fec_liq,
                                     DECODE (
                                         pkg_reporte.fecha_liquidacion (
                                             f1.ctl_control_id,
                                             u.key_year,
                                             NULL,
                                             u.key_dec,
                                             u.key_nber),
                                         NULL,
                                         0,
                                         pkg_reporte.tipocambio (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 NULL,
                                                 u.key_dec,
                                                 u.key_nber),
                                             'UFV'))
                                         ufv_liq,
                                     e1.est_estado estado_control,
                                     pkg_reporte.dev_totales_multas_item (
                                         f1.ctl_control_id,
                                         TO_CHAR (
                                             pkg_reporte.fecha_liquidacion (
                                                 f1.ctl_control_id,
                                                 u.key_year,
                                                 u.key_cuo,
                                                 NULL,
                                                 u.key_nber),
                                             'dd/mm/yyyy'),
                                         u.key_year,
                                         u.key_cuo,
                                         NULL,
                                         u.key_nber,
                                         iu.itm_nber)
                                         multas
                              FROM   ops$asy.sad_gen u,
                                     ops$asy.sad_gen a,
                                     ops$asy.sad_itm iu,
                                     ops$asy.sad_itm ia,
                                     ops$asy.sad_tax gau,
                                     ops$asy.sad_tax gaa,
                                     ops$asy.sad_tax ivau,
                                     ops$asy.sad_tax ivaa,
                                     ops$asy.sad_tax iceu,
                                     ops$asy.sad_tax icea,
                                     ops$asy.sad_tax iehdu,
                                     ops$asy.sad_tax iehda,
                                     ops$asy.sad_tax icdu,
                                     ops$asy.sad_tax icda,
                                     ops$asy.sad_itm_vim vu,
                                     ops$asy.sad_itm_vim va,
                                     fis_alcance f,
                                     fis_notificacion n,
                                     ops$asy.uncuotab unt,
                                     ops$asy.sad_spy spyc,
                                     ops$asy.sad_spy spyp,
                                     ops$asy.unctytab ctyproc,
                                     ops$asy.unctytab ctyo,
                                     ops$asy.unloctab loc,
                                     ops$asy.sad_occ_exp prov,
                                     ops$asy.sad_occ_cns cns,
                                     ops$asy.uncmptab unc,
                                     ops$asy.sad_occ_dec occ,
                                     fis_estado e1,
                                     fis_estado a1,
                                     fis_control f1,
                                     fis_conclusion con
                             WHERE       u.key_year = a.key_year
                                     AND u.key_cuo = a.key_cuo
                                     AND u.key_dec IS NULL
                                     AND a.key_dec IS NULL
                                     AND u.key_nber = a.key_nber
                                     AND a.sad_num =
                                            NVL (
                                                (SELECT   MIN (x.sad_pst_num)
                                                   FROM   ops$asy.sad_gen x
                                                  WHERE   x.key_cuo = u.key_cuo
                                                          AND x.sad_reg_year =
                                                                 u.sad_reg_year
                                                          AND x.sad_reg_serial =
                                                                 u.sad_reg_serial
                                                          AND x.sad_reg_nber =
                                                                 u.sad_reg_nber
                                                          AND x.sad_pst_dat >=
                                                                 n.not_fecha_notificacion),
                                                0)
                                     AND u.sad_flw = 1
                                     AND u.sad_num = 0
                                     AND u.lst_ope = 'U'
                                     AND u.key_year = iu.key_year
                                     AND u.key_cuo = iu.key_cuo
                                     AND iu.key_dec IS NULL
                                     AND u.key_nber = iu.key_nber
                                     AND u.sad_num = iu.sad_num
                                     AND a.key_year = ia.key_year
                                     AND a.key_cuo = ia.key_cuo
                                     AND ia.key_dec IS NULL
                                     AND a.key_nber = ia.key_nber
                                     AND a.sad_num = ia.sad_num
                                     AND iu.key_year = ia.key_year
                                     AND iu.key_cuo = ia.key_cuo
                                     AND iu.key_nber = ia.key_nber
                                     AND iu.itm_nber = ia.itm_nber
                                     --tributo GA
                                     AND iu.key_year = gau.key_year
                                     AND iu.key_cuo = gau.key_cuo
                                     AND gau.key_dec IS NULL
                                     AND iu.key_nber = gau.key_nber
                                     AND iu.itm_nber = gau.itm_nber
                                     AND iu.sad_num = gau.sad_num
                                     AND gau.saditm_tax_code = 'GA'
                                     AND ia.key_year = gaa.key_year
                                     AND ia.key_cuo = gaa.key_cuo
                                     AND gaa.key_dec IS NULL
                                     AND ia.key_nber = gaa.key_nber
                                     AND ia.itm_nber = gaa.itm_nber
                                     AND ia.sad_num = gaa.sad_num
                                     AND gaa.saditm_tax_code = 'GA'
                                     --tributo IVA
                                     AND iu.key_year = ivau.key_year
                                     AND iu.key_cuo = ivau.key_cuo
                                     AND ivau.key_dec IS NULL
                                     AND iu.key_nber = ivau.key_nber
                                     AND iu.itm_nber = ivau.itm_nber
                                     AND iu.sad_num = ivau.sad_num
                                     AND ivau.saditm_tax_code = 'IVA'
                                     AND ia.key_year = ivaa.key_year
                                     AND ia.key_cuo = ivaa.key_cuo
                                     AND ivaa.key_dec IS NULL
                                     AND ia.key_nber = ivaa.key_nber
                                     AND ia.itm_nber = ivaa.itm_nber
                                     AND ia.sad_num = ivaa.sad_num
                                     AND ivaa.saditm_tax_code = 'IVA'
                                     --tributo ICE
                                     AND iu.key_year = iceu.key_year(+)
                                     AND iu.key_cuo = iceu.key_cuo(+)
                                     AND iceu.key_dec(+) IS NULL
                                     AND iu.key_nber = iceu.key_nber(+)
                                     AND iu.itm_nber = iceu.itm_nber(+)
                                     AND iu.sad_num = iceu.sad_num(+)
                                     AND iceu.saditm_tax_code(+) = 'ICE'
                                     AND ia.key_year = icea.key_year(+)
                                     AND ia.key_cuo = icea.key_cuo(+)
                                     AND icea.key_dec(+) IS NULL
                                     AND ia.key_nber = icea.key_nber(+)
                                     AND ia.itm_nber = icea.itm_nber(+)
                                     AND ia.sad_num = icea.sad_num(+)
                                     AND icea.saditm_tax_code(+) = 'ICE'
                                     --tributo IEHD
                                     AND iu.key_year = iehdu.key_year(+)
                                     AND iu.key_cuo = iehdu.key_cuo(+)
                                     AND iehdu.key_dec(+) IS NULL
                                     AND iu.key_nber = iehdu.key_nber(+)
                                     AND iu.itm_nber = iehdu.itm_nber(+)
                                     AND iu.sad_num = iehdu.sad_num(+)
                                     AND iehdu.saditm_tax_code(+) = 'IEHD'
                                     AND ia.key_year = iehda.key_year(+)
                                     AND ia.key_cuo = iehda.key_cuo(+)
                                     AND iehda.key_dec(+) IS NULL
                                     AND ia.key_nber = iehda.key_nber(+)
                                     AND ia.itm_nber = iehda.itm_nber(+)
                                     AND ia.sad_num = iehda.sad_num(+)
                                     AND iehda.saditm_tax_code(+) = 'IEHD'
                                     --tributo ICD
                                     AND iu.key_year = icdu.key_year(+)
                                     AND iu.key_cuo = icdu.key_cuo(+)
                                     AND icdu.key_dec(+) IS NULL
                                     AND iu.key_nber = icdu.key_nber(+)
                                     AND iu.itm_nber = icdu.itm_nber(+)
                                     AND iu.sad_num = icdu.sad_num(+)
                                     AND icdu.saditm_tax_code(+) = 'ICD'
                                     AND ia.key_year = icda.key_year(+)
                                     AND ia.key_cuo = icda.key_cuo(+)
                                     AND icda.key_dec(+) IS NULL
                                     AND ia.key_nber = icda.key_nber(+)
                                     AND ia.itm_nber = icda.itm_nber(+)
                                     AND ia.sad_num = icda.sad_num(+)
                                     AND icda.saditm_tax_code(+) = 'ICD'
                                     --para los valores FOB FLETE SEGURO OTROS CIF
                                     AND iu.key_year = vu.key_year
                                     AND iu.key_cuo = vu.key_cuo
                                     AND vu.key_dec IS NULL
                                     AND iu.key_nber = vu.key_nber
                                     AND iu.itm_nber = vu.itm_nber
                                     AND iu.sad_num = vu.sad_num
                                     AND ia.key_year = va.key_year
                                     AND ia.key_cuo = va.key_cuo
                                     AND va.key_dec IS NULL
                                     AND ia.key_nber = va.key_nber
                                     AND ia.itm_nber = va.itm_nber
                                     AND ia.sad_num = va.sad_num
                                     AND unt.cuo_cod = u.key_cuo
                                     AND unt.lst_ope = 'U'
                                     AND spyc.key_year(+) = u.key_year
                                     AND spyc.key_cuo(+) = u.key_cuo
                                     AND spyc.key_dec(+) IS NULL
                                     AND spyc.key_nber(+) = u.key_nber
                                     AND spyc.spy_sta(+) = '10'
                                     AND spyc.spy_act(+) = '24'
                                     AND spyp.key_year(+) = u.key_year
                                     AND spyp.key_cuo(+) = u.key_cuo
                                     AND spyp.key_dec(+) IS NULL
                                     AND spyp.key_nber(+) = u.key_nber
                                     AND spyp.spy_act(+) = '25'
                                     AND ctyproc.cty_cod(+) = u.sad_cty_1dlp
                                     AND ctyproc.lst_ope(+) = 'U'
                                     AND iu.saditm_cty_origcod =
                                            ctyo.cty_cod(+)
                                     AND ctyo.lst_ope(+) = 'U'
                                     AND loc.loc_cod(+) = u.sad_lop_cod
                                     AND loc.lst_ope(+) = 'U'
                                     AND occ.key_dec IS NULL
                                     AND u.key_nber = occ.key_nber
                                     AND u.sad_num = occ.sad_num
                                     AND u.key_year = cns.key_year(+)
                                     AND u.key_cuo = cns.key_cuo(+)
                                     AND cns.key_dec(+) IS NULL
                                     AND u.key_nber = cns.key_nber(+)
                                     AND u.sad_num = cns.sad_num(+)
                                     AND u.sad_consignee = unc.cmp_cod(+)
                                     AND unc.lst_ope(+) = 'U'
                                     AND u.key_year = prov.key_year(+)
                                     AND u.key_cuo = prov.key_cuo(+)
                                     AND prov.key_dec(+) IS NULL
                                     AND u.key_nber = prov.key_nber(+)
                                     AND u.sad_num = prov.sad_num(+)
                                     --para recuperar informacion del control
                                     AND f.alc_tipo_tramite = 'DUI'
                                     AND f.alc_gestion = u.sad_reg_year
                                     AND f.alc_aduana = u.key_cuo
                                     AND u.sad_reg_serial = 'C'
                                     AND f.alc_numero = u.sad_reg_nber
                                     AND a1.est_fecsys BETWEEN TO_DATE (
                                                                   prm_fecini,
                                                                   'dd/mm/yyyy')
                                                           AND  TO_DATE (
                                                                    prm_fecfin,
                                                                    'dd/mm/yyyy')
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND (f1.ctl_nit = prm_nit
                                          OR f1.ctl_ci = prm_nit)
                                     AND f.alc_num = 0
                                     AND f.alc_lstope = 'U'
                                     AND f.ctl_control_id = n.ctl_control_id
                                     AND n.not_num = 0
                                     AND n.not_lstope = 'U'
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_control_id = f.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U') t
                ORDER BY   1,
                           2,
                           3,
                           4,
                           10;
        END IF;

        RETURN cr;
    END;

    FUNCTION reporte_recuperacion_orden (prm_control    IN VARCHAR2,
                                         prm_gerencia   IN VARCHAR2,
                                         prm_fecini     IN VARCHAR2,
                                         prm_fecfin     IN VARCHAR2,
                                         prm_nit        IN VARCHAR2)
        RETURN cursortype
    IS
        cr           cursortype;
        v_gerencia   VARCHAR2 (5);
    BEGIN
        IF prm_gerencia = '%'
        THEN
            v_gerencia := '%';
        ELSE
            SELECT   a.ger_codigo
              INTO   v_gerencia
              FROM   fis_gerencia a
             WHERE   reg_cod = prm_gerencia AND reg_lstope = 'U';
        END IF;

        IF prm_nit IS NULL
        THEN
            OPEN cr FOR
                  SELECT   gestion,
                           tipo_control,
                           gerencia,
                           numero,
                           codigo_control,
                           fecha_orden,
                           origen_control,
                           identidad_doc,
                           identidad_nombre,
                           fiscalizador,
                           fiscalizador_nuevo,
                           supervisor,
                           supervisor_nuevo,
                           fecha_notificacion,
                           observacion_notificacion,
                           tipo_notificacion,
                           usuario_notificacion,
                           SUBSTR (tbl.info_con,
                                   1,
                                   INSTR (tbl.info_con, '&') - 1)
                               numero_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               fecha_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               gerencia_legal,
                           con_tipo_doc_con,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               numero_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               fecha_doc,
                           con_usuario usuario_resultados,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        6)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - 1)
                               fecha_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        7)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - 1)
                               tipo_notif,
                           con_usuario usuario_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        8)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - 1)
                               fecha_ci_remision,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        9)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               10)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - 1)
                               ci_remision,
                           con_usuario usuario_remision,
                           con_fecha_doc_con,
                           con_usuario usuario_finalizacion,
                           estado_control,
                           SUBSTR (tbl.ilicitos,
                                   1,
                                   INSTR (tbl.ilicitos, '&') - 1)
                               omision_pago,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               contrav_adu,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               contrab_contrav,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        3)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - 1)
                               contrab_delito,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               defraudacion,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               otros,
                           fecha_est_con,
                           tp_gao,
                           tp_ivao,
                           tp_iceo,
                           tp_iehdo,
                           tp_icdo,
                             NVL (tp_gao, 0)
                           + NVL (tp_ivao, 0)
                           + NVL (tp_iceo, 0)
                           + NVL (tp_iehdo, 0)
                           + NVL (tp_icdo, 0)
                               tp_total,
                           tm_op,
                           tm_cadui,
                           tm_cao,
                           tm_cc,
                           tm_cd,
                           tm_df,
                             NVL (tm_op, 0)
                           + NVL (tm_cadui, 0)
                           + NVL (tm_cao, 0)
                           + NVL (tm_cc, 0)
                           + NVL (tm_cd, 0)
                           + NVL (tm_df, 0)
                               tm_total,
                           tm_cifp,
                           tm_gefp,
                           DECODE (saldo_fp, NULL, 0, saldo_fp * tc_ufvhoy)
                               tm_fp_saldo,
                           devuelve_fiscalizadores_recibo (ctl_control_id)
                               user_rec
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     pkg_reporte.devuelve_info_conclusion (
                                         f1.ctl_control_id,
                                         con.con_tipo_doc_con)
                                         info_con,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con,
                                     pkg_reporte.tributo_pagado_orden (
                                         f1.ctl_control_id,
                                         'GA')
                                         tp_gao,
                                     pkg_reporte.tributo_pagado_orden (
                                         f1.ctl_control_id,
                                         'IVA')
                                         tp_ivao,
                                     pkg_reporte.tributo_pagado_orden (
                                         f1.ctl_control_id,
                                         'ICE')
                                         tp_iceo,
                                     pkg_reporte.tributo_pagado_orden (
                                         f1.ctl_control_id,
                                         'IEHD')
                                         tp_iehdo,
                                     pkg_reporte.tributo_pagado_orden (
                                         f1.ctl_control_id,
                                         'ICD')
                                         tp_icdo,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'OP')
                                         tm_op,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'CA DUI')
                                         tm_cadui,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'CAO')
                                         tm_cao,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'CC')
                                         tm_cc,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'CD')
                                         tm_cd,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'DF')
                                         tm_df,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'CI FP')
                                         tm_cifp,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'GE FP')
                                         tm_gefp,
                                     res.cra_saldo_por_cobrar saldo_fp,
                                     pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                             'UFV')
                                         tc_ufvhoy,
                                     f1.ctl_control_id
                              FROM   fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1,
                                     fis_con_resadmin res
                             WHERE   a1.est_fecsys BETWEEN TO_DATE (
                                                               prm_fecini,
                                                               'dd/mm/yyyy')
                                                       AND  TO_DATE (
                                                                prm_fecfin,
                                                                'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U'
                                     AND res.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND res.cra_num(+) = 0
                                     AND res.cra_lstope(+) = 'U') tbl
                ORDER BY   1,
                           2,
                           3,
                           4;
        ELSE
            OPEN cr FOR
                  SELECT   gestion,
                           tipo_control,
                           gerencia,
                           numero,
                           codigo_control,
                           fecha_orden,
                           origen_control,
                           identidad_doc,
                           identidad_nombre,
                           fiscalizador,
                           fiscalizador_nuevo,
                           supervisor,
                           supervisor_nuevo,
                           fecha_notificacion,
                           observacion_notificacion,
                           tipo_notificacion,
                           usuario_notificacion,
                           SUBSTR (tbl.info_con,
                                   1,
                                   INSTR (tbl.info_con, '&') - 1)
                               numero_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               fecha_informe,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               gerencia_legal,
                           con_tipo_doc_con,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               numero_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               fecha_doc,
                           con_usuario usuario_resultados,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        6)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               6)
                                                      - 1)
                               fecha_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        7)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               7)
                                                      - 1)
                               tipo_notif,
                           con_usuario usuario_notif_doc,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        8)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               8)
                                                      - 1)
                               fecha_ci_remision,
                           SUBSTR (tbl.info_con, INSTR (tbl.info_con,
                                                        '&',
                                                        1,
                                                        9)
                                                 + 1,   INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               10)
                                                      - INSTR (tbl.info_con,
                                                               '&',
                                                               1,
                                                               9)
                                                      - 1)
                               ci_remision,
                           con_usuario usuario_remision,
                           con_fecha_doc_con,
                           con_usuario usuario_finalizacion,
                           estado_control,
                           SUBSTR (tbl.ilicitos,
                                   1,
                                   INSTR (tbl.ilicitos, '&') - 1)
                               omision_pago,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        1)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               1)
                                                      - 1)
                               contrav_adu,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        2)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               2)
                                                      - 1)
                               contrab_contrav,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        3)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               3)
                                                      - 1)
                               contrab_delito,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        4)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               4)
                                                      - 1)
                               defraudacion,
                           SUBSTR (tbl.ilicitos, INSTR (tbl.ilicitos,
                                                        '&',
                                                        1,
                                                        5)
                                                 + 1,   INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               6)
                                                      - INSTR (tbl.ilicitos,
                                                               '&',
                                                               1,
                                                               5)
                                                      - 1)
                               otros,
                           fecha_est_con,
                           tp_gao,
                           tp_ivao,
                           tp_iceo,
                           tp_iehdo,
                           tp_icdo,
                             NVL (tp_gao, 0)
                           + NVL (tp_ivao, 0)
                           + NVL (tp_iceo, 0)
                           + NVL (tp_iehdo, 0)
                           + NVL (tp_icdo, 0)
                               tp_total,
                           tm_op,
                           tm_cadui,
                           tm_cao,
                           tm_cc,
                           tm_cd,
                           tm_df,
                             NVL (tm_op, 0)
                           + NVL (tm_cadui, 0)
                           + NVL (tm_cao, 0)
                           + NVL (tm_cc, 0)
                           + NVL (tm_cd, 0)
                           + NVL (tm_df, 0)
                               tm_total,
                           tm_cifp,
                           tm_gefp,
                           DECODE (saldo_fp, NULL, 0, saldo_fp * tc_ufvhoy)
                               tm_fp_saldo,
                           devuelve_fiscalizadores_recibo (ctl_control_id)
                               user_rec
                    FROM   (SELECT   f1.ctl_cod_gestion gestion,
                                     DECODE (f1.ctl_cod_tipo,
                                             'DIFERIDO',
                                             'CD',
                                             'POSTERIOR',
                                             'FAP')
                                         tipo_control,
                                     f1.ctl_cod_gerencia gerencia,
                                     f1.ctl_cod_numero numero,
                                     DECODE (
                                         a1.est_estado,
                                         'MEMORIZADO',
                                         '-',
                                         f1.ctl_cod_gestion
                                         || DECODE (f1.ctl_cod_tipo,
                                                    'DIFERIDO',
                                                    'CD',
                                                    'POSTERIOR',
                                                    'FP',
                                                    'AMPLIATORIA DIFERIDO',
                                                    'CD',
                                                    'AMPLIATORIA POSTERIOR',
                                                    'FP',
                                                    '-')
                                         || f1.ctl_cod_gerencia
                                         || DECODE (
                                                f1.ctl_amp_correlativo,
                                                NULL,
                                                '00',
                                                DECODE (
                                                    LENGTH (
                                                        f1.ctl_amp_correlativo),
                                                    1,
                                                    '0'
                                                    || f1.ctl_amp_correlativo,
                                                    f1.ctl_amp_correlativo))
                                         || DECODE (
                                                LENGTH (f1.ctl_cod_numero),
                                                1,
                                                '0000' || f1.ctl_cod_numero,
                                                2,
                                                '000' || f1.ctl_cod_numero,
                                                3,
                                                '00' || f1.ctl_cod_numero,
                                                4,
                                                '0' || f1.ctl_cod_numero,
                                                f1.ctl_cod_numero))
                                         codigo_control,
                                     TO_CHAR (a1.est_fecsys, 'dd/mm/yyyy')
                                         fecha_orden,
                                     f1.ctl_tipo_documento origen_control,
                                     DECODE (f1.ctl_tipo_doc_identidad,
                                             'NIT', TO_CHAR (f1.ctl_nit),
                                             TO_CHAR (f1.ctl_ci))
                                         identidad_doc,
                                     DECODE (
                                         f1.ctl_tipo_doc_identidad,
                                         'NIT',
                                         UPPER (f1.ctl_razon_social),
                                         UPPER(   f1.ctl_nombres
                                               || ' '
                                               || f1.ctl_appat
                                               || ' '
                                               || f1.ctl_apmat))
                                         identidad_nombre,
                                     pkg_reporte.devuelve_fiscalizadores_reg (
                                         f1.ctl_control_id)
                                         fiscalizador,
                                     pkg_reporte.devuelve_fiscalizadores_acc (
                                         f1.ctl_control_id)
                                         fiscalizador_nuevo,
                                     pkg_reporte.devuelve_jefe_reg (
                                         f1.ctl_control_id)
                                         supervisor,
                                     pkg_reporte.devuelve_jefe_acc (
                                         f1.ctl_control_id)
                                         supervisor_nuevo,
                                     TO_CHAR (noti.not_fecha_notificacion,
                                              'dd/mm/yyyy')
                                         fecha_notificacion,
                                     noti.not_obs_notificacion
                                         observacion_notificacion,
                                     noti.not_tipo_notificacion
                                         tipo_notificacion,
                                     pkg_reporte.devuelve_nombre_fun (
                                         noti.not_usuario)
                                         usuario_notificacion,
                                     con.con_tipo_doc_con,
                                     con.con_num_doc_con,
                                     TO_CHAR (con.con_fecha_doc_con,
                                              'dd/mm/yyyy')
                                         con_fecha_doc_con,
                                     con.con_usuario,
                                     pkg_reporte.devuelve_info_conclusion (
                                         f1.ctl_control_id,
                                         con.con_tipo_doc_con)
                                         info_con,
                                     e1.est_estado estado_control,
                                     pkg_reporte.devuelve_ilicitos (
                                         f1.ctl_control_id)
                                         ilicitos,
                                     TO_CHAR (
                                         noti.not_fecha_notificacion
                                         + NVL (in1.inn_plazo_conclusion, 0),
                                         'dd/mm/yyyy')
                                         fecha_est_con,
                                     pkg_reporte.tributo_pagado_orden (
                                         f1.ctl_control_id,
                                         'GA')
                                         tp_gao,
                                     pkg_reporte.tributo_pagado_orden (
                                         f1.ctl_control_id,
                                         'IVA')
                                         tp_ivao,
                                     pkg_reporte.tributo_pagado_orden (
                                         f1.ctl_control_id,
                                         'ICE')
                                         tp_iceo,
                                     pkg_reporte.tributo_pagado_orden (
                                         f1.ctl_control_id,
                                         'IEHD')
                                         tp_iehdo,
                                     pkg_reporte.tributo_pagado_orden (
                                         f1.ctl_control_id,
                                         'ICD')
                                         tp_icdo,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'OP')
                                         tm_op,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'CA DUI')
                                         tm_cadui,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'CAO')
                                         tm_cao,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'CC')
                                         tm_cc,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'CD')
                                         tm_cd,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'DF')
                                         tm_df,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'CI FP')
                                         tm_cifp,
                                     pkg_reporte.multa_pagada_orden (
                                         f1.ctl_control_id,
                                         'GE FP')
                                         tm_gefp,
                                     res.cra_saldo_por_cobrar saldo_fp,
                                     pkg_reporte.tipocambio (TRUNC (SYSDATE),
                                                             'UFV')
                                         tc_ufvhoy,
                                     f1.ctl_control_id
                              FROM   fis_estado a1,
                                     fis_control f1,
                                     fis_gerencia ger,
                                     fis_notificacion noti,
                                     fis_conclusion con,
                                     fis_estado e1,
                                     fis_info_notificacion in1,
                                     fis_con_resadmin res
                             WHERE   a1.est_fecsys BETWEEN TO_DATE (
                                                               prm_fecini,
                                                               'dd/mm/yyyy')
                                                       AND  TO_DATE (
                                                                prm_fecfin,
                                                                'dd/mm/yyyy')
                                     AND a1.est_estado = 'REGISTRADO'
                                     AND a1.est_lstope = 'U'
                                     AND a1.ctl_control_id = f1.ctl_control_id
                                     AND e1.est_num = 0
                                     AND e1.est_lstope = 'U'
                                     AND e1.ctl_control_id = f1.ctl_control_id
                                     AND in1.inn_num = 0
                                     AND in1.inn_lstope = 'U'
                                     AND in1.ctl_control_id = f1.ctl_control_id
                                     AND ger.ger_codigo = f1.ctl_cod_gerencia
                                     AND ger.reg_lstope = 'U'
                                     AND f1.ctl_num = 0
                                     AND f1.ctl_lstope = 'U'
                                     AND f1.ctl_cod_gerencia LIKE v_gerencia
                                     AND f1.ctl_cod_tipo LIKE prm_control
                                     AND (f1.ctl_nit = prm_nit
                                          OR f1.ctl_ci = prm_nit)
                                     AND noti.ctl_control_id =
                                            f1.ctl_control_id
                                     AND noti.not_num = 0
                                     AND noti.not_lstope = 'U'
                                     AND con.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND con.con_num(+) = 0
                                     AND con.con_lstope(+) = 'U'
                                     AND res.ctl_control_id(+) =
                                            f1.ctl_control_id
                                     AND res.cra_num(+) = 0
                                     AND res.cra_lstope(+) = 'U') tbl
                ORDER BY   1,
                           2,
                           3,
                           4;
        END IF;

        RETURN cr;
    END;

    FUNCTION devuelve_fiscalizadores_reg (prm_control IN VARCHAR2)
        RETURN VARCHAR2
    IS
        res   VARCHAR2 (2000) := 0;
    BEGIN
        SELECT   reverse(SUBSTR (
                             reverse(RTRIM (
                                         XMLAGG(XMLELEMENT (
                                                    e,
                                                       u.usucodusu
                                                    || ':'
                                                    || u.usunombre
                                                    || ' '
                                                    || u.usuapepat
                                                    || ' '
                                                    || u.usuapemat
                                                    || ', ')).EXTRACT (
                                             '//text()').EXTRACT ('//text()'),
                                         ';')),
                             1))
          INTO   res
          FROM   fis_fiscalizador a, usuario.usuario u
         WHERE       a.ctl_control_id = prm_control
                 AND fis_cargo = 'FISCALIZADOR'
                 AND fis_num = 0
                 AND fis_lstope = 'U'
                 AND u.usucodusu = a.fis_codigo_fiscalizador
                 AND u.usu_num = 0;

        RETURN res;
    END;

    FUNCTION devuelve_fiscalizadores_recibo (prm_control IN VARCHAR2)
        RETURN VARCHAR2
    IS
        res      VARCHAR2 (2000) := 0;
        existe   NUMBER (18, 2);
    BEGIN
        SELECT   COUNT (1)
          INTO   existe
          FROM   fis_recibos a
         WHERE       a.ctl_control_id = prm_control
                 AND a.rec_num = 0
                 AND a.rec_lstope = 'U';

        IF existe = 0
        THEN
            res := '-';
        ELSE
            SELECT   reverse(SUBSTR (
                                 reverse(RTRIM (
                                             XMLAGG(XMLELEMENT (
                                                        e,
                                                           t.usucodusu
                                                        || ':'
                                                        || t.usunombre
                                                        || ' '
                                                        || t.usuapepat
                                                        || ' '
                                                        || t.usuapemat
                                                        || ', ')).EXTRACT('//text()').EXTRACT('//text()'),
                                             ';')),
                                 1))
              INTO   res
              FROM   (SELECT   DISTINCT u.usucodusu,
                                        u.usunombre,
                                        u.usuapepat,
                                        u.usuapemat
                        FROM   fis_recibos a, usuario.usuario u
                       WHERE       a.ctl_control_id = prm_control
                               AND a.rec_num = 0
                               AND a.rec_lstope = 'U'
                               AND u.usucodusu = a.rec_usuario
                               AND u.usu_num = 0) t;
        END IF;

        RETURN res;
    END;


    FUNCTION devuelve_fiscalizadores_acc (prm_control IN VARCHAR2)
        RETURN VARCHAR2
    IS
        res   VARCHAR2 (2000) := 0;
    BEGIN
        SELECT   reverse(SUBSTR (
                             reverse(RTRIM (
                                         XMLAGG(XMLELEMENT (
                                                    e,
                                                       u.usucodusu
                                                    || ':'
                                                    || u.usunombre
                                                    || ' '
                                                    || u.usuapepat
                                                    || ' '
                                                    || u.usuapemat
                                                    || ', ')).EXTRACT (
                                             '//text()').EXTRACT ('//text()'),
                                         ';')),
                             1))
          INTO   res
          FROM   fis_acceso a, usuario.usuario u
         WHERE       a.ctl_control_id = prm_control
                 AND fis_cargo = 'FISCALIZADOR'
                 AND fis_num = 0
                 AND fis_lstope = 'U'
                 AND u.usucodusu = a.fis_codigo_fiscalizador
                 AND u.usu_num = 0;

        RETURN res;
    END;

    FUNCTION devuelve_jefe_reg (prm_control IN VARCHAR2)
        RETURN VARCHAR2
    IS
        res   VARCHAR2 (2000) := 0;
    BEGIN
        SELECT   reverse(SUBSTR (
                             reverse(RTRIM (
                                         XMLAGG(XMLELEMENT (
                                                    e,
                                                       u.usucodusu
                                                    || ':'
                                                    || u.usunombre
                                                    || ' '
                                                    || u.usuapepat
                                                    || ' '
                                                    || u.usuapemat
                                                    || ', ')).EXTRACT (
                                             '//text()').EXTRACT ('//text()'),
                                         ';')),
                             1))
          INTO   res
          FROM   fis_fiscalizador a, usuario.usuario u
         WHERE       a.ctl_control_id = prm_control
                 AND fis_cargo IN ('JEFE', 'SUPERVISOR')
                 AND fis_num = 0
                 AND fis_lstope = 'U'
                 AND u.usucodusu = a.fis_codigo_fiscalizador
                 AND u.usu_num = 0;

        RETURN res;
    END;


    FUNCTION devuelve_jefe_acc (prm_control IN VARCHAR2)
        RETURN VARCHAR2
    IS
        res   VARCHAR2 (2000) := 0;
    BEGIN
        SELECT   reverse(SUBSTR (
                             reverse(RTRIM (
                                         XMLAGG(XMLELEMENT (
                                                    e,
                                                       u.usucodusu
                                                    || ':'
                                                    || u.usunombre
                                                    || ' '
                                                    || u.usuapepat
                                                    || ' '
                                                    || u.usuapemat
                                                    || ', ')).EXTRACT (
                                             '//text()').EXTRACT ('//text()'),
                                         ';')),
                             1))
          INTO   res
          FROM   fis_acceso a, usuario.usuario u
         WHERE       a.ctl_control_id = prm_control
                 AND fis_cargo IN ('JEFE', 'SUPERVISOR')
                 AND fis_num = 0
                 AND fis_lstope = 'U'
                 AND u.usucodusu = a.fis_codigo_fiscalizador
                 AND u.usu_num = 0;

        RETURN res;
    END;

    FUNCTION devuelve_nombre_fun (prm_usuario IN VARCHAR2)
        RETURN VARCHAR2
    IS
        res   VARCHAR2 (2000) := 0;
    BEGIN
        SELECT      u.usucodusu
                 || ':'
                 || u.usunombre
                 || ' '
                 || u.usuapepat
                 || ' '
                 || u.usuapemat
          INTO   res
          FROM   usuario.usuario u
         WHERE   u.usucodusu = prm_usuario AND u.usu_num = 0;

        RETURN res;
    END;

    FUNCTION devuelve_info_conclusion (prm_control           IN VARCHAR2,
                                       prm_tipo_conclusion   IN VARCHAR2)
        RETURN VARCHAR2
    IS
        res   VARCHAR2 (1000) := '';
    BEGIN
        IF prm_tipo_conclusion = 'VISTA DE CARGO'
        THEN
            SELECT      a.cvc_numero_informe
                     || '&'
                     || TO_CHAR (a.cvc_fecha_informe, 'dd/mm/yyyy')
                     || '&'
                     || a.cvc_gerencia_legal
                     || '&'
                     || pkg_reporte.devuelve_nombre_fun (a.cvc_usuario)
                     || '&'
                     || a.cvc_numero_vc
                     || '&'
                     || TO_CHAR (a.cvc_fecha_vc, 'dd/mm/yyyy')
                     || '&'
                     || TO_CHAR (a.cvc_fecha_notificacion, 'dd/mm/yyyy')
                     || '&'
                     || a.cvc_tipo_notificacion
                     || '&'
                     || TO_CHAR (a.cvc_fecha_ci_remision, 'dd/mm/yyyy')
                     || '&'
                     || a.cvc_ci_remision
                     || '&'
              INTO   res
              FROM   fis_con_viscargo a
             WHERE       a.cvc_num = 0
                     AND a.cvc_lstope = 'U'
                     AND a.ctl_control_id = prm_control;
        END IF;

        IF prm_tipo_conclusion =
               'RESOLUCION DETERMINATIVA FINAL Y SIN VISTA DE CARGO'
        THEN
            SELECT      a.crd_numero_informe
                     || '&'
                     || TO_CHAR (a.crd_fecha_informe, 'dd/mm/yyyy')
                     || '&'
                     || '-'
                     || '&'
                     || pkg_reporte.devuelve_nombre_fun (a.crd_usuario)
                     || '&'
                     || a.crd_rd_final
                     || '&'
                     || TO_CHAR (a.crd_fecha_not_rd_final, 'dd/mm/yyyy')
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
              INTO   res
              FROM   fis_con_resdeter a
             WHERE       a.crd_num = 0
                     AND a.crd_lstope = 'U'
                     AND a.ctl_control_id = prm_control;
        END IF;

        IF prm_tipo_conclusion = 'ACTA DE INTERVENCION'
        THEN
            SELECT      a.cai_numero_informe
                     || '&'
                     || TO_CHAR (a.cai_fecha_informe, 'dd/mm/yyyy')
                     || '&'
                     || cai_gerencia_legal
                     || '&'
                     || pkg_reporte.devuelve_nombre_fun (a.cai_usuario)
                     || '&'
                     || cai_acta_interv
                     || '&'
                     || cai_fecha_acta_interv
                     || '&'
                     || TO_CHAR (a.cai_fecha_not_ai, 'dd/mm/yyyy')
                     || '&'
                     || a.cai_tipo_not_ai
                     || '&'
                     || '&'
                     || '&'
              INTO   res
              FROM   fis_con_actainter a
             WHERE       a.cai_num = 0
                     AND a.cai_lstope = 'U'
                     AND a.ctl_control_id = prm_control;
        END IF;

        IF prm_tipo_conclusion =
               'RESOLUCION ADMINISTRATIVA Y DETERMINATIVA DE FACILIDADES DE PAGO'
        THEN
            SELECT      a.cra_numero_informe
                     || '&'
                     || TO_CHAR (a.cra_fecha_informe, 'dd/mm/yyyy')
                     || '&'
                     || a.cra_gerencia_legal
                     || '&'
                     || pkg_reporte.devuelve_nombre_fun (a.cra_usuario)
                     || '&'
                     || a.cra_numero_ra
                     || '&'
                     || TO_CHAR (a.cra_fecha_ra, 'dd/mm/yyyy')
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || TO_CHAR (a.cra_fecha_remision_set, 'dd/mm/yyyy')
                     || '&'
                     || a.cra_ci_remision_set
                     || '&'
              INTO   res
              FROM   fis_con_resadmin a
             WHERE       a.cra_num = 0
                     AND a.cra_lstope = 'U'
                     AND a.ctl_control_id = prm_control;
        END IF;

        IF prm_tipo_conclusion = 'AUTO INICIAL DE SUMARIO CONTRAVENCIONAL'
        THEN
            SELECT      a.cas_numero_informe
                     || '&'
                     || TO_CHAR (a.cas_fecha_informe, 'dd/mm/yyyy')
                     || '&'
                     || a.cas_gerencia_legal
                     || '&'
                     || pkg_reporte.devuelve_nombre_fun (a.cas_usuario)
                     || '&'
                     || a.cas_numero_aisc
                     || '&'
                     || '-'
                     || '&'
                     || TO_CHAR (a.cas_fecha_notificacion, 'dd/mm/yyyy')
                     || '&'
                     || '-'
                     || '&'
                     || TO_CHAR (a.cas_fecha_ci, 'dd/mm/yyyy')
                     || '&'
                     || a.cas_ci_remision_gr
                     || '&'
              INTO   res
              FROM   fis_con_autoinicial a
             WHERE       a.cas_num = 0
                     AND a.cas_lstope = 'U'
                     AND a.ctl_control_id = prm_control;
        END IF;

        IF res IS NULL
        THEN
            SELECT      '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
              INTO   res
              FROM   DUAL;
        END IF;

        RETURN res;
    END;

    FUNCTION devuelve_ampliatoria (prm_control   IN VARCHAR2,
                                   prm_dui       IN VARCHAR2)
        RETURN VARCHAR2
    IS
        res          VARCHAR2 (300) := '';
        v_reg_year   VARCHAR2 (4);
        v_key_cuo    VARCHAR2 (3);
        v_reg_nber   VARCHAR (12);
        existe       NUMBER;
    BEGIN
        SELECT   SUBSTR (prm_dui, 0, 4),
                 SUBSTR (prm_dui, 6, 3),
                 SUBSTR (prm_dui, 12, LENGTH (prm_dui) - 11)
          INTO   v_reg_year, v_key_cuo, v_reg_nber
          FROM   DUAL;

        SELECT   COUNT (1)
          INTO   existe
          FROM   ops$asy.sad_gen a
         WHERE       a.sad_reg_year = v_reg_year
                 AND a.key_cuo = v_key_cuo
                 AND a.sad_reg_serial = 'C'
                 AND a.sad_reg_nber = v_reg_nber
                 AND a.sad_num = 0;

        IF existe = 0
        THEN
            RETURN '-' || '&' || '-' || '&' || '-' || '&' || '-' || '&'
;
        ELSE
            SELECT   b.ctl_cod_gestion
                     || DECODE (b.ctl_cod_tipo,
                                'DIFERIDO', 'CD',
                                'POSTERIOR', 'FP',
                                'AMPLIATORIA DIFERIDO', 'CD',
                                'AMPLIATORIA POSTERIOR', 'FP',
                                '-')
                     || b.ctl_cod_gerencia
                     || DECODE (
                            b.ctl_amp_correlativo,
                            NULL,
                            '00',
                            DECODE (LENGTH (b.ctl_amp_correlativo),
                                    1, '0' || b.ctl_amp_correlativo,
                                    b.ctl_amp_correlativo))
                     || DECODE (LENGTH (b.ctl_cod_numero),
                                1, '0000' || b.ctl_cod_numero,
                                2, '000' || b.ctl_cod_numero,
                                3, '00' || b.ctl_cod_numero,
                                4, '0' || b.ctl_cod_numero,
                                b.ctl_cod_numero)
                     || '&'
                     || pkg_general.devuelve_fecha_registro (
                            b.ctl_control_id)
                     || '&'
                     || DECODE (b.ctl_tipo_doc_identidad,
                                'NIT', TO_CHAR (b.ctl_nit),
                                TO_CHAR (b.ctl_ci))
                     || '&'
                     || DECODE (
                            b.ctl_tipo_doc_identidad,
                            'NIT',
                            UPPER (b.ctl_razon_social),
                            UPPER(   b.ctl_nombres
                                  || ' '
                                  || b.ctl_appat
                                  || ' '
                                  || b.ctl_apmat))
                     || '&'
              INTO   res
              FROM   fis_control a,
                     fis_control b,
                     fis_alcance alc,
                     fis_alcance_amp alam
             WHERE       a.ctl_num = 0
                     AND a.ctl_lstope = 'U'
                     AND a.ctl_cod_gestion = b.ctl_cod_gestion
                     AND b.ctl_amp_control = a.ctl_cod_tipo
                     AND a.ctl_cod_gerencia = b.ctl_cod_gerencia
                     AND a.ctl_cod_numero = b.ctl_cod_numero
                     AND b.ctl_num = 0
                     AND b.ctl_lstope = 'U'
                     AND a.ctl_control_id = 20171
                     AND b.ctl_amp_correlativo IS NOT NULL
                     AND alc.alc_alcance_id = alam.alc_alcance_id
                     AND alam.ctl_control_id = b.ctl_control_id
                     AND alc.alc_gestion = v_reg_year
                     AND alc.alc_aduana = v_key_cuo
                     AND alc.alc_numero = v_reg_nber;

            IF res IS NULL
            THEN
                SELECT   '-' || '&' || '-' || '&' || '-' || '&' || '-' || '&'
                  INTO   res
                  FROM   DUAL;
            END IF;
        END IF;

        RETURN res;
    END;



    FUNCTION devuelve_ilicitos (prm_control IN VARCHAR2)
        RETURN VARCHAR2
    IS
        res   VARCHAR2 (30) := '';
    BEGIN
        SELECT      DECODE (SUM (omision_pago), 1, 'X', '')
                 || '&'
                 || DECODE (SUM (contrav_adu), 1, 'X', '')
                 || '&'
                 || DECODE (SUM (contrab_contrav), 1, 'X', '')
                 || '&'
                 || DECODE (SUM (contrab_delito), 1, 'X', '')
                 || '&'
                 || DECODE (SUM (defraudacion), 1, 'X', '')
                 || '&'
                 || DECODE (SUM (otros), 1, 'X', '')
                 || '&'
          INTO   res
          FROM   (SELECT   DECODE (a.res_ilicito, 'OP', 1, 0) omision_pago,
                           DECODE (a.res_ilicito, 'CA DUI', 1, 'CAO', 1, 0)
                               contrav_adu,
                           DECODE (a.res_ilicito, 'CC', 1, 0) contrab_contrav,
                           DECODE (a.res_ilicito, 'CD', 1, 0) contrab_delito,
                           DECODE (a.res_ilicito, 'DF', 1, 0) defraudacion,
                           DECODE (a.res_ilicito, 'OD', 1, 0) otros
                    FROM   fis_resultados a, fis_alcance b
                   WHERE       a.res_num = 0
                           AND a.res_lstope = 'U'
                           AND a.alc_alcance_id = b.alc_alcance_id
                           AND b.alc_num = 0
                           AND b.alc_lstope = 'U'
                           AND b.ctl_control_id = prm_control
                  UNION
                  SELECT   DECODE (a.ret_ilicito, 'OP', 1, 0) omision_pago,
                           DECODE (a.ret_ilicito, 'CA DUI', 1, 'CAO', 1, 0)
                               contrav_adu,
                           DECODE (a.ret_ilicito, 'CC', 1, 0) contrab_contrav,
                           DECODE (a.ret_ilicito, 'CD', 1, 0) contrab_delito,
                           DECODE (a.ret_ilicito, 'DF', 1, 0) defraudacion,
                           DECODE (a.ret_ilicito, 'OD', 1, 0) otros
                    FROM   fis_resultados_tramite a, fis_alcance b
                   WHERE       a.ret_num = 0
                           AND a.ret_lstope = 'U'
                           AND a.alc_alcance_id = b.alc_alcance_id
                           AND b.alc_num = 0
                           AND b.alc_lstope = 'U'
                           AND b.ctl_control_id = prm_control) tbl;

        IF res IS NULL
        THEN
            SELECT      '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
                     || '-'
                     || '&'
              INTO   res
              FROM   DUAL;
        END IF;

        RETURN res;
    END;


    FUNCTION tributo_pagado (prm_key_year   IN VARCHAR2,
                             prm_key_cuo    IN VARCHAR2,
                             prm_key_dec    IN VARCHAR2,
                             prm_key_nber   IN VARCHAR2,
                             prm_fecha      IN VARCHAR2,
                             prm_tax_cod       VARCHAR2)
        RETURN NUMBER
    IS
        res   NUMBER (18, 2) := 0;
    BEGIN
        IF prm_key_dec IS NULL
        THEN
            SELECT   SUM (pay.sad_pco_amount)
              INTO   res
              FROM   ops$asy.bo_sad_payment pay, ops$asy.unatitab una
             WHERE       pay.key_year = prm_key_year
                     AND pay.key_cuo = prm_key_cuo
                     AND pay.key_dec IS NULL
                     AND pay.key_nber = prm_key_nber
                     AND pay.sad_rcpt_date >=
                            TO_DATE (prm_fecha, 'dd/mm/yyyy')
                     AND una.ati_cod = pay.sad_pco_code
                     AND una.tax_cod = prm_tax_cod
                     AND una.lst_ope = 'U';
        ELSE
            SELECT   SUM (pay.sad_pco_amount)
              INTO   res
              FROM   ops$asy.bo_sad_payment pay, ops$asy.unatitab una
             WHERE       pay.key_year = prm_key_year
                     AND pay.key_cuo = prm_key_cuo
                     AND pay.key_dec = prm_key_dec
                     AND pay.key_nber = prm_key_nber
                     AND pay.sad_rcpt_date >=
                            TO_DATE (prm_fecha, 'dd/mm/yyyy')
                     AND una.ati_cod = pay.sad_pco_code
                     AND una.tax_cod = prm_tax_cod
                     AND una.lst_ope = 'U';
        END IF;

        RETURN res;
    END;

    FUNCTION tributo_pagado_orden (prm_control   IN VARCHAR2,
                                   prm_tax_cod   IN VARCHAR2)
        RETURN NUMBER
    IS
        res      NUMBER (18, 2);
        fecnot   VARCHAR2 (15);
    BEGIN
        SELECT   COUNT (1)
          INTO   res
          FROM   fis_notificacion f1
         WHERE       f1.ctl_control_id = prm_control
                 AND f1.not_num = 0
                 AND f1.not_lstope = 'U';

        IF res > 0
        THEN
            SELECT   f1.not_fecha_notificacion
              INTO   fecnot
              FROM   fis_notificacion f1
             WHERE       f1.ctl_control_id = prm_control
                     AND f1.not_num = 0
                     AND f1.not_lstope = 'U';

            SELECT   SUM (sad_pco_amount)
              INTO   res
              FROM   (SELECT   pay.sad_pco_amount
                        FROM   fis_alcance fa,
                               ops$asy.sad_gen g,
                               ops$asy.bo_sad_payment pay,
                               ops$asy.unatitab una
                       WHERE       fa.ctl_control_id = prm_control
                               AND fa.alc_tipo_tramite = 'DUI'
                               AND g.sad_reg_year = fa.alc_gestion
                               AND g.key_cuo = fa.alc_aduana
                               AND g.sad_reg_nber = fa.alc_numero
                               AND pay.key_year = g.key_year
                               AND pay.key_cuo = g.key_cuo
                               AND pay.key_dec IS NULL
                               AND pay.key_nber = g.key_nber
                               AND pay.sad_rcpt_date >=
                                      TO_DATE (fecnot, 'dd/mm/yyyy')
                               AND una.ati_cod = pay.sad_pco_code
                               AND una.tax_cod = prm_tax_cod
                               AND una.lst_ope = 'U'
                      UNION ALL
                      SELECT   pay.sad_pco_amount
                        FROM   fis_alcance fa,
                               ops$asy.sad_gen g,
                               ops$asy.bo_sad_payment pay,
                               ops$asy.unatitab una
                       WHERE       fa.ctl_control_id = prm_control
                               AND fa.alc_tipo_tramite = 'DUI'
                               AND g.sad_reg_year = fa.alc_gestion
                               AND g.key_cuo = fa.alc_aduana
                               AND g.sad_reg_nber = fa.alc_numero
                               AND pay.key_year = g.key_year
                               AND pay.key_cuo = g.key_cuo
                               AND g.key_dec IS NOT NULL
                               AND pay.key_dec = g.key_dec
                               AND pay.key_nber = g.key_nber
                               AND pay.sad_rcpt_date >=
                                      TO_DATE (fecnot, 'dd/mm/yyyy')
                               AND una.ati_cod = pay.sad_pco_code
                               AND una.tax_cod = prm_tax_cod
                               AND una.lst_ope = 'U') tbl;
        END IF;

        RETURN res;
    END;

    FUNCTION multa_pagada_orden (prm_control    IN VARCHAR2,
                                 prm_concepto   IN VARCHAR2)
        RETURN NUMBER
    IS
        res      NUMBER (18, 2);
        fecnot   VARCHAR2 (10);
    BEGIN
        SELECT   COUNT (1)
          INTO   res
          FROM   fis_recibos a
         WHERE       a.ctl_control_id = prm_control
                 AND a.rec_num = 0
                 AND a.rec_lstope = 'U'
                 AND a.rec_tipo = prm_concepto;

        IF res > 0
        THEN
            SELECT   SUM (a.rec_importe)
              INTO   res
              FROM   fis_recibos a
             WHERE       a.ctl_control_id = prm_control
                     AND a.rec_num = 0
                     AND a.rec_lstope = 'U'
                     AND a.rec_tipo = prm_concepto;
        END IF;

        RETURN res;
    END;
END;
/

